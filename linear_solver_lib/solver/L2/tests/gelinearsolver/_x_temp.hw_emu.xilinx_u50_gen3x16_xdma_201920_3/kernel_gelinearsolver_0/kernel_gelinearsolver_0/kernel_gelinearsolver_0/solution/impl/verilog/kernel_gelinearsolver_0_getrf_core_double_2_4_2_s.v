// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_gelinearsolver_0_getrf_core_double_2_4_2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m,
        n,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        matA_1_address0,
        matA_1_ce0,
        matA_1_we0,
        matA_1_d0,
        matA_1_q0,
        matA_1_address1,
        matA_1_ce1,
        matA_1_we1,
        matA_1_d1,
        matA_1_q1,
        matA_0_address0,
        matA_0_ce0,
        matA_0_we0,
        matA_0_d0,
        matA_0_q0,
        matA_0_address1,
        matA_0_ce1,
        matA_0_we1,
        matA_0_d1,
        matA_0_q1,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_fsm_state1 = 54'd1;
parameter    ap_ST_fsm_state2 = 54'd2;
parameter    ap_ST_fsm_state3 = 54'd4;
parameter    ap_ST_fsm_state4 = 54'd8;
parameter    ap_ST_fsm_pp0_stage0 = 54'd16;
parameter    ap_ST_fsm_pp0_stage1 = 54'd32;
parameter    ap_ST_fsm_pp0_stage2 = 54'd64;
parameter    ap_ST_fsm_state11 = 54'd128;
parameter    ap_ST_fsm_pp1_stage0 = 54'd256;
parameter    ap_ST_fsm_pp1_stage1 = 54'd512;
parameter    ap_ST_fsm_state17 = 54'd1024;
parameter    ap_ST_fsm_state18 = 54'd2048;
parameter    ap_ST_fsm_state19 = 54'd4096;
parameter    ap_ST_fsm_state20 = 54'd8192;
parameter    ap_ST_fsm_state21 = 54'd16384;
parameter    ap_ST_fsm_state22 = 54'd32768;
parameter    ap_ST_fsm_state23 = 54'd65536;
parameter    ap_ST_fsm_state24 = 54'd131072;
parameter    ap_ST_fsm_state25 = 54'd262144;
parameter    ap_ST_fsm_state26 = 54'd524288;
parameter    ap_ST_fsm_state27 = 54'd1048576;
parameter    ap_ST_fsm_state28 = 54'd2097152;
parameter    ap_ST_fsm_state29 = 54'd4194304;
parameter    ap_ST_fsm_state30 = 54'd8388608;
parameter    ap_ST_fsm_state31 = 54'd16777216;
parameter    ap_ST_fsm_state32 = 54'd33554432;
parameter    ap_ST_fsm_state33 = 54'd67108864;
parameter    ap_ST_fsm_state34 = 54'd134217728;
parameter    ap_ST_fsm_state35 = 54'd268435456;
parameter    ap_ST_fsm_state36 = 54'd536870912;
parameter    ap_ST_fsm_state37 = 54'd1073741824;
parameter    ap_ST_fsm_state38 = 54'd2147483648;
parameter    ap_ST_fsm_state39 = 54'd4294967296;
parameter    ap_ST_fsm_state40 = 54'd8589934592;
parameter    ap_ST_fsm_state41 = 54'd17179869184;
parameter    ap_ST_fsm_state42 = 54'd34359738368;
parameter    ap_ST_fsm_state43 = 54'd68719476736;
parameter    ap_ST_fsm_state44 = 54'd137438953472;
parameter    ap_ST_fsm_state45 = 54'd274877906944;
parameter    ap_ST_fsm_state46 = 54'd549755813888;
parameter    ap_ST_fsm_state47 = 54'd1099511627776;
parameter    ap_ST_fsm_state48 = 54'd2199023255552;
parameter    ap_ST_fsm_state49 = 54'd4398046511104;
parameter    ap_ST_fsm_state50 = 54'd8796093022208;
parameter    ap_ST_fsm_state51 = 54'd17592186044416;
parameter    ap_ST_fsm_state52 = 54'd35184372088832;
parameter    ap_ST_fsm_state53 = 54'd70368744177664;
parameter    ap_ST_fsm_state54 = 54'd140737488355328;
parameter    ap_ST_fsm_pp3_stage0 = 54'd281474976710656;
parameter    ap_ST_fsm_state110 = 54'd562949953421312;
parameter    ap_ST_fsm_state111 = 54'd1125899906842624;
parameter    ap_ST_fsm_state112 = 54'd2251799813685248;
parameter    ap_ST_fsm_pp4_stage0 = 54'd4503599627370496;
parameter    ap_ST_fsm_state168 = 54'd9007199254740992;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] m;
input  [31:0] n;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read3;
output  [2:0] matA_1_address0;
output   matA_1_ce0;
output   matA_1_we0;
output  [63:0] matA_1_d0;
input  [63:0] matA_1_q0;
output  [2:0] matA_1_address1;
output   matA_1_ce1;
output   matA_1_we1;
output  [63:0] matA_1_d1;
input  [63:0] matA_1_q1;
output  [2:0] matA_0_address0;
output   matA_0_ce0;
output   matA_0_we0;
output  [63:0] matA_0_d0;
input  [63:0] matA_0_q0;
output  [2:0] matA_0_address1;
output   matA_0_ce1;
output   matA_0_we1;
output  [63:0] matA_0_d1;
input  [63:0] matA_0_q1;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] matA_1_address0;
reg matA_1_ce0;
reg matA_1_we0;
reg[63:0] matA_1_d0;
reg[2:0] matA_1_address1;
reg matA_1_ce1;
reg matA_1_we1;
reg[63:0] matA_1_d1;
reg[2:0] matA_0_address0;
reg matA_0_ce0;
reg matA_0_we0;
reg[63:0] matA_0_d0;
reg[2:0] matA_0_address1;
reg matA_0_ce1;
reg matA_0_we1;
reg[63:0] matA_0_d1;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;

(* fsm_encoding = "none" *) reg   [53:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] k_4_reg_417;
reg   [31:0] k_4_reg_417_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] pidrow_reg_428;
reg   [31:0] pidcu_reg_440;
reg   [63:0] pmax_reg_452;
reg   [31:0] prow_reg_464;
reg   [2:0] k_1_reg_507;
reg   [2:0] k_1_reg_507_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state14_pp1_stage0_iter1;
wire    ap_block_state169_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [31:0] i_reg_529;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state55_pp3_stage0_iter0;
wire    ap_block_state56_pp3_stage0_iter1;
wire    ap_block_state57_pp3_stage0_iter2;
wire    ap_block_state58_pp3_stage0_iter3;
wire    ap_block_state59_pp3_stage0_iter4;
wire    ap_block_state60_pp3_stage0_iter5;
wire    ap_block_state61_pp3_stage0_iter6;
wire    ap_block_state62_pp3_stage0_iter7;
wire    ap_block_state63_pp3_stage0_iter8;
wire    ap_block_state64_pp3_stage0_iter9;
wire    ap_block_state65_pp3_stage0_iter10;
wire    ap_block_state66_pp3_stage0_iter11;
wire    ap_block_state67_pp3_stage0_iter12;
wire    ap_block_state68_pp3_stage0_iter13;
wire    ap_block_state69_pp3_stage0_iter14;
wire    ap_block_state70_pp3_stage0_iter15;
wire    ap_block_state71_pp3_stage0_iter16;
wire    ap_block_state72_pp3_stage0_iter17;
wire    ap_block_state73_pp3_stage0_iter18;
wire    ap_block_state74_pp3_stage0_iter19;
wire    ap_block_state75_pp3_stage0_iter20;
wire    ap_block_state76_pp3_stage0_iter21;
wire    ap_block_state77_pp3_stage0_iter22;
wire    ap_block_state78_pp3_stage0_iter23;
wire    ap_block_state79_pp3_stage0_iter24;
wire    ap_block_state80_pp3_stage0_iter25;
wire    ap_block_state81_pp3_stage0_iter26;
wire    ap_block_state82_pp3_stage0_iter27;
wire    ap_block_state83_pp3_stage0_iter28;
wire    ap_block_state84_pp3_stage0_iter29;
wire    ap_block_state85_pp3_stage0_iter30;
wire    ap_block_state86_pp3_stage0_iter31;
wire    ap_block_state87_pp3_stage0_iter32;
wire    ap_block_state88_pp3_stage0_iter33;
wire    ap_block_state89_pp3_stage0_iter34;
wire    ap_block_state90_pp3_stage0_iter35;
wire    ap_block_state91_pp3_stage0_iter36;
wire    ap_block_state92_pp3_stage0_iter37;
wire    ap_block_state93_pp3_stage0_iter38;
wire    ap_block_state94_pp3_stage0_iter39;
wire    ap_block_state95_pp3_stage0_iter40;
wire    ap_block_state96_pp3_stage0_iter41;
wire    ap_block_state97_pp3_stage0_iter42;
wire    ap_block_state98_pp3_stage0_iter43;
wire    ap_block_state99_pp3_stage0_iter44;
wire    ap_block_state100_pp3_stage0_iter45;
wire    ap_block_state101_pp3_stage0_iter46;
wire    ap_block_state102_pp3_stage0_iter47;
wire    ap_block_state103_pp3_stage0_iter48;
wire    ap_block_state104_pp3_stage0_iter49;
wire    ap_block_state105_pp3_stage0_iter50;
wire    ap_block_state106_pp3_stage0_iter51;
wire    ap_block_state107_pp3_stage0_iter52;
wire    ap_block_state108_pp3_stage0_iter53;
wire    ap_block_state109_pp3_stage0_iter54;
wire    ap_block_pp3_stage0_11001;
reg   [31:0] i_2_reg_541;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state113_pp4_stage0_iter0;
wire    ap_block_state114_pp4_stage0_iter1;
wire    ap_block_state115_pp4_stage0_iter2;
wire    ap_block_state116_pp4_stage0_iter3;
wire    ap_block_state117_pp4_stage0_iter4;
wire    ap_block_state118_pp4_stage0_iter5;
wire    ap_block_state119_pp4_stage0_iter6;
wire    ap_block_state120_pp4_stage0_iter7;
wire    ap_block_state121_pp4_stage0_iter8;
wire    ap_block_state122_pp4_stage0_iter9;
wire    ap_block_state123_pp4_stage0_iter10;
wire    ap_block_state124_pp4_stage0_iter11;
wire    ap_block_state125_pp4_stage0_iter12;
wire    ap_block_state126_pp4_stage0_iter13;
wire    ap_block_state127_pp4_stage0_iter14;
wire    ap_block_state128_pp4_stage0_iter15;
wire    ap_block_state129_pp4_stage0_iter16;
wire    ap_block_state130_pp4_stage0_iter17;
wire    ap_block_state131_pp4_stage0_iter18;
wire    ap_block_state132_pp4_stage0_iter19;
wire    ap_block_state133_pp4_stage0_iter20;
wire    ap_block_state134_pp4_stage0_iter21;
wire    ap_block_state135_pp4_stage0_iter22;
wire    ap_block_state136_pp4_stage0_iter23;
wire    ap_block_state137_pp4_stage0_iter24;
wire    ap_block_state138_pp4_stage0_iter25;
wire    ap_block_state139_pp4_stage0_iter26;
wire    ap_block_state140_pp4_stage0_iter27;
wire    ap_block_state141_pp4_stage0_iter28;
wire    ap_block_state142_pp4_stage0_iter29;
wire    ap_block_state143_pp4_stage0_iter30;
wire    ap_block_state144_pp4_stage0_iter31;
wire    ap_block_state145_pp4_stage0_iter32;
wire    ap_block_state146_pp4_stage0_iter33;
wire    ap_block_state147_pp4_stage0_iter34;
wire    ap_block_state148_pp4_stage0_iter35;
wire    ap_block_state149_pp4_stage0_iter36;
wire    ap_block_state150_pp4_stage0_iter37;
wire    ap_block_state151_pp4_stage0_iter38;
wire    ap_block_state152_pp4_stage0_iter39;
wire    ap_block_state153_pp4_stage0_iter40;
wire    ap_block_state154_pp4_stage0_iter41;
wire    ap_block_state155_pp4_stage0_iter42;
wire    ap_block_state156_pp4_stage0_iter43;
wire    ap_block_state157_pp4_stage0_iter44;
wire    ap_block_state158_pp4_stage0_iter45;
wire    ap_block_state159_pp4_stage0_iter46;
wire    ap_block_state160_pp4_stage0_iter47;
wire    ap_block_state161_pp4_stage0_iter48;
wire    ap_block_state162_pp4_stage0_iter49;
wire    ap_block_state163_pp4_stage0_iter50;
wire    ap_block_state164_pp4_stage0_iter51;
wire    ap_block_state165_pp4_stage0_iter52;
wire    ap_block_state166_pp4_stage0_iter53;
wire    ap_block_state167_pp4_stage0_iter54;
wire    ap_block_pp4_stage0_11001;
reg   [63:0] reg_570;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state7_pp0_stage2_iter0;
wire    ap_block_state10_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln78_2_reg_1530;
reg    ap_enable_reg_pp4_iter45;
reg   [0:0] icmp_ln43_1_reg_1827;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter44_reg;
reg   [63:0] reg_575;
reg    ap_enable_reg_pp3_iter45;
reg   [0:0] icmp_ln43_reg_1767;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter44_reg;
wire   [63:0] rows_0_q0;
reg   [63:0] reg_580;
wire    ap_CS_fsm_state18;
reg    ap_enable_reg_pp3_iter37;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter36_reg;
wire   [63:0] grp_fu_557_p2;
reg   [63:0] reg_586;
wire   [63:0] grp_fu_553_p2;
reg   [63:0] reg_591;
reg    ap_enable_reg_pp3_iter53;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter52_reg;
reg    ap_enable_reg_pp4_iter53;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter52_reg;
wire  signed [32:0] sext_ln61_fu_597_p1;
reg  signed [32:0] sext_ln61_reg_1450;
wire  signed [32:0] sext_ln61_1_fu_601_p1;
reg  signed [32:0] sext_ln61_1_reg_1455;
wire   [31:0] add_ln61_fu_605_p2;
reg   [31:0] add_ln61_reg_1460;
wire   [1:0] trunc_ln61_fu_611_p1;
reg   [1:0] trunc_ln61_reg_1465;
wire    ap_CS_fsm_state2;
wire   [31:0] indvars_iv_next19_fu_620_p2;
reg   [31:0] indvars_iv_next19_reg_1478;
wire   [31:0] zext_ln61_2_fu_640_p1;
reg   [31:0] zext_ln61_2_reg_1487;
wire   [0:0] icmp_ln61_fu_615_p2;
wire  signed [31:0] sub_ln61_fu_644_p2;
reg  signed [31:0] sub_ln61_reg_1493;
wire   [0:0] icmp_ln78_fu_650_p2;
reg   [0:0] icmp_ln78_reg_1498;
wire   [63:0] zext_ln61_fu_684_p1;
reg   [63:0] zext_ln61_reg_1502;
wire    ap_CS_fsm_state4;
wire   [2:0] trunc_ln61_1_fu_688_p1;
reg   [2:0] trunc_ln61_1_reg_1507;
wire   [31:0] grp_fu_679_p2;
reg   [31:0] mul_ln61_reg_1514;
wire   [0:0] idscu_fu_692_p1;
reg   [0:0] idscu_reg_1519;
wire   [31:0] new_upper_fu_701_p3;
reg   [31:0] new_upper_reg_1525;
wire   [0:0] icmp_ln78_2_fu_707_p2;
reg   [0:0] icmp_ln78_2_reg_1530_pp0_iter1_reg;
wire   [1:0] trunc_ln78_fu_739_p1;
reg   [1:0] trunc_ln78_reg_1544;
wire   [31:0] k_fu_743_p2;
reg   [31:0] k_reg_1549;
wire   [0:0] idcu_fu_749_p1;
reg   [0:0] idcu_reg_1554;
wire   [63:0] absa_fu_781_p1;
reg   [63:0] absa_reg_1559;
wire   [0:0] icmp_ln83_fu_814_p2;
reg   [0:0] icmp_ln83_reg_1565;
wire   [0:0] icmp_ln83_1_fu_820_p2;
reg   [0:0] icmp_ln83_1_reg_1570;
wire   [0:0] icmp_ln83_2_fu_826_p2;
reg   [0:0] icmp_ln83_2_reg_1575;
wire   [0:0] icmp_ln83_3_fu_832_p2;
reg   [0:0] icmp_ln83_3_reg_1580;
wire   [0:0] and_ln83_1_fu_869_p2;
reg   [0:0] and_ln83_1_reg_1585;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state6_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] prow_3_fu_875_p3;
reg   [31:0] prow_3_reg_1590;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] pidcu_2_fu_883_p3;
reg   [31:0] pidcu_2_reg_1595;
wire   [31:0] pidrow_2_fu_891_p3;
reg   [31:0] pidrow_2_reg_1600;
wire   [63:0] pmax_2_fu_899_p3;
wire   [31:0] pivot3_2_fu_994_p6;
reg   [31:0] pivot3_2_reg_1610;
wire    ap_CS_fsm_state11;
wire   [31:0] pivot2_2_fu_1008_p6;
reg   [31:0] pivot2_2_reg_1615;
wire   [31:0] pivot12_2_fu_1022_p6;
reg   [31:0] pivot12_2_reg_1620;
wire   [31:0] pivot_2_fu_1036_p6;
reg   [31:0] pivot_2_reg_1625;
wire   [2:0] tmp_s_fu_1050_p3;
reg   [2:0] tmp_s_reg_1630;
wire   [2:0] tmp_20_cast_fu_1066_p3;
reg   [2:0] tmp_20_cast_reg_1635;
wire   [0:0] icmp_ln96_fu_1078_p2;
reg   [0:0] icmp_ln96_reg_1640;
wire   [2:0] add_ln96_fu_1083_p2;
reg   [2:0] add_ln96_reg_1644;
reg    ap_enable_reg_pp1_iter0;
reg   [2:0] matA_0_addr_1_reg_1649;
reg   [2:0] matA_0_addr_1_reg_1649_pp1_iter1_reg;
reg   [2:0] matA_0_addr_2_reg_1655;
reg   [2:0] matA_0_addr_2_reg_1655_pp1_iter1_reg;
reg   [2:0] matA_0_addr_2_reg_1655_pp1_iter2_reg;
reg   [2:0] matA_1_addr_1_reg_1661;
reg   [2:0] matA_1_addr_1_reg_1661_pp1_iter1_reg;
reg   [2:0] matA_1_addr_2_reg_1667;
reg   [2:0] matA_1_addr_2_reg_1667_pp1_iter1_reg;
reg   [2:0] matA_1_addr_2_reg_1667_pp1_iter2_reg;
wire   [63:0] phi_ln102_fu_1111_p3;
reg   [63:0] phi_ln102_reg_1673;
reg   [63:0] phi_ln102_reg_1673_pp1_iter2_reg;
wire   [63:0] select_ln104_fu_1119_p3;
reg   [63:0] select_ln104_reg_1681;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln111_fu_1135_p2;
reg   [0:0] icmp_ln111_reg_1692;
wire   [31:0] new_upper6_fu_1150_p3;
reg   [31:0] new_upper6_reg_1696;
reg   [2:0] matA_0_addr_3_reg_1704;
wire    ap_CS_fsm_state19;
wire   [0:0] icmp_ln111_2_fu_1157_p2;
reg   [2:0] matA_1_addr_3_reg_1710;
wire   [0:0] trunc_ln117_fu_1189_p1;
reg   [0:0] trunc_ln117_reg_1716;
wire    ap_CS_fsm_state21;
wire   [63:0] select_ln117_fu_1193_p3;
reg   [63:0] select_ln117_reg_1720;
reg   [1:0] r_reg_1725;
wire    ap_CS_fsm_state52;
wire   [63:0] grp_fu_561_p2;
reg   [63:0] div_reg_1730;
wire   [31:0] j_2_fu_1216_p2;
wire    ap_CS_fsm_state53;
wire   [31:0] rs_fu_1232_p2;
reg   [31:0] rs_reg_1743;
wire    ap_CS_fsm_state54;
wire   [1:0] add_ln124_fu_1237_p2;
reg   [1:0] add_ln124_reg_1748;
wire   [31:0] sub_ln40_fu_1243_p2;
reg   [31:0] sub_ln40_reg_1753;
wire   [2:0] add_ln51_fu_1249_p2;
reg   [2:0] add_ln51_reg_1761;
wire   [0:0] icmp_ln43_fu_1254_p2;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter1_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter2_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter3_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter4_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter5_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter6_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter7_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter8_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter9_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter10_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter11_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter12_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter13_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter14_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter15_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter16_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter17_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter18_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter19_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter20_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter21_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter22_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter23_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter24_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter25_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter26_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter27_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter28_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter29_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter30_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter31_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter32_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter33_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter34_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter35_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter37_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter38_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter39_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter40_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter41_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter42_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter43_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter45_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter46_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter47_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter48_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter49_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter50_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter51_reg;
reg   [0:0] icmp_ln43_reg_1767_pp3_iter53_reg;
wire   [31:0] i_1_fu_1259_p2;
reg   [31:0] i_1_reg_1771;
reg    ap_enable_reg_pp3_iter0;
wire   [1:0] grp_fu_1265_p2;
reg   [1:0] udiv_ln50_reg_1776;
wire   [2:0] grp_fu_1270_p2;
reg   [2:0] urem_ln51_reg_1781;
wire   [2:0] add_ln53_fu_1313_p2;
reg   [2:0] add_ln53_reg_1786;
reg   [2:0] add_ln53_reg_1786_pp3_iter37_reg;
reg   [2:0] add_ln53_reg_1786_pp3_iter38_reg;
reg   [2:0] add_ln53_reg_1786_pp3_iter39_reg;
reg   [2:0] add_ln53_reg_1786_pp3_iter40_reg;
reg   [2:0] add_ln53_reg_1786_pp3_iter41_reg;
reg   [2:0] add_ln53_reg_1786_pp3_iter42_reg;
wire   [63:0] cols_0_q0;
reg   [63:0] cols_0_load_reg_1801;
reg   [2:0] matA_0_addr_4_reg_1806;
reg   [2:0] matA_0_addr_4_reg_1806_pp3_iter44_reg;
reg   [2:0] matA_0_addr_4_reg_1806_pp3_iter45_reg;
reg   [2:0] matA_0_addr_4_reg_1806_pp3_iter46_reg;
reg   [2:0] matA_0_addr_4_reg_1806_pp3_iter47_reg;
reg   [2:0] matA_0_addr_4_reg_1806_pp3_iter48_reg;
reg   [2:0] matA_0_addr_4_reg_1806_pp3_iter49_reg;
reg   [2:0] matA_0_addr_4_reg_1806_pp3_iter50_reg;
reg   [2:0] matA_0_addr_4_reg_1806_pp3_iter51_reg;
reg   [2:0] matA_0_addr_4_reg_1806_pp3_iter52_reg;
reg   [2:0] matA_0_addr_4_reg_1806_pp3_iter53_reg;
wire   [1:0] trunc_ln124_fu_1328_p1;
reg   [1:0] trunc_ln124_reg_1812;
wire    ap_CS_fsm_state110;
wire  signed [31:0] sub_ln43_fu_1332_p2;
reg  signed [31:0] sub_ln43_reg_1817;
wire   [31:0] grp_fu_1338_p2;
reg   [31:0] mul_ln43_reg_1822;
wire    ap_CS_fsm_state112;
wire   [0:0] icmp_ln43_1_fu_1343_p2;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter1_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter2_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter3_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter4_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter5_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter6_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter7_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter8_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter9_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter10_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter11_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter12_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter13_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter14_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter15_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter16_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter17_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter18_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter19_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter20_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter21_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter22_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter23_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter24_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter25_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter26_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter27_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter28_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter29_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter30_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter31_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter32_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter33_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter34_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter35_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter36_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter37_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter38_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter39_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter40_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter41_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter42_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter43_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter45_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter46_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter47_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter48_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter49_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter50_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter51_reg;
reg   [0:0] icmp_ln43_1_reg_1827_pp4_iter53_reg;
wire   [31:0] i_3_fu_1348_p2;
reg   [31:0] i_3_reg_1831;
reg    ap_enable_reg_pp4_iter0;
wire   [1:0] grp_fu_1354_p2;
reg   [1:0] udiv_ln50_1_reg_1836;
wire   [2:0] c_1_fu_1368_p2;
reg   [2:0] c_1_reg_1841;
wire   [2:0] add_ln53_1_fu_1402_p2;
reg   [2:0] add_ln53_1_reg_1847;
reg   [2:0] add_ln53_1_reg_1847_pp4_iter37_reg;
reg   [2:0] add_ln53_1_reg_1847_pp4_iter38_reg;
reg   [2:0] add_ln53_1_reg_1847_pp4_iter39_reg;
reg   [2:0] add_ln53_1_reg_1847_pp4_iter40_reg;
reg   [2:0] add_ln53_1_reg_1847_pp4_iter41_reg;
reg   [2:0] add_ln53_1_reg_1847_pp4_iter42_reg;
wire   [63:0] cols_1_q0;
reg   [63:0] cols_1_load_reg_1862;
reg    ap_enable_reg_pp4_iter37;
wire   [63:0] rows_1_q0;
reg   [63:0] rows_1_load_reg_1867;
reg   [2:0] matA_1_addr_4_reg_1872;
reg   [2:0] matA_1_addr_4_reg_1872_pp4_iter44_reg;
reg   [2:0] matA_1_addr_4_reg_1872_pp4_iter45_reg;
reg   [2:0] matA_1_addr_4_reg_1872_pp4_iter46_reg;
reg   [2:0] matA_1_addr_4_reg_1872_pp4_iter47_reg;
reg   [2:0] matA_1_addr_4_reg_1872_pp4_iter48_reg;
reg   [2:0] matA_1_addr_4_reg_1872_pp4_iter49_reg;
reg   [2:0] matA_1_addr_4_reg_1872_pp4_iter50_reg;
reg   [2:0] matA_1_addr_4_reg_1872_pp4_iter51_reg;
reg   [2:0] matA_1_addr_4_reg_1872_pp4_iter52_reg;
reg   [2:0] matA_1_addr_4_reg_1872_pp4_iter53_reg;
wire   [31:0] add_ln61_1_fu_1411_p2;
wire    ap_CS_fsm_state168;
wire    ap_block_pp0_stage2_subdone;
reg    ap_condition_pp0_exit_iter0_state7;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_state13_pp1_stage1_iter0;
wire    ap_block_state15_pp1_stage1_iter1;
wire    ap_block_state16_pp1_stage1_iter2;
wire    ap_block_pp1_stage1_subdone;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state55;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg    ap_enable_reg_pp3_iter8;
reg    ap_enable_reg_pp3_iter9;
reg    ap_enable_reg_pp3_iter10;
reg    ap_enable_reg_pp3_iter11;
reg    ap_enable_reg_pp3_iter12;
reg    ap_enable_reg_pp3_iter13;
reg    ap_enable_reg_pp3_iter14;
reg    ap_enable_reg_pp3_iter15;
reg    ap_enable_reg_pp3_iter16;
reg    ap_enable_reg_pp3_iter17;
reg    ap_enable_reg_pp3_iter18;
reg    ap_enable_reg_pp3_iter19;
reg    ap_enable_reg_pp3_iter20;
reg    ap_enable_reg_pp3_iter21;
reg    ap_enable_reg_pp3_iter22;
reg    ap_enable_reg_pp3_iter23;
reg    ap_enable_reg_pp3_iter24;
reg    ap_enable_reg_pp3_iter25;
reg    ap_enable_reg_pp3_iter26;
reg    ap_enable_reg_pp3_iter27;
reg    ap_enable_reg_pp3_iter28;
reg    ap_enable_reg_pp3_iter29;
reg    ap_enable_reg_pp3_iter30;
reg    ap_enable_reg_pp3_iter31;
reg    ap_enable_reg_pp3_iter32;
reg    ap_enable_reg_pp3_iter33;
reg    ap_enable_reg_pp3_iter34;
reg    ap_enable_reg_pp3_iter35;
reg    ap_enable_reg_pp3_iter36;
reg    ap_enable_reg_pp3_iter38;
reg    ap_enable_reg_pp3_iter39;
reg    ap_enable_reg_pp3_iter40;
reg    ap_enable_reg_pp3_iter41;
reg    ap_enable_reg_pp3_iter42;
reg    ap_enable_reg_pp3_iter43;
reg    ap_enable_reg_pp3_iter44;
reg    ap_enable_reg_pp3_iter46;
reg    ap_enable_reg_pp3_iter47;
reg    ap_enable_reg_pp3_iter48;
reg    ap_enable_reg_pp3_iter49;
reg    ap_enable_reg_pp3_iter50;
reg    ap_enable_reg_pp3_iter51;
reg    ap_enable_reg_pp3_iter52;
reg    ap_enable_reg_pp3_iter54;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state113;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
reg    ap_enable_reg_pp4_iter7;
reg    ap_enable_reg_pp4_iter8;
reg    ap_enable_reg_pp4_iter9;
reg    ap_enable_reg_pp4_iter10;
reg    ap_enable_reg_pp4_iter11;
reg    ap_enable_reg_pp4_iter12;
reg    ap_enable_reg_pp4_iter13;
reg    ap_enable_reg_pp4_iter14;
reg    ap_enable_reg_pp4_iter15;
reg    ap_enable_reg_pp4_iter16;
reg    ap_enable_reg_pp4_iter17;
reg    ap_enable_reg_pp4_iter18;
reg    ap_enable_reg_pp4_iter19;
reg    ap_enable_reg_pp4_iter20;
reg    ap_enable_reg_pp4_iter21;
reg    ap_enable_reg_pp4_iter22;
reg    ap_enable_reg_pp4_iter23;
reg    ap_enable_reg_pp4_iter24;
reg    ap_enable_reg_pp4_iter25;
reg    ap_enable_reg_pp4_iter26;
reg    ap_enable_reg_pp4_iter27;
reg    ap_enable_reg_pp4_iter28;
reg    ap_enable_reg_pp4_iter29;
reg    ap_enable_reg_pp4_iter30;
reg    ap_enable_reg_pp4_iter31;
reg    ap_enable_reg_pp4_iter32;
reg    ap_enable_reg_pp4_iter33;
reg    ap_enable_reg_pp4_iter34;
reg    ap_enable_reg_pp4_iter35;
reg    ap_enable_reg_pp4_iter36;
reg    ap_enable_reg_pp4_iter38;
reg    ap_enable_reg_pp4_iter39;
reg    ap_enable_reg_pp4_iter40;
reg    ap_enable_reg_pp4_iter41;
reg    ap_enable_reg_pp4_iter42;
reg    ap_enable_reg_pp4_iter43;
reg    ap_enable_reg_pp4_iter44;
reg    ap_enable_reg_pp4_iter46;
reg    ap_enable_reg_pp4_iter47;
reg    ap_enable_reg_pp4_iter48;
reg    ap_enable_reg_pp4_iter49;
reg    ap_enable_reg_pp4_iter50;
reg    ap_enable_reg_pp4_iter51;
reg    ap_enable_reg_pp4_iter52;
reg    ap_enable_reg_pp4_iter54;
reg   [1:0] rows_0_address0;
reg    rows_0_ce0;
wire   [1:0] rows_0_address1;
reg    rows_0_ce1;
reg    rows_0_we1;
wire   [1:0] rows_1_address0;
reg    rows_1_ce0;
wire   [1:0] rows_1_address1;
reg    rows_1_ce1;
reg    rows_1_we1;
wire   [1:0] cols_0_address0;
reg    cols_0_ce0;
wire   [1:0] cols_0_address1;
reg    cols_0_ce1;
reg    cols_0_we1;
wire   [1:0] cols_1_address0;
reg    cols_1_ce0;
wire   [1:0] cols_1_address1;
reg    cols_1_ce1;
reg    cols_1_we1;
reg   [31:0] pivot_0_reg_353;
reg   [31:0] pivot12_0_reg_363;
reg   [31:0] pivot2_0_reg_373;
reg   [31:0] pivot3_0_reg_383;
reg   [31:0] s_reg_393;
reg  signed [31:0] indvars_iv110_reg_405;
reg   [31:0] ap_phi_mux_k_4_phi_fu_420_p4;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage2;
reg   [31:0] ap_phi_mux_prow_phi_fu_467_p4;
reg   [1:0] ap_phi_mux_phi_ln92_phi_fu_478_p4;
reg   [1:0] phi_ln92_reg_475;
reg   [0:0] pidcu_0_lcssa_t_reg_484;
wire   [0:0] trunc_ln78_2_fu_910_p1;
reg   [0:0] ap_phi_mux_pidrow_0_lcssa_phi_fu_500_p4;
reg   [0:0] pidrow_0_lcssa_reg_496;
wire   [0:0] trunc_ln78_1_fu_905_p1;
reg   [2:0] ap_phi_mux_k_1_phi_fu_511_p4;
wire    ap_block_pp1_stage0;
reg   [31:0] j_reg_519;
reg   [31:0] ap_phi_mux_i_phi_fu_533_p4;
wire    ap_block_pp3_stage0;
reg   [31:0] ap_phi_mux_i_2_phi_fu_545_p4;
wire    ap_block_pp4_stage0;
wire   [63:0] zext_ln82_fu_733_p1;
wire   [63:0] p_cast_fu_1094_p1;
wire   [63:0] zext_ln104_fu_1105_p1;
wire   [63:0] zext_ln96_fu_1126_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] zext_ln117_1_fu_1183_p1;
wire   [63:0] zext_ln117_fu_1211_p1;
wire   [63:0] zext_ln53_fu_1291_p1;
wire   [63:0] zext_ln53_1_fu_1308_p1;
wire   [63:0] zext_ln53_4_fu_1319_p1;
wire   [63:0] zext_ln53_2_fu_1381_p1;
wire   [63:0] zext_ln53_3_fu_1398_p1;
wire   [63:0] zext_ln53_5_fu_1407_p1;
wire    ap_block_pp1_stage1_11001;
wire    ap_CS_fsm_state20;
reg   [63:0] grp_fu_553_p0;
reg   [63:0] grp_fu_557_p0;
reg   [63:0] grp_fu_557_p1;
wire    ap_CS_fsm_state22;
wire   [63:0] grp_fu_565_p0;
wire  signed [31:0] sext_ln61_fu_597_p0;
wire  signed [31:0] sext_ln61_1_fu_601_p0;
wire  signed [31:0] add_ln61_fu_605_p0;
wire   [30:0] idsrow_fu_630_p4;
wire   [32:0] zext_ln61_1_fu_626_p1;
wire    ap_CS_fsm_state3;
wire  signed [31:0] icmp_ln78_1_fu_696_p1;
wire   [0:0] icmp_ln78_1_fu_696_p2;
wire  signed [31:0] new_upper_fu_701_p1;
wire   [0:0] tmp_fu_712_p3;
wire   [2:0] tmp_17_cast_fu_720_p3;
wire   [2:0] add_ln82_fu_728_p2;
wire   [63:0] f_fu_753_p3;
wire   [63:0] p_Val2_s_fu_761_p1;
wire   [62:0] trunc_ln368_fu_765_p1;
wire   [63:0] p_Result_s_fu_773_p3;
wire   [63:0] bitcast_ln83_fu_796_p1;
wire   [10:0] tmp_2_fu_786_p4;
wire   [51:0] trunc_ln83_fu_769_p1;
wire   [10:0] tmp_3_fu_800_p4;
wire   [51:0] trunc_ln83_1_fu_810_p1;
wire    ap_block_pp0_stage1;
wire   [30:0] idrow_fu_841_p4;
wire   [0:0] or_ln83_fu_855_p2;
wire   [0:0] or_ln83_1_fu_859_p2;
wire   [0:0] and_ln83_fu_863_p2;
wire   [0:0] grp_fu_565_p2;
wire   [31:0] zext_ln80_fu_838_p1;
wire   [31:0] idrow_2_fu_851_p1;
wire   [31:0] tmp_6_fu_928_p6;
wire   [31:0] pivot3_1_fu_942_p6;
wire   [31:0] ptmp_fu_915_p6;
wire   [31:0] pivot2_1_fu_955_p6;
wire   [31:0] pivot12_1_fu_968_p6;
wire   [31:0] pivot_1_fu_981_p6;
wire   [0:0] tmp_7_fu_1058_p3;
wire   [31:0] zext_ln96_1_fu_1074_p1;
wire  signed [31:0] icmp_ln96_fu_1078_p1;
wire   [2:0] empty_fu_1089_p2;
wire   [2:0] add_ln104_fu_1100_p2;
wire   [32:0] zext_ln111_fu_1132_p1;
wire  signed [31:0] icmp_ln111_1_fu_1140_p1;
wire   [0:0] icmp_ln111_1_fu_1140_p2;
wire  signed [31:0] new_upper6_fu_1150_p1;
wire   [31:0] empty_41_fu_1144_p2;
wire   [0:0] tmp_8_fu_1162_p3;
wire   [2:0] tmp_21_cast_fu_1170_p3;
wire   [2:0] add_ln117_fu_1178_p2;
wire   [1:0] tmp_1_fu_1222_p4;
wire   [1:0] trunc_ln50_fu_1275_p1;
wire   [2:0] trunc_ln51_fu_1283_p1;
wire   [1:0] r_1_fu_1278_p2;
wire   [0:0] trunc_ln53_fu_1296_p1;
wire   [2:0] c_fu_1286_p2;
wire   [2:0] tmp_23_cast_fu_1300_p3;
wire   [31:0] rs_1_fu_1323_p3;
wire    ap_CS_fsm_state111;
wire   [2:0] grp_fu_1359_p2;
wire   [2:0] trunc_ln51_1_fu_1364_p1;
wire   [1:0] trunc_ln50_1_fu_1373_p1;
wire   [1:0] r_2_fu_1376_p2;
wire   [0:0] trunc_ln53_1_fu_1386_p1;
wire   [2:0] tmp_24_cast_fu_1390_p3;
wire    ap_block_pp0_stage0_00001;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [53:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_block_pp3;
reg    ap_block_pp4;
reg    ap_enable_operation_354;
reg    ap_enable_reg_pp2_iter0;
reg    ap_enable_state19_pp2_iter0_stage0;
wire    ap_enable_operation_359;
reg    ap_enable_state21_pp2_iter0_stage2;
reg    ap_enable_operation_398;
reg    ap_enable_state53_pp2_iter0_stage34;
reg    ap_enable_operation_516;
reg    ap_enable_state98_pp3_iter43_stage0;
reg    ap_enable_operation_520;
reg    ap_enable_state100_pp3_iter45_stage0;
reg    ap_enable_operation_533;
reg    ap_enable_state109_pp3_iter54_stage0;
reg    ap_enable_operation_639;
reg    ap_enable_state156_pp4_iter43_stage0;
reg    ap_enable_operation_643;
reg    ap_enable_state158_pp4_iter45_stage0;
reg    ap_enable_operation_656;
reg    ap_enable_state167_pp4_iter54_stage0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 ap_CS_fsm = 54'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter45 = 1'b0;
#0 ap_enable_reg_pp3_iter45 = 1'b0;
#0 ap_enable_reg_pp3_iter37 = 1'b0;
#0 ap_enable_reg_pp3_iter53 = 1'b0;
#0 ap_enable_reg_pp4_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter37 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp3_iter10 = 1'b0;
#0 ap_enable_reg_pp3_iter11 = 1'b0;
#0 ap_enable_reg_pp3_iter12 = 1'b0;
#0 ap_enable_reg_pp3_iter13 = 1'b0;
#0 ap_enable_reg_pp3_iter14 = 1'b0;
#0 ap_enable_reg_pp3_iter15 = 1'b0;
#0 ap_enable_reg_pp3_iter16 = 1'b0;
#0 ap_enable_reg_pp3_iter17 = 1'b0;
#0 ap_enable_reg_pp3_iter18 = 1'b0;
#0 ap_enable_reg_pp3_iter19 = 1'b0;
#0 ap_enable_reg_pp3_iter20 = 1'b0;
#0 ap_enable_reg_pp3_iter21 = 1'b0;
#0 ap_enable_reg_pp3_iter22 = 1'b0;
#0 ap_enable_reg_pp3_iter23 = 1'b0;
#0 ap_enable_reg_pp3_iter24 = 1'b0;
#0 ap_enable_reg_pp3_iter25 = 1'b0;
#0 ap_enable_reg_pp3_iter26 = 1'b0;
#0 ap_enable_reg_pp3_iter27 = 1'b0;
#0 ap_enable_reg_pp3_iter28 = 1'b0;
#0 ap_enable_reg_pp3_iter29 = 1'b0;
#0 ap_enable_reg_pp3_iter30 = 1'b0;
#0 ap_enable_reg_pp3_iter31 = 1'b0;
#0 ap_enable_reg_pp3_iter32 = 1'b0;
#0 ap_enable_reg_pp3_iter33 = 1'b0;
#0 ap_enable_reg_pp3_iter34 = 1'b0;
#0 ap_enable_reg_pp3_iter35 = 1'b0;
#0 ap_enable_reg_pp3_iter36 = 1'b0;
#0 ap_enable_reg_pp3_iter38 = 1'b0;
#0 ap_enable_reg_pp3_iter39 = 1'b0;
#0 ap_enable_reg_pp3_iter40 = 1'b0;
#0 ap_enable_reg_pp3_iter41 = 1'b0;
#0 ap_enable_reg_pp3_iter42 = 1'b0;
#0 ap_enable_reg_pp3_iter43 = 1'b0;
#0 ap_enable_reg_pp3_iter44 = 1'b0;
#0 ap_enable_reg_pp3_iter46 = 1'b0;
#0 ap_enable_reg_pp3_iter47 = 1'b0;
#0 ap_enable_reg_pp3_iter48 = 1'b0;
#0 ap_enable_reg_pp3_iter49 = 1'b0;
#0 ap_enable_reg_pp3_iter50 = 1'b0;
#0 ap_enable_reg_pp3_iter51 = 1'b0;
#0 ap_enable_reg_pp3_iter52 = 1'b0;
#0 ap_enable_reg_pp3_iter54 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
#0 ap_enable_reg_pp4_iter7 = 1'b0;
#0 ap_enable_reg_pp4_iter8 = 1'b0;
#0 ap_enable_reg_pp4_iter9 = 1'b0;
#0 ap_enable_reg_pp4_iter10 = 1'b0;
#0 ap_enable_reg_pp4_iter11 = 1'b0;
#0 ap_enable_reg_pp4_iter12 = 1'b0;
#0 ap_enable_reg_pp4_iter13 = 1'b0;
#0 ap_enable_reg_pp4_iter14 = 1'b0;
#0 ap_enable_reg_pp4_iter15 = 1'b0;
#0 ap_enable_reg_pp4_iter16 = 1'b0;
#0 ap_enable_reg_pp4_iter17 = 1'b0;
#0 ap_enable_reg_pp4_iter18 = 1'b0;
#0 ap_enable_reg_pp4_iter19 = 1'b0;
#0 ap_enable_reg_pp4_iter20 = 1'b0;
#0 ap_enable_reg_pp4_iter21 = 1'b0;
#0 ap_enable_reg_pp4_iter22 = 1'b0;
#0 ap_enable_reg_pp4_iter23 = 1'b0;
#0 ap_enable_reg_pp4_iter24 = 1'b0;
#0 ap_enable_reg_pp4_iter25 = 1'b0;
#0 ap_enable_reg_pp4_iter26 = 1'b0;
#0 ap_enable_reg_pp4_iter27 = 1'b0;
#0 ap_enable_reg_pp4_iter28 = 1'b0;
#0 ap_enable_reg_pp4_iter29 = 1'b0;
#0 ap_enable_reg_pp4_iter30 = 1'b0;
#0 ap_enable_reg_pp4_iter31 = 1'b0;
#0 ap_enable_reg_pp4_iter32 = 1'b0;
#0 ap_enable_reg_pp4_iter33 = 1'b0;
#0 ap_enable_reg_pp4_iter34 = 1'b0;
#0 ap_enable_reg_pp4_iter35 = 1'b0;
#0 ap_enable_reg_pp4_iter36 = 1'b0;
#0 ap_enable_reg_pp4_iter38 = 1'b0;
#0 ap_enable_reg_pp4_iter39 = 1'b0;
#0 ap_enable_reg_pp4_iter40 = 1'b0;
#0 ap_enable_reg_pp4_iter41 = 1'b0;
#0 ap_enable_reg_pp4_iter42 = 1'b0;
#0 ap_enable_reg_pp4_iter43 = 1'b0;
#0 ap_enable_reg_pp4_iter44 = 1'b0;
#0 ap_enable_reg_pp4_iter46 = 1'b0;
#0 ap_enable_reg_pp4_iter47 = 1'b0;
#0 ap_enable_reg_pp4_iter48 = 1'b0;
#0 ap_enable_reg_pp4_iter49 = 1'b0;
#0 ap_enable_reg_pp4_iter50 = 1'b0;
#0 ap_enable_reg_pp4_iter51 = 1'b0;
#0 ap_enable_reg_pp4_iter52 = 1'b0;
#0 ap_enable_reg_pp4_iter54 = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
end

kernel_gelinearsolver_0_getrf_core_double_2_4_2_s_rows_0 #(
    .DataWidth( 64 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
rows_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rows_0_address0),
    .ce0(rows_0_ce0),
    .q0(rows_0_q0),
    .address1(rows_0_address1),
    .ce1(rows_0_ce1),
    .we1(rows_0_we1),
    .d1(phi_ln102_reg_1673)
);

kernel_gelinearsolver_0_getrf_core_double_2_4_2_s_rows_0 #(
    .DataWidth( 64 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
rows_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rows_1_address0),
    .ce0(rows_1_ce0),
    .q0(rows_1_q0),
    .address1(rows_1_address1),
    .ce1(rows_1_ce1),
    .we1(rows_1_we1),
    .d1(phi_ln102_reg_1673)
);

kernel_gelinearsolver_0_getrf_core_double_2_4_2_s_rows_0 #(
    .DataWidth( 64 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
cols_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cols_0_address0),
    .ce0(cols_0_ce0),
    .q0(cols_0_q0),
    .address1(cols_0_address1),
    .ce1(cols_0_ce1),
    .we1(cols_0_we1),
    .d1(div_reg_1730)
);

kernel_gelinearsolver_0_getrf_core_double_2_4_2_s_rows_0 #(
    .DataWidth( 64 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
cols_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cols_1_address0),
    .ce0(cols_1_ce0),
    .q0(cols_1_q0),
    .address1(cols_1_address1),
    .ce1(cols_1_ce1),
    .we1(cols_1_we1),
    .d1(div_reg_1730)
);

kernel_gelinearsolver_0_dsub_64ns_64ns_64_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_8_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_553_p0),
    .din1(reg_586),
    .ce(1'b1),
    .dout(grp_fu_553_p2)
);

kernel_gelinearsolver_0_dmul_64ns_64ns_64_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_8_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_557_p0),
    .din1(grp_fu_557_p1),
    .ce(1'b1),
    .dout(grp_fu_557_p2)
);

kernel_gelinearsolver_0_ddiv_64ns_64ns_64_31_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_31_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln117_reg_1720),
    .din1(reg_580),
    .ce(1'b1),
    .dout(grp_fu_561_p2)
);

kernel_gelinearsolver_0_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_565_p0),
    .din1(pmax_reg_452),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_565_p2)
);

kernel_gelinearsolver_0_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(indvars_iv110_reg_405),
    .din1(sub_ln61_reg_1493),
    .ce(1'b1),
    .dout(grp_fu_679_p2)
);

kernel_gelinearsolver_0_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U6(
    .din0(pivot_0_reg_353),
    .din1(pivot12_0_reg_363),
    .din2(pivot2_0_reg_373),
    .din3(pivot3_0_reg_383),
    .din4(trunc_ln61_reg_1465),
    .dout(ptmp_fu_915_p6)
);

kernel_gelinearsolver_0_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U7(
    .din0(pivot_0_reg_353),
    .din1(pivot12_0_reg_363),
    .din2(pivot2_0_reg_373),
    .din3(pivot3_0_reg_383),
    .din4(ap_phi_mux_phi_ln92_phi_fu_478_p4),
    .dout(tmp_6_fu_928_p6)
);

kernel_gelinearsolver_0_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U8(
    .din0(pivot3_0_reg_383),
    .din1(pivot3_0_reg_383),
    .din2(pivot3_0_reg_383),
    .din3(tmp_6_fu_928_p6),
    .din4(trunc_ln61_reg_1465),
    .dout(pivot3_1_fu_942_p6)
);

kernel_gelinearsolver_0_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U9(
    .din0(pivot2_0_reg_373),
    .din1(pivot2_0_reg_373),
    .din2(tmp_6_fu_928_p6),
    .din3(pivot2_0_reg_373),
    .din4(trunc_ln61_reg_1465),
    .dout(pivot2_1_fu_955_p6)
);

kernel_gelinearsolver_0_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U10(
    .din0(pivot12_0_reg_363),
    .din1(tmp_6_fu_928_p6),
    .din2(pivot12_0_reg_363),
    .din3(pivot12_0_reg_363),
    .din4(trunc_ln61_reg_1465),
    .dout(pivot12_1_fu_968_p6)
);

kernel_gelinearsolver_0_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U11(
    .din0(tmp_6_fu_928_p6),
    .din1(pivot_0_reg_353),
    .din2(pivot_0_reg_353),
    .din3(pivot_0_reg_353),
    .din4(trunc_ln61_reg_1465),
    .dout(pivot_1_fu_981_p6)
);

kernel_gelinearsolver_0_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U12(
    .din0(pivot3_1_fu_942_p6),
    .din1(pivot3_1_fu_942_p6),
    .din2(pivot3_1_fu_942_p6),
    .din3(ptmp_fu_915_p6),
    .din4(ap_phi_mux_phi_ln92_phi_fu_478_p4),
    .dout(pivot3_2_fu_994_p6)
);

kernel_gelinearsolver_0_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U13(
    .din0(pivot2_1_fu_955_p6),
    .din1(pivot2_1_fu_955_p6),
    .din2(ptmp_fu_915_p6),
    .din3(pivot2_1_fu_955_p6),
    .din4(ap_phi_mux_phi_ln92_phi_fu_478_p4),
    .dout(pivot2_2_fu_1008_p6)
);

kernel_gelinearsolver_0_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U14(
    .din0(pivot12_1_fu_968_p6),
    .din1(ptmp_fu_915_p6),
    .din2(pivot12_1_fu_968_p6),
    .din3(pivot12_1_fu_968_p6),
    .din4(ap_phi_mux_phi_ln92_phi_fu_478_p4),
    .dout(pivot12_2_fu_1022_p6)
);

kernel_gelinearsolver_0_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U15(
    .din0(ptmp_fu_915_p6),
    .din1(pivot_1_fu_981_p6),
    .din2(pivot_1_fu_981_p6),
    .din3(pivot_1_fu_981_p6),
    .din4(ap_phi_mux_phi_ln92_phi_fu_478_p4),
    .dout(pivot_2_fu_1036_p6)
);

kernel_gelinearsolver_0_udiv_32ns_32ns_2_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 2 ))
udiv_32ns_32ns_2_36_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_i_phi_fu_533_p4),
    .din1(sub_ln40_reg_1753),
    .ce(1'b1),
    .dout(grp_fu_1265_p2)
);

kernel_gelinearsolver_0_urem_32ns_32ns_3_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 3 ))
urem_32ns_32ns_3_36_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_i_phi_fu_533_p4),
    .din1(sub_ln40_reg_1753),
    .ce(1'b1),
    .dout(grp_fu_1270_p2)
);

kernel_gelinearsolver_0_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln43_reg_1817),
    .din1(indvars_iv110_reg_405),
    .ce(1'b1),
    .dout(grp_fu_1338_p2)
);

kernel_gelinearsolver_0_udiv_32ns_32ns_2_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 2 ))
udiv_32ns_32ns_2_36_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_i_2_phi_fu_545_p4),
    .din1(sub_ln40_reg_1753),
    .ce(1'b1),
    .dout(grp_fu_1354_p2)
);

kernel_gelinearsolver_0_urem_32ns_32ns_3_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 3 ))
urem_32ns_32ns_3_36_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_i_2_phi_fu_545_p4),
    .din1(sub_ln40_reg_1753),
    .ce(1'b1),
    .dout(grp_fu_1359_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state7);
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state55) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state54)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state55)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state55);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter12 <= ap_enable_reg_pp3_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter13 <= ap_enable_reg_pp3_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter14 <= ap_enable_reg_pp3_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter15 <= ap_enable_reg_pp3_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter16 <= ap_enable_reg_pp3_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter17 <= ap_enable_reg_pp3_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter18 <= ap_enable_reg_pp3_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter19 <= ap_enable_reg_pp3_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter20 <= ap_enable_reg_pp3_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter21 <= ap_enable_reg_pp3_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter22 <= ap_enable_reg_pp3_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter23 <= ap_enable_reg_pp3_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter24 <= ap_enable_reg_pp3_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter25 <= ap_enable_reg_pp3_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter26 <= ap_enable_reg_pp3_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter27 <= ap_enable_reg_pp3_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter28 <= ap_enable_reg_pp3_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter29 <= ap_enable_reg_pp3_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter30 <= ap_enable_reg_pp3_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter31 <= ap_enable_reg_pp3_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter32 <= ap_enable_reg_pp3_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter33 <= ap_enable_reg_pp3_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter34 <= ap_enable_reg_pp3_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter35 <= ap_enable_reg_pp3_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter36 <= ap_enable_reg_pp3_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter37 <= ap_enable_reg_pp3_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter38 <= ap_enable_reg_pp3_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter39 <= ap_enable_reg_pp3_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter40 <= ap_enable_reg_pp3_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter41 <= ap_enable_reg_pp3_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter42 <= ap_enable_reg_pp3_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter43 <= ap_enable_reg_pp3_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter44 <= ap_enable_reg_pp3_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter45 <= ap_enable_reg_pp3_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter46 <= ap_enable_reg_pp3_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter47 <= ap_enable_reg_pp3_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter48 <= ap_enable_reg_pp3_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter49 <= ap_enable_reg_pp3_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter50 <= ap_enable_reg_pp3_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter51 <= ap_enable_reg_pp3_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter52 <= ap_enable_reg_pp3_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter53 <= ap_enable_reg_pp3_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter54 <= ap_enable_reg_pp3_iter53;
        end else if ((1'b1 == ap_CS_fsm_state54)) begin
            ap_enable_reg_pp3_iter54 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state113) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state112)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state113)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state113);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter10 <= ap_enable_reg_pp4_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter11 <= ap_enable_reg_pp4_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter12 <= ap_enable_reg_pp4_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter13 <= ap_enable_reg_pp4_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter14 <= ap_enable_reg_pp4_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter15 <= ap_enable_reg_pp4_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter16 <= ap_enable_reg_pp4_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter17 <= ap_enable_reg_pp4_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter18 <= ap_enable_reg_pp4_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter19 <= ap_enable_reg_pp4_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter20 <= ap_enable_reg_pp4_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter21 <= ap_enable_reg_pp4_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter22 <= ap_enable_reg_pp4_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter23 <= ap_enable_reg_pp4_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter24 <= ap_enable_reg_pp4_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter25 <= ap_enable_reg_pp4_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter26 <= ap_enable_reg_pp4_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter27 <= ap_enable_reg_pp4_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter28 <= ap_enable_reg_pp4_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter29 <= ap_enable_reg_pp4_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter30 <= ap_enable_reg_pp4_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter31 <= ap_enable_reg_pp4_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter32 <= ap_enable_reg_pp4_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter33 <= ap_enable_reg_pp4_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter34 <= ap_enable_reg_pp4_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter35 <= ap_enable_reg_pp4_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter36 <= ap_enable_reg_pp4_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter37 <= ap_enable_reg_pp4_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter38 <= ap_enable_reg_pp4_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter39 <= ap_enable_reg_pp4_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter40 <= ap_enable_reg_pp4_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter41 <= ap_enable_reg_pp4_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter42 <= ap_enable_reg_pp4_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter43 <= ap_enable_reg_pp4_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter44 <= ap_enable_reg_pp4_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter45 <= ap_enable_reg_pp4_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter46 <= ap_enable_reg_pp4_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter47 <= ap_enable_reg_pp4_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter48 <= ap_enable_reg_pp4_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter49 <= ap_enable_reg_pp4_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter50 <= ap_enable_reg_pp4_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter51 <= ap_enable_reg_pp4_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter52 <= ap_enable_reg_pp4_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter53 <= ap_enable_reg_pp4_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter54 <= ap_enable_reg_pp4_iter53;
        end else if ((1'b1 == ap_CS_fsm_state112)) begin
            ap_enable_reg_pp4_iter54 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter7 <= ap_enable_reg_pp4_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter8 <= ap_enable_reg_pp4_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter9 <= ap_enable_reg_pp4_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if (((icmp_ln61_fu_615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_return_0_preg <= pivot_0_reg_353;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if (((icmp_ln61_fu_615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_return_1_preg <= pivot12_0_reg_363;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if (((icmp_ln61_fu_615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_return_2_preg <= pivot2_0_reg_373;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if (((icmp_ln61_fu_615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_return_3_preg <= pivot3_0_reg_383;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_1_reg_1827 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        i_2_reg_541 <= i_3_reg_1831;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        i_2_reg_541 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln43_reg_1767 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        i_reg_529 <= i_1_reg_1771;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        i_reg_529 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state168)) begin
        indvars_iv110_reg_405 <= add_ln61_1_fu_1411_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv110_reg_405 <= 32'd3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        j_reg_519 <= j_2_fu_1216_p2;
    end else if (((icmp_ln111_reg_1692 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        j_reg_519 <= indvars_iv_next19_reg_1478;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln96_reg_1640 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        k_1_reg_507 <= add_ln96_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        k_1_reg_507 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln78_2_reg_1530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_4_reg_417 <= k_reg_1549;
    end else if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        k_4_reg_417 <= s_reg_393;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        phi_ln92_reg_475 <= trunc_ln78_reg_1544;
    end else if (((icmp_ln78_reg_1498 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_ln92_reg_475 <= trunc_ln61_reg_1465;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        pidcu_0_lcssa_t_reg_484 <= trunc_ln78_2_fu_910_p1;
    end else if (((icmp_ln78_reg_1498 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        pidcu_0_lcssa_t_reg_484 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln78_2_reg_1530_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        pidcu_reg_440 <= pidcu_2_reg_1595;
    end else if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        pidcu_reg_440 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        pidrow_0_lcssa_reg_496 <= trunc_ln78_1_fu_905_p1;
    end else if (((icmp_ln78_reg_1498 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        pidrow_0_lcssa_reg_496 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln78_2_reg_1530_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        pidrow_reg_428 <= pidrow_2_reg_1600;
    end else if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        pidrow_reg_428 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state168)) begin
        pivot12_0_reg_363 <= pivot12_2_reg_1620;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        pivot12_0_reg_363 <= p_read1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state168)) begin
        pivot2_0_reg_373 <= pivot2_2_reg_1615;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        pivot2_0_reg_373 <= p_read2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state168)) begin
        pivot3_0_reg_383 <= pivot3_2_reg_1610;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        pivot3_0_reg_383 <= p_read3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state168)) begin
        pivot_0_reg_353 <= pivot_2_reg_1625;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        pivot_0_reg_353 <= p_read;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln78_2_reg_1530_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        pmax_reg_452 <= pmax_2_fu_899_p3;
    end else if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        pmax_reg_452 <= 64'd13830554455654793216;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln78_2_reg_1530_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        prow_reg_464 <= prow_3_reg_1590;
    end else if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        prow_reg_464 <= s_reg_393;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state168)) begin
        s_reg_393 <= indvars_iv_next19_reg_1478;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        s_reg_393 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_2_reg_1530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        absa_reg_1559[62 : 0] <= absa_fu_781_p1[62 : 0];
        icmp_ln83_1_reg_1570 <= icmp_ln83_1_fu_820_p2;
        icmp_ln83_2_reg_1575 <= icmp_ln83_2_fu_826_p2;
        icmp_ln83_3_reg_1580 <= icmp_ln83_3_fu_832_p2;
        icmp_ln83_reg_1565 <= icmp_ln83_fu_814_p2;
        idcu_reg_1554 <= idcu_fu_749_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        add_ln124_reg_1748 <= add_ln124_fu_1237_p2;
        add_ln51_reg_1761 <= add_ln51_fu_1249_p2;
        sub_ln40_reg_1753 <= sub_ln40_fu_1243_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_1_reg_1827_pp4_iter35_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln53_1_reg_1847 <= add_ln53_1_fu_1402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        add_ln53_1_reg_1847_pp4_iter37_reg <= add_ln53_1_reg_1847;
        add_ln53_1_reg_1847_pp4_iter38_reg <= add_ln53_1_reg_1847_pp4_iter37_reg;
        add_ln53_1_reg_1847_pp4_iter39_reg <= add_ln53_1_reg_1847_pp4_iter38_reg;
        add_ln53_1_reg_1847_pp4_iter40_reg <= add_ln53_1_reg_1847_pp4_iter39_reg;
        add_ln53_1_reg_1847_pp4_iter41_reg <= add_ln53_1_reg_1847_pp4_iter40_reg;
        add_ln53_1_reg_1847_pp4_iter42_reg <= add_ln53_1_reg_1847_pp4_iter41_reg;
        icmp_ln43_1_reg_1827_pp4_iter10_reg <= icmp_ln43_1_reg_1827_pp4_iter9_reg;
        icmp_ln43_1_reg_1827_pp4_iter11_reg <= icmp_ln43_1_reg_1827_pp4_iter10_reg;
        icmp_ln43_1_reg_1827_pp4_iter12_reg <= icmp_ln43_1_reg_1827_pp4_iter11_reg;
        icmp_ln43_1_reg_1827_pp4_iter13_reg <= icmp_ln43_1_reg_1827_pp4_iter12_reg;
        icmp_ln43_1_reg_1827_pp4_iter14_reg <= icmp_ln43_1_reg_1827_pp4_iter13_reg;
        icmp_ln43_1_reg_1827_pp4_iter15_reg <= icmp_ln43_1_reg_1827_pp4_iter14_reg;
        icmp_ln43_1_reg_1827_pp4_iter16_reg <= icmp_ln43_1_reg_1827_pp4_iter15_reg;
        icmp_ln43_1_reg_1827_pp4_iter17_reg <= icmp_ln43_1_reg_1827_pp4_iter16_reg;
        icmp_ln43_1_reg_1827_pp4_iter18_reg <= icmp_ln43_1_reg_1827_pp4_iter17_reg;
        icmp_ln43_1_reg_1827_pp4_iter19_reg <= icmp_ln43_1_reg_1827_pp4_iter18_reg;
        icmp_ln43_1_reg_1827_pp4_iter20_reg <= icmp_ln43_1_reg_1827_pp4_iter19_reg;
        icmp_ln43_1_reg_1827_pp4_iter21_reg <= icmp_ln43_1_reg_1827_pp4_iter20_reg;
        icmp_ln43_1_reg_1827_pp4_iter22_reg <= icmp_ln43_1_reg_1827_pp4_iter21_reg;
        icmp_ln43_1_reg_1827_pp4_iter23_reg <= icmp_ln43_1_reg_1827_pp4_iter22_reg;
        icmp_ln43_1_reg_1827_pp4_iter24_reg <= icmp_ln43_1_reg_1827_pp4_iter23_reg;
        icmp_ln43_1_reg_1827_pp4_iter25_reg <= icmp_ln43_1_reg_1827_pp4_iter24_reg;
        icmp_ln43_1_reg_1827_pp4_iter26_reg <= icmp_ln43_1_reg_1827_pp4_iter25_reg;
        icmp_ln43_1_reg_1827_pp4_iter27_reg <= icmp_ln43_1_reg_1827_pp4_iter26_reg;
        icmp_ln43_1_reg_1827_pp4_iter28_reg <= icmp_ln43_1_reg_1827_pp4_iter27_reg;
        icmp_ln43_1_reg_1827_pp4_iter29_reg <= icmp_ln43_1_reg_1827_pp4_iter28_reg;
        icmp_ln43_1_reg_1827_pp4_iter2_reg <= icmp_ln43_1_reg_1827_pp4_iter1_reg;
        icmp_ln43_1_reg_1827_pp4_iter30_reg <= icmp_ln43_1_reg_1827_pp4_iter29_reg;
        icmp_ln43_1_reg_1827_pp4_iter31_reg <= icmp_ln43_1_reg_1827_pp4_iter30_reg;
        icmp_ln43_1_reg_1827_pp4_iter32_reg <= icmp_ln43_1_reg_1827_pp4_iter31_reg;
        icmp_ln43_1_reg_1827_pp4_iter33_reg <= icmp_ln43_1_reg_1827_pp4_iter32_reg;
        icmp_ln43_1_reg_1827_pp4_iter34_reg <= icmp_ln43_1_reg_1827_pp4_iter33_reg;
        icmp_ln43_1_reg_1827_pp4_iter35_reg <= icmp_ln43_1_reg_1827_pp4_iter34_reg;
        icmp_ln43_1_reg_1827_pp4_iter36_reg <= icmp_ln43_1_reg_1827_pp4_iter35_reg;
        icmp_ln43_1_reg_1827_pp4_iter37_reg <= icmp_ln43_1_reg_1827_pp4_iter36_reg;
        icmp_ln43_1_reg_1827_pp4_iter38_reg <= icmp_ln43_1_reg_1827_pp4_iter37_reg;
        icmp_ln43_1_reg_1827_pp4_iter39_reg <= icmp_ln43_1_reg_1827_pp4_iter38_reg;
        icmp_ln43_1_reg_1827_pp4_iter3_reg <= icmp_ln43_1_reg_1827_pp4_iter2_reg;
        icmp_ln43_1_reg_1827_pp4_iter40_reg <= icmp_ln43_1_reg_1827_pp4_iter39_reg;
        icmp_ln43_1_reg_1827_pp4_iter41_reg <= icmp_ln43_1_reg_1827_pp4_iter40_reg;
        icmp_ln43_1_reg_1827_pp4_iter42_reg <= icmp_ln43_1_reg_1827_pp4_iter41_reg;
        icmp_ln43_1_reg_1827_pp4_iter43_reg <= icmp_ln43_1_reg_1827_pp4_iter42_reg;
        icmp_ln43_1_reg_1827_pp4_iter44_reg <= icmp_ln43_1_reg_1827_pp4_iter43_reg;
        icmp_ln43_1_reg_1827_pp4_iter45_reg <= icmp_ln43_1_reg_1827_pp4_iter44_reg;
        icmp_ln43_1_reg_1827_pp4_iter46_reg <= icmp_ln43_1_reg_1827_pp4_iter45_reg;
        icmp_ln43_1_reg_1827_pp4_iter47_reg <= icmp_ln43_1_reg_1827_pp4_iter46_reg;
        icmp_ln43_1_reg_1827_pp4_iter48_reg <= icmp_ln43_1_reg_1827_pp4_iter47_reg;
        icmp_ln43_1_reg_1827_pp4_iter49_reg <= icmp_ln43_1_reg_1827_pp4_iter48_reg;
        icmp_ln43_1_reg_1827_pp4_iter4_reg <= icmp_ln43_1_reg_1827_pp4_iter3_reg;
        icmp_ln43_1_reg_1827_pp4_iter50_reg <= icmp_ln43_1_reg_1827_pp4_iter49_reg;
        icmp_ln43_1_reg_1827_pp4_iter51_reg <= icmp_ln43_1_reg_1827_pp4_iter50_reg;
        icmp_ln43_1_reg_1827_pp4_iter52_reg <= icmp_ln43_1_reg_1827_pp4_iter51_reg;
        icmp_ln43_1_reg_1827_pp4_iter53_reg <= icmp_ln43_1_reg_1827_pp4_iter52_reg;
        icmp_ln43_1_reg_1827_pp4_iter5_reg <= icmp_ln43_1_reg_1827_pp4_iter4_reg;
        icmp_ln43_1_reg_1827_pp4_iter6_reg <= icmp_ln43_1_reg_1827_pp4_iter5_reg;
        icmp_ln43_1_reg_1827_pp4_iter7_reg <= icmp_ln43_1_reg_1827_pp4_iter6_reg;
        icmp_ln43_1_reg_1827_pp4_iter8_reg <= icmp_ln43_1_reg_1827_pp4_iter7_reg;
        icmp_ln43_1_reg_1827_pp4_iter9_reg <= icmp_ln43_1_reg_1827_pp4_iter8_reg;
        matA_1_addr_4_reg_1872_pp4_iter44_reg <= matA_1_addr_4_reg_1872;
        matA_1_addr_4_reg_1872_pp4_iter45_reg <= matA_1_addr_4_reg_1872_pp4_iter44_reg;
        matA_1_addr_4_reg_1872_pp4_iter46_reg <= matA_1_addr_4_reg_1872_pp4_iter45_reg;
        matA_1_addr_4_reg_1872_pp4_iter47_reg <= matA_1_addr_4_reg_1872_pp4_iter46_reg;
        matA_1_addr_4_reg_1872_pp4_iter48_reg <= matA_1_addr_4_reg_1872_pp4_iter47_reg;
        matA_1_addr_4_reg_1872_pp4_iter49_reg <= matA_1_addr_4_reg_1872_pp4_iter48_reg;
        matA_1_addr_4_reg_1872_pp4_iter50_reg <= matA_1_addr_4_reg_1872_pp4_iter49_reg;
        matA_1_addr_4_reg_1872_pp4_iter51_reg <= matA_1_addr_4_reg_1872_pp4_iter50_reg;
        matA_1_addr_4_reg_1872_pp4_iter52_reg <= matA_1_addr_4_reg_1872_pp4_iter51_reg;
        matA_1_addr_4_reg_1872_pp4_iter53_reg <= matA_1_addr_4_reg_1872_pp4_iter52_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1767_pp3_iter35_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln53_reg_1786 <= add_ln53_fu_1313_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        add_ln53_reg_1786_pp3_iter37_reg <= add_ln53_reg_1786;
        add_ln53_reg_1786_pp3_iter38_reg <= add_ln53_reg_1786_pp3_iter37_reg;
        add_ln53_reg_1786_pp3_iter39_reg <= add_ln53_reg_1786_pp3_iter38_reg;
        add_ln53_reg_1786_pp3_iter40_reg <= add_ln53_reg_1786_pp3_iter39_reg;
        add_ln53_reg_1786_pp3_iter41_reg <= add_ln53_reg_1786_pp3_iter40_reg;
        add_ln53_reg_1786_pp3_iter42_reg <= add_ln53_reg_1786_pp3_iter41_reg;
        icmp_ln43_reg_1767_pp3_iter10_reg <= icmp_ln43_reg_1767_pp3_iter9_reg;
        icmp_ln43_reg_1767_pp3_iter11_reg <= icmp_ln43_reg_1767_pp3_iter10_reg;
        icmp_ln43_reg_1767_pp3_iter12_reg <= icmp_ln43_reg_1767_pp3_iter11_reg;
        icmp_ln43_reg_1767_pp3_iter13_reg <= icmp_ln43_reg_1767_pp3_iter12_reg;
        icmp_ln43_reg_1767_pp3_iter14_reg <= icmp_ln43_reg_1767_pp3_iter13_reg;
        icmp_ln43_reg_1767_pp3_iter15_reg <= icmp_ln43_reg_1767_pp3_iter14_reg;
        icmp_ln43_reg_1767_pp3_iter16_reg <= icmp_ln43_reg_1767_pp3_iter15_reg;
        icmp_ln43_reg_1767_pp3_iter17_reg <= icmp_ln43_reg_1767_pp3_iter16_reg;
        icmp_ln43_reg_1767_pp3_iter18_reg <= icmp_ln43_reg_1767_pp3_iter17_reg;
        icmp_ln43_reg_1767_pp3_iter19_reg <= icmp_ln43_reg_1767_pp3_iter18_reg;
        icmp_ln43_reg_1767_pp3_iter20_reg <= icmp_ln43_reg_1767_pp3_iter19_reg;
        icmp_ln43_reg_1767_pp3_iter21_reg <= icmp_ln43_reg_1767_pp3_iter20_reg;
        icmp_ln43_reg_1767_pp3_iter22_reg <= icmp_ln43_reg_1767_pp3_iter21_reg;
        icmp_ln43_reg_1767_pp3_iter23_reg <= icmp_ln43_reg_1767_pp3_iter22_reg;
        icmp_ln43_reg_1767_pp3_iter24_reg <= icmp_ln43_reg_1767_pp3_iter23_reg;
        icmp_ln43_reg_1767_pp3_iter25_reg <= icmp_ln43_reg_1767_pp3_iter24_reg;
        icmp_ln43_reg_1767_pp3_iter26_reg <= icmp_ln43_reg_1767_pp3_iter25_reg;
        icmp_ln43_reg_1767_pp3_iter27_reg <= icmp_ln43_reg_1767_pp3_iter26_reg;
        icmp_ln43_reg_1767_pp3_iter28_reg <= icmp_ln43_reg_1767_pp3_iter27_reg;
        icmp_ln43_reg_1767_pp3_iter29_reg <= icmp_ln43_reg_1767_pp3_iter28_reg;
        icmp_ln43_reg_1767_pp3_iter2_reg <= icmp_ln43_reg_1767_pp3_iter1_reg;
        icmp_ln43_reg_1767_pp3_iter30_reg <= icmp_ln43_reg_1767_pp3_iter29_reg;
        icmp_ln43_reg_1767_pp3_iter31_reg <= icmp_ln43_reg_1767_pp3_iter30_reg;
        icmp_ln43_reg_1767_pp3_iter32_reg <= icmp_ln43_reg_1767_pp3_iter31_reg;
        icmp_ln43_reg_1767_pp3_iter33_reg <= icmp_ln43_reg_1767_pp3_iter32_reg;
        icmp_ln43_reg_1767_pp3_iter34_reg <= icmp_ln43_reg_1767_pp3_iter33_reg;
        icmp_ln43_reg_1767_pp3_iter35_reg <= icmp_ln43_reg_1767_pp3_iter34_reg;
        icmp_ln43_reg_1767_pp3_iter36_reg <= icmp_ln43_reg_1767_pp3_iter35_reg;
        icmp_ln43_reg_1767_pp3_iter37_reg <= icmp_ln43_reg_1767_pp3_iter36_reg;
        icmp_ln43_reg_1767_pp3_iter38_reg <= icmp_ln43_reg_1767_pp3_iter37_reg;
        icmp_ln43_reg_1767_pp3_iter39_reg <= icmp_ln43_reg_1767_pp3_iter38_reg;
        icmp_ln43_reg_1767_pp3_iter3_reg <= icmp_ln43_reg_1767_pp3_iter2_reg;
        icmp_ln43_reg_1767_pp3_iter40_reg <= icmp_ln43_reg_1767_pp3_iter39_reg;
        icmp_ln43_reg_1767_pp3_iter41_reg <= icmp_ln43_reg_1767_pp3_iter40_reg;
        icmp_ln43_reg_1767_pp3_iter42_reg <= icmp_ln43_reg_1767_pp3_iter41_reg;
        icmp_ln43_reg_1767_pp3_iter43_reg <= icmp_ln43_reg_1767_pp3_iter42_reg;
        icmp_ln43_reg_1767_pp3_iter44_reg <= icmp_ln43_reg_1767_pp3_iter43_reg;
        icmp_ln43_reg_1767_pp3_iter45_reg <= icmp_ln43_reg_1767_pp3_iter44_reg;
        icmp_ln43_reg_1767_pp3_iter46_reg <= icmp_ln43_reg_1767_pp3_iter45_reg;
        icmp_ln43_reg_1767_pp3_iter47_reg <= icmp_ln43_reg_1767_pp3_iter46_reg;
        icmp_ln43_reg_1767_pp3_iter48_reg <= icmp_ln43_reg_1767_pp3_iter47_reg;
        icmp_ln43_reg_1767_pp3_iter49_reg <= icmp_ln43_reg_1767_pp3_iter48_reg;
        icmp_ln43_reg_1767_pp3_iter4_reg <= icmp_ln43_reg_1767_pp3_iter3_reg;
        icmp_ln43_reg_1767_pp3_iter50_reg <= icmp_ln43_reg_1767_pp3_iter49_reg;
        icmp_ln43_reg_1767_pp3_iter51_reg <= icmp_ln43_reg_1767_pp3_iter50_reg;
        icmp_ln43_reg_1767_pp3_iter52_reg <= icmp_ln43_reg_1767_pp3_iter51_reg;
        icmp_ln43_reg_1767_pp3_iter53_reg <= icmp_ln43_reg_1767_pp3_iter52_reg;
        icmp_ln43_reg_1767_pp3_iter5_reg <= icmp_ln43_reg_1767_pp3_iter4_reg;
        icmp_ln43_reg_1767_pp3_iter6_reg <= icmp_ln43_reg_1767_pp3_iter5_reg;
        icmp_ln43_reg_1767_pp3_iter7_reg <= icmp_ln43_reg_1767_pp3_iter6_reg;
        icmp_ln43_reg_1767_pp3_iter8_reg <= icmp_ln43_reg_1767_pp3_iter7_reg;
        icmp_ln43_reg_1767_pp3_iter9_reg <= icmp_ln43_reg_1767_pp3_iter8_reg;
        matA_0_addr_4_reg_1806_pp3_iter44_reg <= matA_0_addr_4_reg_1806;
        matA_0_addr_4_reg_1806_pp3_iter45_reg <= matA_0_addr_4_reg_1806_pp3_iter44_reg;
        matA_0_addr_4_reg_1806_pp3_iter46_reg <= matA_0_addr_4_reg_1806_pp3_iter45_reg;
        matA_0_addr_4_reg_1806_pp3_iter47_reg <= matA_0_addr_4_reg_1806_pp3_iter46_reg;
        matA_0_addr_4_reg_1806_pp3_iter48_reg <= matA_0_addr_4_reg_1806_pp3_iter47_reg;
        matA_0_addr_4_reg_1806_pp3_iter49_reg <= matA_0_addr_4_reg_1806_pp3_iter48_reg;
        matA_0_addr_4_reg_1806_pp3_iter50_reg <= matA_0_addr_4_reg_1806_pp3_iter49_reg;
        matA_0_addr_4_reg_1806_pp3_iter51_reg <= matA_0_addr_4_reg_1806_pp3_iter50_reg;
        matA_0_addr_4_reg_1806_pp3_iter52_reg <= matA_0_addr_4_reg_1806_pp3_iter51_reg;
        matA_0_addr_4_reg_1806_pp3_iter53_reg <= matA_0_addr_4_reg_1806_pp3_iter52_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln61_reg_1460 <= add_ln61_fu_605_p2;
        sext_ln61_1_reg_1455 <= sext_ln61_1_fu_601_p1;
        sext_ln61_reg_1450 <= sext_ln61_fu_597_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln96_reg_1644 <= add_ln96_fu_1083_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_2_reg_1530_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln83_1_reg_1585 <= and_ln83_1_fu_869_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_1_reg_1827_pp4_iter34_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        c_1_reg_1841 <= c_1_fu_1368_p2;
        udiv_ln50_1_reg_1836 <= grp_fu_1354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1767_pp3_iter36_reg == 1'd0) & (ap_enable_reg_pp3_iter37 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        cols_0_load_reg_1801 <= cols_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter37 == 1'b1) & (icmp_ln43_1_reg_1827_pp4_iter36_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        cols_1_load_reg_1862 <= cols_1_q0;
        rows_1_load_reg_1867 <= rows_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        div_reg_1730 <= grp_fu_561_p2;
        r_reg_1725 <= {{j_reg_519[2:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        i_1_reg_1771 <= i_1_fu_1259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        i_3_reg_1831 <= i_3_fu_1348_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        icmp_ln111_reg_1692 <= icmp_ln111_fu_1135_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln43_1_reg_1827 <= icmp_ln43_1_fu_1343_p2;
        icmp_ln43_1_reg_1827_pp4_iter1_reg <= icmp_ln43_1_reg_1827;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln43_reg_1767 <= icmp_ln43_fu_1254_p2;
        icmp_ln43_reg_1767_pp3_iter1_reg <= icmp_ln43_reg_1767;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln78_2_reg_1530 <= icmp_ln78_2_fu_707_p2;
        icmp_ln78_2_reg_1530_pp0_iter1_reg <= icmp_ln78_2_reg_1530;
        k_4_reg_417_pp0_iter1_reg <= k_4_reg_417;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_615_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln78_reg_1498 <= icmp_ln78_fu_650_p2;
        sub_ln61_reg_1493 <= sub_ln61_fu_644_p2;
        zext_ln61_2_reg_1487[30 : 0] <= zext_ln61_2_fu_640_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln96_reg_1640 <= icmp_ln96_fu_1078_p2;
        k_1_reg_507_pp1_iter1_reg <= k_1_reg_507;
        matA_0_addr_1_reg_1649_pp1_iter1_reg <= matA_0_addr_1_reg_1649;
        matA_0_addr_2_reg_1655_pp1_iter1_reg <= matA_0_addr_2_reg_1655;
        matA_0_addr_2_reg_1655_pp1_iter2_reg <= matA_0_addr_2_reg_1655_pp1_iter1_reg;
        matA_1_addr_1_reg_1661_pp1_iter1_reg <= matA_1_addr_1_reg_1661;
        matA_1_addr_2_reg_1667_pp1_iter1_reg <= matA_1_addr_2_reg_1667;
        matA_1_addr_2_reg_1667_pp1_iter2_reg <= matA_1_addr_2_reg_1667_pp1_iter1_reg;
        phi_ln102_reg_1673 <= phi_ln102_fu_1111_p3;
        phi_ln102_reg_1673_pp1_iter2_reg <= phi_ln102_reg_1673;
        select_ln104_reg_1681 <= select_ln104_fu_1119_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        idscu_reg_1519 <= idscu_fu_692_p1;
        mul_ln61_reg_1514 <= grp_fu_679_p2;
        trunc_ln61_1_reg_1507 <= trunc_ln61_1_fu_688_p1;
        zext_ln61_reg_1502[31 : 0] <= zext_ln61_fu_684_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvars_iv_next19_reg_1478 <= indvars_iv_next19_fu_620_p2;
        trunc_ln61_reg_1465 <= trunc_ln61_fu_611_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_2_reg_1530 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        k_reg_1549 <= k_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_1078_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        matA_0_addr_1_reg_1649 <= p_cast_fu_1094_p1;
        matA_0_addr_2_reg_1655 <= zext_ln104_fu_1105_p1;
        matA_1_addr_1_reg_1661 <= p_cast_fu_1094_p1;
        matA_1_addr_2_reg_1667 <= zext_ln104_fu_1105_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_2_fu_1157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        matA_0_addr_3_reg_1704 <= zext_ln117_1_fu_1183_p1;
        matA_1_addr_3_reg_1710 <= zext_ln117_1_fu_1183_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1767_pp3_iter42_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        matA_0_addr_4_reg_1806 <= zext_ln53_4_fu_1319_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_1_reg_1827_pp4_iter42_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        matA_1_addr_4_reg_1872 <= zext_ln53_5_fu_1407_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        mul_ln43_reg_1822 <= grp_fu_1338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_1692 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        new_upper6_reg_1696 <= new_upper6_fu_1150_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        new_upper_reg_1525 <= new_upper_fu_701_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln78_2_reg_1530_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        pidcu_2_reg_1595 <= pidcu_2_fu_883_p3;
        pidrow_2_reg_1600 <= pidrow_2_fu_891_p3;
        prow_3_reg_1590 <= prow_3_fu_875_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        pivot12_2_reg_1620 <= pivot12_2_fu_1022_p6;
        pivot2_2_reg_1615 <= pivot2_2_fu_1008_p6;
        pivot3_2_reg_1610 <= pivot3_2_fu_994_p6;
        pivot_2_reg_1625 <= pivot_2_fu_1036_p6;
        tmp_20_cast_reg_1635[2] <= tmp_20_cast_fu_1066_p3[2];
        tmp_s_reg_1630[2] <= tmp_s_fu_1050_p3[2];
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln43_1_reg_1827_pp4_iter44_reg == 1'd0) & (ap_enable_reg_pp4_iter45 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((icmp_ln78_2_reg_1530 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_570 <= matA_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln43_reg_1767_pp3_iter44_reg == 1'd0) & (ap_enable_reg_pp3_iter45 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((icmp_ln78_2_reg_1530 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_575 <= matA_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((icmp_ln43_reg_1767_pp3_iter36_reg == 1'd0) & (ap_enable_reg_pp3_iter37 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        reg_580 <= rows_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln43_reg_1767_pp3_iter44_reg == 1'd0) & (ap_enable_reg_pp3_iter45 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((icmp_ln43_1_reg_1827_pp4_iter44_reg == 1'd0) & (ap_enable_reg_pp4_iter45 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        reg_586 <= grp_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln43_1_reg_1827_pp4_iter52_reg == 1'd0) & (ap_enable_reg_pp4_iter53 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((icmp_ln43_reg_1767_pp3_iter52_reg == 1'd0) & (ap_enable_reg_pp3_iter53 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        reg_591 <= grp_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((idscu_reg_1519 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
        rs_reg_1743 <= rs_fu_1232_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        select_ln117_reg_1720 <= select_ln117_fu_1193_p3;
        trunc_ln117_reg_1716 <= trunc_ln117_fu_1189_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        sub_ln43_reg_1817 <= sub_ln43_fu_1332_p2;
        trunc_ln124_reg_1812 <= trunc_ln124_fu_1328_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        trunc_ln78_reg_1544 <= trunc_ln78_fu_739_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1767_pp3_iter34_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        udiv_ln50_reg_1776 <= grp_fu_1265_p2;
        urem_ln51_reg_1781 <= grp_fu_1270_p2;
    end
end

always @ (*) begin
    if ((icmp_ln78_2_reg_1530 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln96_fu_1078_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln43_fu_1254_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state55 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state55 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln43_1_fu_1343_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state113 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state113 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln61_fu_615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter0 == 1'b0)) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter53 == 1'b0) & (ap_enable_reg_pp3_iter37 == 1'b0) & (ap_enable_reg_pp3_iter45 == 1'b0) & (ap_enable_reg_pp3_iter54 == 1'b0) & (ap_enable_reg_pp3_iter52 == 1'b0) & (ap_enable_reg_pp3_iter51 == 1'b0) & (ap_enable_reg_pp3_iter50 == 1'b0) & (ap_enable_reg_pp3_iter49 == 1'b0) & (ap_enable_reg_pp3_iter48 == 1'b0) & (ap_enable_reg_pp3_iter47 == 1'b0) & (ap_enable_reg_pp3_iter46 == 1'b0) & (ap_enable_reg_pp3_iter44 == 1'b0) & (ap_enable_reg_pp3_iter43 == 1'b0) & (ap_enable_reg_pp3_iter42 == 1'b0) & (ap_enable_reg_pp3_iter41 == 1'b0) & (ap_enable_reg_pp3_iter40 == 1'b0) & (ap_enable_reg_pp3_iter39 == 1'b0) & (ap_enable_reg_pp3_iter38 == 1'b0) & (ap_enable_reg_pp3_iter36 == 1'b0) & (ap_enable_reg_pp3_iter35 == 1'b0) & (ap_enable_reg_pp3_iter34 == 1'b0) & (ap_enable_reg_pp3_iter33 == 1'b0) & (ap_enable_reg_pp3_iter32 == 1'b0) & (ap_enable_reg_pp3_iter31 == 1'b0) & (ap_enable_reg_pp3_iter30 == 1'b0) & (ap_enable_reg_pp3_iter29 == 1'b0) & (ap_enable_reg_pp3_iter28 == 1'b0) & (ap_enable_reg_pp3_iter27 == 1'b0) & (ap_enable_reg_pp3_iter26 == 1'b0) & (ap_enable_reg_pp3_iter25 == 1'b0) & (ap_enable_reg_pp3_iter24 == 1'b0) & (ap_enable_reg_pp3_iter23 == 1'b0) & (ap_enable_reg_pp3_iter22 == 1'b0) & (ap_enable_reg_pp3_iter21 == 1'b0) & (ap_enable_reg_pp3_iter20 == 1'b0) & (ap_enable_reg_pp3_iter19 == 1'b0) & (ap_enable_reg_pp3_iter18 == 1'b0) & (ap_enable_reg_pp3_iter17 == 1'b0) & (ap_enable_reg_pp3_iter16 == 1'b0) & (ap_enable_reg_pp3_iter15 == 1'b0) & (ap_enable_reg_pp3_iter14 == 1'b0) & (ap_enable_reg_pp3_iter13 == 1'b0) & (ap_enable_reg_pp3_iter12 == 1'b0) & (ap_enable_reg_pp3_iter11 == 1'b0) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter37 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter53 == 1'b0) & (ap_enable_reg_pp4_iter45 == 1'b0) & (ap_enable_reg_pp4_iter54 == 1'b0) & (ap_enable_reg_pp4_iter52 == 1'b0) & (ap_enable_reg_pp4_iter51 == 1'b0) & (ap_enable_reg_pp4_iter50 == 1'b0) & (ap_enable_reg_pp4_iter49 == 1'b0) & (ap_enable_reg_pp4_iter48 == 1'b0) & (ap_enable_reg_pp4_iter47 == 1'b0) & (ap_enable_reg_pp4_iter46 == 1'b0) & (ap_enable_reg_pp4_iter44 == 1'b0) & (ap_enable_reg_pp4_iter43 == 1'b0) & (ap_enable_reg_pp4_iter42 == 1'b0) & (ap_enable_reg_pp4_iter41 == 1'b0) & (ap_enable_reg_pp4_iter40 == 1'b0) & (ap_enable_reg_pp4_iter39 == 1'b0) & (ap_enable_reg_pp4_iter38 == 1'b0) & (ap_enable_reg_pp4_iter36 == 1'b0) & (ap_enable_reg_pp4_iter35 == 1'b0) & (ap_enable_reg_pp4_iter34 == 1'b0) & (ap_enable_reg_pp4_iter33 == 1'b0) & (ap_enable_reg_pp4_iter32 == 1'b0) & (ap_enable_reg_pp4_iter31 == 1'b0) & (ap_enable_reg_pp4_iter30 == 1'b0) & (ap_enable_reg_pp4_iter29 == 1'b0) & (ap_enable_reg_pp4_iter28 == 1'b0) & (ap_enable_reg_pp4_iter27 == 1'b0) & (ap_enable_reg_pp4_iter26 == 1'b0) & (ap_enable_reg_pp4_iter25 == 1'b0) & (ap_enable_reg_pp4_iter24 == 1'b0) & (ap_enable_reg_pp4_iter23 == 1'b0) & (ap_enable_reg_pp4_iter22 == 1'b0) & (ap_enable_reg_pp4_iter21 == 1'b0) & (ap_enable_reg_pp4_iter20 == 1'b0) & (ap_enable_reg_pp4_iter19 == 1'b0) & (ap_enable_reg_pp4_iter18 == 1'b0) & (ap_enable_reg_pp4_iter17 == 1'b0) & (ap_enable_reg_pp4_iter16 == 1'b0) & (ap_enable_reg_pp4_iter15 == 1'b0) & (ap_enable_reg_pp4_iter14 == 1'b0) & (ap_enable_reg_pp4_iter13 == 1'b0) & (ap_enable_reg_pp4_iter12 == 1'b0) & (ap_enable_reg_pp4_iter11 == 1'b0) & (ap_enable_reg_pp4_iter10 == 1'b0) & (ap_enable_reg_pp4_iter9 == 1'b0) & (ap_enable_reg_pp4_iter8 == 1'b0) & (ap_enable_reg_pp4_iter7 == 1'b0) & (ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln43_1_reg_1827 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        ap_phi_mux_i_2_phi_fu_545_p4 = i_3_reg_1831;
    end else begin
        ap_phi_mux_i_2_phi_fu_545_p4 = i_2_reg_541;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln43_reg_1767 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_i_phi_fu_533_p4 = i_1_reg_1771;
    end else begin
        ap_phi_mux_i_phi_fu_533_p4 = i_reg_529;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln96_reg_1640 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_k_1_phi_fu_511_p4 = add_ln96_reg_1644;
    end else begin
        ap_phi_mux_k_1_phi_fu_511_p4 = k_1_reg_507;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln78_2_reg_1530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_k_4_phi_fu_420_p4 = k_reg_1549;
    end else begin
        ap_phi_mux_k_4_phi_fu_420_p4 = k_4_reg_417;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_phi_mux_phi_ln92_phi_fu_478_p4 = trunc_ln78_reg_1544;
    end else begin
        ap_phi_mux_phi_ln92_phi_fu_478_p4 = phi_ln92_reg_475;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_phi_mux_pidrow_0_lcssa_phi_fu_500_p4 = trunc_ln78_1_fu_905_p1;
    end else begin
        ap_phi_mux_pidrow_0_lcssa_phi_fu_500_p4 = pidrow_0_lcssa_reg_496;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln78_2_reg_1530_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_phi_mux_prow_phi_fu_467_p4 = prow_3_reg_1590;
    end else begin
        ap_phi_mux_prow_phi_fu_467_p4 = prow_reg_464;
    end
end

always @ (*) begin
    if (((icmp_ln61_fu_615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln61_fu_615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_return_0 = pivot_0_reg_353;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((icmp_ln61_fu_615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_return_1 = pivot12_0_reg_363;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((icmp_ln61_fu_615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_return_2 = pivot2_0_reg_373;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((icmp_ln61_fu_615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_return_3 = pivot3_0_reg_383;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter36 == 1'b1))) begin
        cols_0_ce0 = 1'b1;
    end else begin
        cols_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        cols_0_ce1 = 1'b1;
    end else begin
        cols_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln117_reg_1716 == 1'd0) & (1'b1 == ap_CS_fsm_state53))) begin
        cols_0_we1 = 1'b1;
    end else begin
        cols_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter36 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        cols_1_ce0 = 1'b1;
    end else begin
        cols_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        cols_1_ce1 = 1'b1;
    end else begin
        cols_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln117_reg_1716 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        cols_1_we1 = 1'b1;
    end else begin
        cols_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter46 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        grp_fu_553_p0 = reg_570;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter46 == 1'b1))) begin
        grp_fu_553_p0 = reg_575;
    end else begin
        grp_fu_553_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter38 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        grp_fu_557_p0 = cols_1_load_reg_1862;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter38 == 1'b1))) begin
        grp_fu_557_p0 = cols_0_load_reg_1801;
    end else begin
        grp_fu_557_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter38 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        grp_fu_557_p1 = rows_1_load_reg_1867;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter38 == 1'b1))) begin
        grp_fu_557_p1 = reg_580;
    end else begin
        grp_fu_557_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter43 == 1'b1))) begin
        matA_0_address0 = zext_ln53_4_fu_1319_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        matA_0_address0 = matA_0_addr_3_reg_1704;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        matA_0_address0 = matA_0_addr_1_reg_1649_pp1_iter1_reg;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        matA_0_address0 = zext_ln104_fu_1105_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        matA_0_address0 = zext_ln82_fu_733_p1;
    end else begin
        matA_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter54 == 1'b1))) begin
        matA_0_address1 = matA_0_addr_4_reg_1806_pp3_iter53_reg;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        matA_0_address1 = zext_ln117_1_fu_1183_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        matA_0_address1 = matA_0_addr_2_reg_1655_pp1_iter2_reg;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        matA_0_address1 = p_cast_fu_1094_p1;
    end else begin
        matA_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp3_iter45 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter44 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter43 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        matA_0_ce0 = 1'b1;
    end else begin
        matA_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter54 == 1'b1)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        matA_0_ce1 = 1'b1;
    end else begin
        matA_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        matA_0_d0 = div_reg_1730;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        matA_0_d0 = select_ln104_reg_1681;
    end else begin
        matA_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter54 == 1'b1))) begin
        matA_0_d1 = reg_591;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        matA_0_d1 = phi_ln102_reg_1673_pp1_iter2_reg;
    end else begin
        matA_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln117_reg_1716 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (pidcu_0_lcssa_t_reg_484 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        matA_0_we0 = 1'b1;
    end else begin
        matA_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln43_reg_1767_pp3_iter53_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter54 == 1'b1)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (idscu_reg_1519 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        matA_0_we1 = 1'b1;
    end else begin
        matA_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter43 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        matA_1_address0 = zext_ln53_5_fu_1407_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        matA_1_address0 = matA_1_addr_3_reg_1710;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        matA_1_address0 = matA_1_addr_1_reg_1661_pp1_iter1_reg;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        matA_1_address0 = zext_ln104_fu_1105_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        matA_1_address0 = zext_ln82_fu_733_p1;
    end else begin
        matA_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter54 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        matA_1_address1 = matA_1_addr_4_reg_1872_pp4_iter53_reg;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        matA_1_address1 = zext_ln117_1_fu_1183_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        matA_1_address1 = matA_1_addr_2_reg_1667_pp1_iter2_reg;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        matA_1_address1 = p_cast_fu_1094_p1;
    end else begin
        matA_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp4_iter45 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp4_iter44 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp4_iter43 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        matA_1_ce0 = 1'b1;
    end else begin
        matA_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp4_iter54 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        matA_1_ce1 = 1'b1;
    end else begin
        matA_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        matA_1_d0 = div_reg_1730;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        matA_1_d0 = select_ln104_reg_1681;
    end else begin
        matA_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter54 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        matA_1_d1 = reg_591;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        matA_1_d1 = phi_ln102_reg_1673_pp1_iter2_reg;
    end else begin
        matA_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln117_reg_1716 == 1'd1) & (1'b1 == ap_CS_fsm_state53)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (pidcu_0_lcssa_t_reg_484 == 1'd1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        matA_1_we0 = 1'b1;
    end else begin
        matA_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln43_1_reg_1827_pp4_iter53_reg == 1'd0) & (ap_enable_reg_pp4_iter54 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (idscu_reg_1519 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        matA_1_we1 = 1'b1;
    end else begin
        matA_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter36 == 1'b1))) begin
        rows_0_address0 = zext_ln53_1_fu_1308_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        rows_0_address0 = zext_ln61_reg_1502;
    end else begin
        rows_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter36 == 1'b1)))) begin
        rows_0_ce0 = 1'b1;
    end else begin
        rows_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        rows_0_ce1 = 1'b1;
    end else begin
        rows_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        rows_0_we1 = 1'b1;
    end else begin
        rows_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter36 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        rows_1_ce0 = 1'b1;
    end else begin
        rows_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        rows_1_ce1 = 1'b1;
    end else begin
        rows_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        rows_1_we1 = 1'b1;
    end else begin
        rows_1_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln61_fu_615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln78_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((icmp_ln78_2_reg_1530 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln78_2_reg_1530 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln96_fu_1078_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln96_fu_1078_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln111_reg_1692 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln111_2_fu_1157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln43_fu_1254_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter53 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter54 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln43_fu_1254_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter53 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter54 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln43_1_fu_1343_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0)) & ~((ap_enable_reg_pp4_iter53 == 1'b0) & (ap_enable_reg_pp4_iter54 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln43_1_fu_1343_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0)) | ((ap_enable_reg_pp4_iter53 == 1'b0) & (ap_enable_reg_pp4_iter54 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state168;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign absa_fu_781_p1 = p_Result_s_fu_773_p3;

assign add_ln104_fu_1100_p2 = (ap_phi_mux_k_1_phi_fu_511_p4 + tmp_20_cast_reg_1635);

assign add_ln117_fu_1178_p2 = (tmp_21_cast_fu_1170_p3 + trunc_ln61_1_reg_1507);

assign add_ln124_fu_1237_p2 = (tmp_1_fu_1222_p4 + 2'd1);

assign add_ln51_fu_1249_p2 = (trunc_ln61_1_reg_1507 + 3'd1);

assign add_ln53_1_fu_1402_p2 = (c_1_reg_1841 + tmp_24_cast_fu_1390_p3);

assign add_ln53_fu_1313_p2 = (c_fu_1286_p2 + tmp_23_cast_fu_1300_p3);

assign add_ln61_1_fu_1411_p2 = ($signed(indvars_iv110_reg_405) + $signed(32'd4294967295));

assign add_ln61_fu_605_p0 = m;

assign add_ln61_fu_605_p2 = ($signed(add_ln61_fu_605_p0) + $signed(32'd4294967295));

assign add_ln82_fu_728_p2 = (trunc_ln61_1_reg_1507 + tmp_17_cast_fu_720_p3);

assign add_ln96_fu_1083_p2 = (ap_phi_mux_k_1_phi_fu_511_p4 + 3'd1);

assign and_ln83_1_fu_869_p2 = (grp_fu_565_p2 & and_ln83_fu_863_p2);

assign and_ln83_fu_863_p2 = (or_ln83_fu_855_p2 & or_ln83_1_fu_859_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd47];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)) | ((ap_ST_fsm_pp0_stage2 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage2_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1 = (((1'b1 == ap_block_pp1_stage1_subdone) & (ap_ST_fsm_pp1_stage1 == ap_CS_fsm)) | ((1'b1 == ap_block_pp1_stage0_subdone) & (ap_ST_fsm_pp1_stage0 == ap_CS_fsm)));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3 = ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4 = ((1'b1 == ap_block_pp4_stage0_subdone) & (ap_ST_fsm_pp4_stage0 == ap_CS_fsm));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp3_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp3_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp3_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp3_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp3_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp3_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp3_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp3_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp3_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp3_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp4_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp4_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp4_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp4_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp4_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp4_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp4_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp4_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp4_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp4_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp4_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp4_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp4_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp4_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp4_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp4_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp4_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp4_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp4_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp4_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp4_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp4_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp4_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp4_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp4_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp4_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp4_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp4_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp4_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp4_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp4_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp4_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp4_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp4_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp4_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp4_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp4_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp4_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp4_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state159_pp4_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state160_pp4_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp4_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp4_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp4_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state164_pp4_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state165_pp4_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp4_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state167_pp4_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state169_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp3_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp3_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp3_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp3_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp3_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp3_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp3_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp3_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp3_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp3_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp3_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp3_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp3_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp3_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp3_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp3_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp3_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp3_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp3_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp3_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp3_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp3_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp3_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp3_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp3_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp3_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp3_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp3_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp3_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp3_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp3_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp3_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp3_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp3_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp3_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp3_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp3_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_354 = (icmp_ln111_2_fu_1157_p2 == 1'd0);
end

assign ap_enable_operation_359 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_398 = (trunc_ln117_reg_1716 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_516 = (icmp_ln43_reg_1767_pp3_iter42_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_520 = (icmp_ln43_reg_1767_pp3_iter44_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_533 = (icmp_ln43_reg_1767_pp3_iter53_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_639 = (icmp_ln43_1_reg_1827_pp4_iter42_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_643 = (icmp_ln43_1_reg_1827_pp4_iter44_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_656 = (icmp_ln43_1_reg_1827_pp4_iter53_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

always @ (*) begin
    ap_enable_state100_pp3_iter45_stage0 = ((ap_enable_reg_pp3_iter45 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_enable_state109_pp3_iter54_stage0 = ((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter54 == 1'b1));
end

always @ (*) begin
    ap_enable_state156_pp4_iter43_stage0 = ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter43 == 1'b1));
end

always @ (*) begin
    ap_enable_state158_pp4_iter45_stage0 = ((ap_enable_reg_pp4_iter45 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0));
end

always @ (*) begin
    ap_enable_state167_pp4_iter54_stage0 = ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter54 == 1'b1));
end

always @ (*) begin
    ap_enable_state19_pp2_iter0_stage0 = ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_state19));
end

always @ (*) begin
    ap_enable_state21_pp2_iter0_stage2 = ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_state21));
end

always @ (*) begin
    ap_enable_state53_pp2_iter0_stage34 = ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_state53));
end

always @ (*) begin
    ap_enable_state98_pp3_iter43_stage0 = ((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter43 == 1'b1));
end

assign bitcast_ln83_fu_796_p1 = pmax_reg_452;

assign c_1_fu_1368_p2 = (trunc_ln51_1_fu_1364_p1 + add_ln51_reg_1761);

assign c_fu_1286_p2 = (trunc_ln51_fu_1283_p1 + add_ln51_reg_1761);

assign cols_0_address0 = zext_ln53_fu_1291_p1;

assign cols_0_address1 = zext_ln117_fu_1211_p1;

assign cols_1_address0 = zext_ln53_2_fu_1381_p1;

assign cols_1_address1 = zext_ln117_fu_1211_p1;

assign empty_41_fu_1144_p2 = (s_reg_393 + 32'd2);

assign empty_fu_1089_p2 = (ap_phi_mux_k_1_phi_fu_511_p4 + tmp_s_reg_1630);

assign f_fu_753_p3 = ((idcu_fu_749_p1[0:0] === 1'b1) ? reg_570 : reg_575);

assign grp_fu_565_p0 = p_Result_s_fu_773_p3;

assign i_1_fu_1259_p2 = (ap_phi_mux_i_phi_fu_533_p4 + 32'd1);

assign i_3_fu_1348_p2 = (ap_phi_mux_i_2_phi_fu_545_p4 + 32'd1);

assign icmp_ln111_1_fu_1140_p1 = m;

assign icmp_ln111_1_fu_1140_p2 = ((indvars_iv_next19_reg_1478 != icmp_ln111_1_fu_1140_p1) ? 1'b1 : 1'b0);

assign icmp_ln111_2_fu_1157_p2 = ((j_reg_519 == new_upper6_reg_1696) ? 1'b1 : 1'b0);

assign icmp_ln111_fu_1135_p2 = (($signed(zext_ln111_fu_1132_p1) < $signed(sext_ln61_1_reg_1455)) ? 1'b1 : 1'b0);

assign icmp_ln43_1_fu_1343_p2 = ((ap_phi_mux_i_2_phi_fu_545_p4 == mul_ln43_reg_1822) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_1254_p2 = ((ap_phi_mux_i_phi_fu_533_p4 == mul_ln61_reg_1514) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_615_p2 = ((s_reg_393 == add_ln61_reg_1460) ? 1'b1 : 1'b0);

assign icmp_ln78_1_fu_696_p1 = n;

assign icmp_ln78_1_fu_696_p2 = ((s_reg_393 != icmp_ln78_1_fu_696_p1) ? 1'b1 : 1'b0);

assign icmp_ln78_2_fu_707_p2 = ((ap_phi_mux_k_4_phi_fu_420_p4 == new_upper_reg_1525) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_650_p2 = (($signed(zext_ln61_1_fu_626_p1) < $signed(sext_ln61_reg_1450)) ? 1'b1 : 1'b0);

assign icmp_ln83_1_fu_820_p2 = ((trunc_ln83_fu_769_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_2_fu_826_p2 = ((tmp_3_fu_800_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln83_3_fu_832_p2 = ((trunc_ln83_1_fu_810_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_814_p2 = ((tmp_2_fu_786_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_1078_p1 = n;

assign icmp_ln96_fu_1078_p2 = ((zext_ln96_1_fu_1074_p1 == icmp_ln96_fu_1078_p1) ? 1'b1 : 1'b0);

assign idcu_fu_749_p1 = k_4_reg_417[0:0];

assign idrow_2_fu_851_p1 = idrow_fu_841_p4;

assign idrow_fu_841_p4 = {{k_4_reg_417_pp0_iter1_reg[31:1]}};

assign idscu_fu_692_p1 = s_reg_393[0:0];

assign idsrow_fu_630_p4 = {{s_reg_393[31:1]}};

assign indvars_iv_next19_fu_620_p2 = (32'd1 + s_reg_393);

assign j_2_fu_1216_p2 = (j_reg_519 + 32'd1);

assign k_fu_743_p2 = (32'd1 + k_4_reg_417);

assign new_upper6_fu_1150_p1 = m;

assign new_upper6_fu_1150_p3 = ((icmp_ln111_1_fu_1140_p2[0:0] === 1'b1) ? new_upper6_fu_1150_p1 : empty_41_fu_1144_p2);

assign new_upper_fu_701_p1 = n;

assign new_upper_fu_701_p3 = ((icmp_ln78_1_fu_696_p2[0:0] === 1'b1) ? new_upper_fu_701_p1 : indvars_iv_next19_reg_1478);

assign or_ln83_1_fu_859_p2 = (icmp_ln83_3_reg_1580 | icmp_ln83_2_reg_1575);

assign or_ln83_fu_855_p2 = (icmp_ln83_reg_1565 | icmp_ln83_1_reg_1570);

assign p_Result_s_fu_773_p3 = {{1'd0}, {trunc_ln368_fu_765_p1}};

assign p_Val2_s_fu_761_p1 = f_fu_753_p3;

assign p_cast_fu_1094_p1 = empty_fu_1089_p2;

assign phi_ln102_fu_1111_p3 = ((pidcu_0_lcssa_t_reg_484[0:0] === 1'b1) ? matA_1_q1 : matA_0_q1);

assign pidcu_2_fu_883_p3 = ((and_ln83_1_fu_869_p2[0:0] === 1'b1) ? zext_ln80_fu_838_p1 : pidcu_reg_440);

assign pidrow_2_fu_891_p3 = ((and_ln83_1_fu_869_p2[0:0] === 1'b1) ? idrow_2_fu_851_p1 : pidrow_reg_428);

assign pmax_2_fu_899_p3 = ((and_ln83_1_reg_1585[0:0] === 1'b1) ? absa_reg_1559 : pmax_reg_452);

assign prow_3_fu_875_p3 = ((and_ln83_1_fu_869_p2[0:0] === 1'b1) ? k_4_reg_417_pp0_iter1_reg : prow_reg_464);

assign r_1_fu_1278_p2 = (trunc_ln50_fu_1275_p1 + add_ln124_reg_1748);

assign r_2_fu_1376_p2 = (trunc_ln50_1_fu_1373_p1 + trunc_ln124_reg_1812);

assign rows_0_address1 = zext_ln96_fu_1126_p1;

assign rows_1_address0 = zext_ln53_3_fu_1398_p1;

assign rows_1_address1 = zext_ln96_fu_1126_p1;

assign rs_1_fu_1323_p3 = ((idscu_reg_1519[0:0] === 1'b1) ? rs_reg_1743 : zext_ln61_2_reg_1487);

assign rs_fu_1232_p2 = (zext_ln61_2_reg_1487 + 32'd1);

assign select_ln104_fu_1119_p3 = ((idscu_reg_1519[0:0] === 1'b1) ? matA_1_q0 : matA_0_q0);

assign select_ln117_fu_1193_p3 = ((trunc_ln117_fu_1189_p1[0:0] === 1'b1) ? matA_1_q1 : matA_0_q1);

assign sext_ln61_1_fu_601_p0 = m;

assign sext_ln61_1_fu_601_p1 = sext_ln61_1_fu_601_p0;

assign sext_ln61_fu_597_p0 = n;

assign sext_ln61_fu_597_p1 = sext_ln61_fu_597_p0;

assign sub_ln40_fu_1243_p2 = (32'd3 - s_reg_393);

assign sub_ln43_fu_1332_p2 = (32'd2 - rs_1_fu_1323_p3);

assign sub_ln61_fu_644_p2 = (32'd1 - zext_ln61_2_fu_640_p1);

assign tmp_17_cast_fu_720_p3 = {{tmp_fu_712_p3}, {2'd0}};

assign tmp_1_fu_1222_p4 = {{s_reg_393[2:1]}};

assign tmp_20_cast_fu_1066_p3 = {{tmp_7_fu_1058_p3}, {2'd0}};

assign tmp_21_cast_fu_1170_p3 = {{tmp_8_fu_1162_p3}, {2'd0}};

assign tmp_23_cast_fu_1300_p3 = {{trunc_ln53_fu_1296_p1}, {2'd0}};

assign tmp_24_cast_fu_1390_p3 = {{trunc_ln53_1_fu_1386_p1}, {2'd0}};

assign tmp_2_fu_786_p4 = {{p_Val2_s_fu_761_p1[62:52]}};

assign tmp_3_fu_800_p4 = {{bitcast_ln83_fu_796_p1[62:52]}};

assign tmp_7_fu_1058_p3 = s_reg_393[32'd1];

assign tmp_8_fu_1162_p3 = j_reg_519[32'd1];

assign tmp_fu_712_p3 = ap_phi_mux_k_4_phi_fu_420_p4[32'd1];

assign tmp_s_fu_1050_p3 = {{ap_phi_mux_pidrow_0_lcssa_phi_fu_500_p4}, {2'd0}};

assign trunc_ln117_fu_1189_p1 = j_reg_519[0:0];

assign trunc_ln124_fu_1328_p1 = rs_1_fu_1323_p3[1:0];

assign trunc_ln368_fu_765_p1 = p_Val2_s_fu_761_p1[62:0];

assign trunc_ln50_1_fu_1373_p1 = udiv_ln50_1_reg_1836[1:0];

assign trunc_ln50_fu_1275_p1 = udiv_ln50_reg_1776[1:0];

assign trunc_ln51_1_fu_1364_p1 = grp_fu_1359_p2[2:0];

assign trunc_ln51_fu_1283_p1 = urem_ln51_reg_1781[2:0];

assign trunc_ln53_1_fu_1386_p1 = r_2_fu_1376_p2[0:0];

assign trunc_ln53_fu_1296_p1 = r_1_fu_1278_p2[0:0];

assign trunc_ln61_1_fu_688_p1 = s_reg_393[2:0];

assign trunc_ln61_fu_611_p1 = s_reg_393[1:0];

assign trunc_ln78_1_fu_905_p1 = pidrow_reg_428[0:0];

assign trunc_ln78_2_fu_910_p1 = pidcu_reg_440[0:0];

assign trunc_ln78_fu_739_p1 = ap_phi_mux_prow_phi_fu_467_p4[1:0];

assign trunc_ln83_1_fu_810_p1 = bitcast_ln83_fu_796_p1[51:0];

assign trunc_ln83_fu_769_p1 = p_Val2_s_fu_761_p1[51:0];

assign zext_ln104_fu_1105_p1 = add_ln104_fu_1100_p2;

assign zext_ln111_fu_1132_p1 = indvars_iv_next19_reg_1478;

assign zext_ln117_1_fu_1183_p1 = add_ln117_fu_1178_p2;

assign zext_ln117_fu_1211_p1 = r_reg_1725;

assign zext_ln53_1_fu_1308_p1 = c_fu_1286_p2;

assign zext_ln53_2_fu_1381_p1 = r_2_fu_1376_p2;

assign zext_ln53_3_fu_1398_p1 = c_1_reg_1841;

assign zext_ln53_4_fu_1319_p1 = add_ln53_reg_1786_pp3_iter42_reg;

assign zext_ln53_5_fu_1407_p1 = add_ln53_1_reg_1847_pp4_iter42_reg;

assign zext_ln53_fu_1291_p1 = r_1_fu_1278_p2;

assign zext_ln61_1_fu_626_p1 = s_reg_393;

assign zext_ln61_2_fu_640_p1 = idsrow_fu_630_p4;

assign zext_ln61_fu_684_p1 = s_reg_393;

assign zext_ln80_fu_838_p1 = idcu_reg_1554;

assign zext_ln82_fu_733_p1 = add_ln82_fu_728_p2;

assign zext_ln96_1_fu_1074_p1 = ap_phi_mux_k_1_phi_fu_511_p4;

assign zext_ln96_fu_1126_p1 = k_1_reg_507_pp1_iter1_reg;

always @ (posedge ap_clk) begin
    zext_ln61_2_reg_1487[31] <= 1'b0;
    zext_ln61_reg_1502[63:32] <= 32'b00000000000000000000000000000000;
    absa_reg_1559[63] <= 1'b0;
    tmp_s_reg_1630[1:0] <= 2'b00;
    tmp_20_cast_reg_1635[1:0] <= 2'b00;
    ap_enable_reg_pp2_iter0 <= 1'b0;
end

endmodule //kernel_gelinearsolver_0_getrf_core_double_2_4_2_s
