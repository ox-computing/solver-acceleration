// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_gelinearsolver_0_kernel_gelinearsolver_0,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu50-fsvh2104-2-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.496000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=0,HLS_SYN_FF=14976,HLS_SYN_LUT=12343,HLS_VERSION=2020_1}" *)

module kernel_gelinearsolver_0 (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 64;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] na;
wire   [63:0] dataA;
wire   [63:0] dataB;
reg    gmem0_AWVALID;
wire    gmem0_AWREADY;
reg    gmem0_WVALID;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [63:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
reg    gmem0_BREADY;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
reg   [63:0] dataB_read_reg_103;
reg    ap_block_state1;
reg   [63:0] dataA_read_reg_108;
wire    grp_gelinearsolver_double_4_2_s_fu_82_ap_start;
wire    grp_gelinearsolver_double_4_2_s_fu_82_ap_done;
wire    grp_gelinearsolver_double_4_2_s_fu_82_ap_idle;
wire    grp_gelinearsolver_double_4_2_s_fu_82_ap_ready;
wire    grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWVALID;
wire   [63:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWADDR;
wire   [0:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWID;
wire   [31:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWLEN;
wire   [2:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWSIZE;
wire   [1:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWBURST;
wire   [1:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWLOCK;
wire   [3:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWCACHE;
wire   [2:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWPROT;
wire   [3:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWQOS;
wire   [3:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWREGION;
wire   [0:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWUSER;
wire    grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WVALID;
wire   [63:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WDATA;
wire   [7:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WSTRB;
wire    grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WLAST;
wire   [0:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WID;
wire   [0:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WUSER;
wire    grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARVALID;
wire   [63:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARADDR;
wire   [0:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARID;
wire   [31:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARLEN;
wire   [2:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARSIZE;
wire   [1:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARBURST;
wire   [1:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARLOCK;
wire   [3:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARCACHE;
wire   [2:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARPROT;
wire   [3:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARQOS;
wire   [3:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARREGION;
wire   [0:0] grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARUSER;
wire    grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_RREADY;
wire    grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_BREADY;
reg    grp_gelinearsolver_double_4_2_s_fu_82_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_gelinearsolver_double_4_2_s_fu_82_ap_start_reg = 1'b0;
end

kernel_gelinearsolver_0_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .na(na),
    .dataA(dataA),
    .dataB(dataB),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

kernel_gelinearsolver_0_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 64 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 32 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARADDR),
    .I_ARID(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARID),
    .I_ARLEN(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARLEN),
    .I_ARSIZE(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARSIZE),
    .I_ARLOCK(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARLOCK),
    .I_ARCACHE(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARCACHE),
    .I_ARQOS(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARQOS),
    .I_ARPROT(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARPROT),
    .I_ARUSER(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARUSER),
    .I_ARBURST(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARBURST),
    .I_ARREGION(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARREGION),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(gmem0_AWVALID),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWADDR),
    .I_AWID(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWID),
    .I_AWLEN(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWLEN),
    .I_AWSIZE(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWSIZE),
    .I_AWLOCK(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWLOCK),
    .I_AWCACHE(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWCACHE),
    .I_AWQOS(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWQOS),
    .I_AWPROT(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWPROT),
    .I_AWUSER(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWUSER),
    .I_AWBURST(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWBURST),
    .I_AWREGION(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWREGION),
    .I_WVALID(gmem0_WVALID),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WDATA),
    .I_WID(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WID),
    .I_WUSER(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WUSER),
    .I_WLAST(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WLAST),
    .I_WSTRB(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WSTRB),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(gmem0_BREADY),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

kernel_gelinearsolver_0_gelinearsolver_double_4_2_s grp_gelinearsolver_double_4_2_s_fu_82(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_gelinearsolver_double_4_2_s_fu_82_ap_start),
    .ap_done(grp_gelinearsolver_double_4_2_s_fu_82_ap_done),
    .ap_idle(grp_gelinearsolver_double_4_2_s_fu_82_ap_idle),
    .ap_ready(grp_gelinearsolver_double_4_2_s_fu_82_ap_ready),
    .m_axi_gmem0_AWVALID(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(gmem0_AWREADY),
    .m_axi_gmem0_AWADDR(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(gmem0_WREADY),
    .m_axi_gmem0_WDATA(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(gmem0_RVALID),
    .m_axi_gmem0_RREADY(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(gmem0_RDATA),
    .m_axi_gmem0_RLAST(gmem0_RLAST),
    .m_axi_gmem0_RID(gmem0_RID),
    .m_axi_gmem0_RUSER(gmem0_RUSER),
    .m_axi_gmem0_RRESP(gmem0_RRESP),
    .m_axi_gmem0_BVALID(gmem0_BVALID),
    .m_axi_gmem0_BREADY(grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(gmem0_BRESP),
    .m_axi_gmem0_BID(gmem0_BID),
    .m_axi_gmem0_BUSER(gmem0_BUSER),
    .n(na),
    .A(dataA_read_reg_108),
    .B(dataB_read_reg_103)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_gelinearsolver_double_4_2_s_fu_82_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_gelinearsolver_double_4_2_s_fu_82_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_gelinearsolver_double_4_2_s_fu_82_ap_start_reg <= 1'b1;
        end else if ((grp_gelinearsolver_double_4_2_s_fu_82_ap_ready == 1'b1)) begin
            grp_gelinearsolver_double_4_2_s_fu_82_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        dataA_read_reg_108 <= dataA;
        dataB_read_reg_103 <= dataB;
    end
end

always @ (*) begin
    if (((grp_gelinearsolver_double_4_2_s_fu_82_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_gelinearsolver_double_4_2_s_fu_82_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem0_ARVALID = grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_ARVALID;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem0_AWVALID = grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_AWVALID;
    end else begin
        gmem0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem0_BREADY = grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_BREADY;
    end else begin
        gmem0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem0_RREADY = grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_RREADY;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem0_WVALID = grp_gelinearsolver_double_4_2_s_fu_82_m_axi_gmem0_WVALID;
    end else begin
        gmem0_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_gelinearsolver_double_4_2_s_fu_82_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_gelinearsolver_double_4_2_s_fu_82_ap_start = grp_gelinearsolver_double_4_2_s_fu_82_ap_start_reg;

endmodule //kernel_gelinearsolver_0
