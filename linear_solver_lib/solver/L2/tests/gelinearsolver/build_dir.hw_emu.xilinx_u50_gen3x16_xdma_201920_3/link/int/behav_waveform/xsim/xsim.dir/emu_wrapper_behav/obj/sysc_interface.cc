#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::map<unsigned int, std::pair<unsigned int, std::list < void*> > > *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE(unsigned int netid, int len, char* pval)
    {
        unsigned int data_type = (*_glb_hdl_sc_channel_map)[netid].first;
        std::list<void*> list_of_ch = (*_glb_hdl_sc_channel_map)[netid].second;
        switch (data_type) {
            case 0 /*int*/ : { 
                int val = *((int*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,int>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 1 /*bool*/ : { 
                bool val = *((bool*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,bool>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 2 /*sc_logic*/ : { 
                sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 3 /*sc_bv*/ : { 
                switch (len) { 
                    case 1 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 2 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 3 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 4 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 8 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 32 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 64 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                        default: 
                            std::cout << "Error, unknown bitvector length: " << len << " NOT supported " << std::endl;
                            assert(0);
                }; 
                break;
            } 
            case 5 /*bit*/ : { 
                sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*it))->update_from_hdl(val);
                break;
            } 
            default: 
                std::cout << "Error, unknown type: " << data_type << " NOT supported " << std::endl;
                assert(0);
        };
    }


extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::map <unsigned int, std::pair<unsigned int, std::list<void*> > > ();
        sc_inst_1 = new emu_dpa_hub_0(".emu_wrapper.emu_i.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(31);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map)[2598].first = 1;
        (*_glb_hdl_sc_channel_map)[2598].second.push_front(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[2581].first = 1;
        (*_glb_hdl_sc_channel_map)[2581].second.push_front(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map)[2611].first = 1;
        (*_glb_hdl_sc_channel_map)[2611].second.push_front(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map)[2610].first = 1;
        (*_glb_hdl_sc_channel_map)[2610].second.push_front(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map)[2544].first = 1;
        (*_glb_hdl_sc_channel_map)[2544].second.push_front(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map)[2543].first = 1;
        (*_glb_hdl_sc_channel_map)[2543].second.push_front(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(11351968);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map)[2612].first = 3;
        (*_glb_hdl_sc_channel_map)[2612].second.push_front(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map)[2618].first = 1;
        (*_glb_hdl_sc_channel_map)[2618].second.push_front(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map)[2616].first = 3;
        (*_glb_hdl_sc_channel_map)[2616].second.push_front(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map)[2614].first = 3;
        (*_glb_hdl_sc_channel_map)[2614].second.push_front(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map)[2622].first = 1;
        (*_glb_hdl_sc_channel_map)[2622].second.push_front(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(11352304);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(11352360);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map)[2619].first = 1;
        (*_glb_hdl_sc_channel_map)[2619].second.push_front(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map)[2617].first = 3;
        (*_glb_hdl_sc_channel_map)[2617].second.push_front(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map)[2615].first = 3;
        (*_glb_hdl_sc_channel_map)[2615].second.push_front(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map)[2623].first = 1;
        (*_glb_hdl_sc_channel_map)[2623].second.push_front(p_1_trace_tvalid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[2548].first = 3;
        (*_glb_hdl_sc_channel_map)[2548].second.push_front(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[2550].first = 1;
        (*_glb_hdl_sc_channel_map)[2550].second.push_front(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(11352752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[2558].first = 3;
        (*_glb_hdl_sc_channel_map)[2558].second.push_front(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[2560].first = 3;
        (*_glb_hdl_sc_channel_map)[2560].second.push_front(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[2561].first = 1;
        (*_glb_hdl_sc_channel_map)[2561].second.push_front(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(11352976);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(11353032);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[2551].first = 1;
        (*_glb_hdl_sc_channel_map)[2551].second.push_front(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(11353144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[2545].first = 3;
        (*_glb_hdl_sc_channel_map)[2545].second.push_front(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[2547].first = 1;
        (*_glb_hdl_sc_channel_map)[2547].second.push_front(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(11353312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(11353368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(11353424);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(11353480);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[2555].first = 1;
        (*_glb_hdl_sc_channel_map)[2555].second.push_front(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map)[2565].first = 3;
        (*_glb_hdl_sc_channel_map)[2565].second.push_front(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map)[2567].first = 1;
        (*_glb_hdl_sc_channel_map)[2567].second.push_front(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(11353704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map)[2575].first = 3;
        (*_glb_hdl_sc_channel_map)[2575].second.push_front(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map)[2577].first = 3;
        (*_glb_hdl_sc_channel_map)[2577].second.push_front(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map)[2578].first = 1;
        (*_glb_hdl_sc_channel_map)[2578].second.push_front(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(11353928);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(11353984);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map)[2568].first = 1;
        (*_glb_hdl_sc_channel_map)[2568].second.push_front(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(11354096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map)[2562].first = 3;
        (*_glb_hdl_sc_channel_map)[2562].second.push_front(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map)[2564].first = 1;
        (*_glb_hdl_sc_channel_map)[2564].second.push_front(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(11354264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(11354320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(11354376);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(11354432);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map)[2572].first = 1;
        (*_glb_hdl_sc_channel_map)[2572].second.push_front(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map)[2587].first = 3;
        (*_glb_hdl_sc_channel_map)[2587].second.push_front(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map)[2593].first = 1;
        (*_glb_hdl_sc_channel_map)[2593].second.push_front(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(11354656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map)[2590].first = 3;
        (*_glb_hdl_sc_channel_map)[2590].second.push_front(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map)[2592].first = 3;
        (*_glb_hdl_sc_channel_map)[2592].second.push_front(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map)[2588].first = 3;
        (*_glb_hdl_sc_channel_map)[2588].second.push_front(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map)[2589].first = 3;
        (*_glb_hdl_sc_channel_map)[2589].second.push_front(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map)[2605].first = 3;
        (*_glb_hdl_sc_channel_map)[2605].second.push_front(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map)[2608].first = 3;
        (*_glb_hdl_sc_channel_map)[2608].second.push_front(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map)[2609].first = 1;
        (*_glb_hdl_sc_channel_map)[2609].second.push_front(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(11355104);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(11355160);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map)[2595].first = 1;
        (*_glb_hdl_sc_channel_map)[2595].second.push_front(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map)[2606].first = 1;
        (*_glb_hdl_sc_channel_map)[2606].second.push_front(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(11355328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(11355384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(11355440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map)[2579].first = 3;
        (*_glb_hdl_sc_channel_map)[2579].second.push_front(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map)[2586].first = 1;
        (*_glb_hdl_sc_channel_map)[2586].second.push_front(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(11355608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map)[2583].first = 3;
        (*_glb_hdl_sc_channel_map)[2583].second.push_front(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map)[2585].first = 3;
        (*_glb_hdl_sc_channel_map)[2585].second.push_front(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map)[2580].first = 3;
        (*_glb_hdl_sc_channel_map)[2580].second.push_front(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map)[2582].first = 3;
        (*_glb_hdl_sc_channel_map)[2582].second.push_front(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(11355888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(11355944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(11356000);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(11356056);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map)[2602].first = 1;
        (*_glb_hdl_sc_channel_map)[2602].second.push_front(p_1_s_aximm_rready);
        sc_inst_2 = new emu_dpa_mon0_0(".emu_wrapper.emu_i.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map)[2661].first = 1;
        (*_glb_hdl_sc_channel_map)[2661].second.push_front(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map)[2662].first = 1;
        (*_glb_hdl_sc_channel_map)[2662].second.push_front(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map)[2680].first = 1;
        (*_glb_hdl_sc_channel_map)[2680].second.push_front(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map)[2681].first = 1;
        (*_glb_hdl_sc_channel_map)[2681].second.push_front(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[538].first = 3;
        (*_glb_hdl_sc_channel_map)[538].second.push_front(p_2_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[536].first = 1;
        (*_glb_hdl_sc_channel_map)[536].second.push_front(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(11356552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[533].first = 3;
        (*_glb_hdl_sc_channel_map)[533].second.push_front(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[532].first = 3;
        (*_glb_hdl_sc_channel_map)[532].second.push_front(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[531].first = 1;
        (*_glb_hdl_sc_channel_map)[531].second.push_front(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(11356776);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(11356832);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[535].first = 1;
        (*_glb_hdl_sc_channel_map)[535].second.push_front(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(11356944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[541].first = 3;
        (*_glb_hdl_sc_channel_map)[541].second.push_front(p_2_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[539].first = 1;
        (*_glb_hdl_sc_channel_map)[539].second.push_front(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(11357112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(11357168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(11357224);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(11357280);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[534].first = 1;
        (*_glb_hdl_sc_channel_map)[534].second.push_front(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[2645].first = 1;
        (*_glb_hdl_sc_channel_map)[2645].second.push_front(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[2643].first = 1;
        (*_glb_hdl_sc_channel_map)[2643].second.push_front(p_2_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[2641].first = 3;
        (*_glb_hdl_sc_channel_map)[2641].second.push_front(p_2_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_AWID.bind(*p_2_mon_AWID);
        (*_glb_hdl_sc_channel_map)[542].first = 3;
        (*_glb_hdl_sc_channel_map)[542].second.push_front(p_2_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->mon_AWLEN.bind(*p_2_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[2642].first = 3;
        (*_glb_hdl_sc_channel_map)[2642].second.push_front(p_2_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->mon_AWSIZE.bind(*p_2_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[2644].first = 3;
        (*_glb_hdl_sc_channel_map)[2644].second.push_front(p_2_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_AWBURST.bind(*p_2_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[543].first = 3;
        (*_glb_hdl_sc_channel_map)[543].second.push_front(p_2_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[2660].first = 1;
        (*_glb_hdl_sc_channel_map)[2660].second.push_front(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[2658].first = 1;
        (*_glb_hdl_sc_channel_map)[2658].second.push_front(p_2_mon_WREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_WDATA = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[2656].first = 3;
        (*_glb_hdl_sc_channel_map)[2656].second.push_front(p_2_mon_WDATA);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_mon_WSTRB = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[2659].first = 3;
        (*_glb_hdl_sc_channel_map)[2659].second.push_front(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WLAST.bind(*p_2_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[2657].first = 1;
        (*_glb_hdl_sc_channel_map)[2657].second.push_front(p_2_mon_WLAST);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[2640].first = 1;
        (*_glb_hdl_sc_channel_map)[2640].second.push_front(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[2638].first = 1;
        (*_glb_hdl_sc_channel_map)[2638].second.push_front(p_2_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[2636].first = 3;
        (*_glb_hdl_sc_channel_map)[2636].second.push_front(p_2_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_ARID.bind(*p_2_mon_ARID);
        (*_glb_hdl_sc_channel_map)[544].first = 3;
        (*_glb_hdl_sc_channel_map)[544].second.push_front(p_2_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->mon_ARLEN.bind(*p_2_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[2637].first = 3;
        (*_glb_hdl_sc_channel_map)[2637].second.push_front(p_2_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->mon_ARSIZE.bind(*p_2_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[2639].first = 3;
        (*_glb_hdl_sc_channel_map)[2639].second.push_front(p_2_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_ARBURST.bind(*p_2_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[545].first = 3;
        (*_glb_hdl_sc_channel_map)[545].second.push_front(p_2_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[2655].first = 1;
        (*_glb_hdl_sc_channel_map)[2655].second.push_front(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[2653].first = 1;
        (*_glb_hdl_sc_channel_map)[2653].second.push_front(p_2_mon_RREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_RDATA = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[2650].first = 3;
        (*_glb_hdl_sc_channel_map)[2650].second.push_front(p_2_mon_RDATA);
        xsim_sc_channel<0, bool > *p_2_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RLAST.bind(*p_2_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[2652].first = 1;
        (*_glb_hdl_sc_channel_map)[2652].second.push_front(p_2_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_RID.bind(*p_2_mon_RID);
        (*_glb_hdl_sc_channel_map)[2651].first = 3;
        (*_glb_hdl_sc_channel_map)[2651].second.push_front(p_2_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[2654].first = 3;
        (*_glb_hdl_sc_channel_map)[2654].second.push_front(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[2649].first = 1;
        (*_glb_hdl_sc_channel_map)[2649].second.push_front(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[2647].first = 1;
        (*_glb_hdl_sc_channel_map)[2647].second.push_front(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[2648].first = 3;
        (*_glb_hdl_sc_channel_map)[2648].second.push_front(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_BID.bind(*p_2_mon_BID);
        (*_glb_hdl_sc_channel_map)[2646].first = 3;
        (*_glb_hdl_sc_channel_map)[2646].second.push_front(p_2_mon_BID);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tready.bind(*p_2_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[2628].first = 1;
        (*_glb_hdl_sc_channel_map)[2628].second.push_front(p_2_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_rd_tdata.bind(*p_2_m_axis_rd_tdata);
        p_2_m_axis_rd_tdata->set_sv_netview_offsetfromdp(11359072);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tlast.bind(*p_2_m_axis_rd_tlast);
        p_2_m_axis_rd_tlast->set_sv_netview_offsetfromdp(11359128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_rd_tid.bind(*p_2_m_axis_rd_tid);
        p_2_m_axis_rd_tid->set_sv_netview_offsetfromdp(11359184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_rd_tdest.bind(*p_2_m_axis_rd_tdest);
        p_2_m_axis_rd_tdest->set_sv_netview_offsetfromdp(11359240);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tready.bind(*p_2_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[2634].first = 1;
        (*_glb_hdl_sc_channel_map)[2634].second.push_front(p_2_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_wr_tdata.bind(*p_2_m_axis_wr_tdata);
        p_2_m_axis_wr_tdata->set_sv_netview_offsetfromdp(11359352);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tlast.bind(*p_2_m_axis_wr_tlast);
        p_2_m_axis_wr_tlast->set_sv_netview_offsetfromdp(11359408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_wr_tid.bind(*p_2_m_axis_wr_tid);
        p_2_m_axis_wr_tid->set_sv_netview_offsetfromdp(11359464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_wr_tdest.bind(*p_2_m_axis_wr_tdest);
        p_2_m_axis_wr_tdest->set_sv_netview_offsetfromdp(11359520);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tvalid.bind(*p_2_m_axis_wr_tvalid);
        p_2_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(11359576);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tvalid.bind(*p_2_m_axis_rd_tvalid);
        p_2_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(11359632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr_mon.bind(*p_2_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[537].first = 3;
        (*_glb_hdl_sc_channel_map)[537].second.push_front(p_2_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot_mon.bind(*p_2_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[2666].first = 3;
        (*_glb_hdl_sc_channel_map)[2666].second.push_front(p_2_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid_mon.bind(*p_2_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[2668].first = 1;
        (*_glb_hdl_sc_channel_map)[2668].second.push_front(p_2_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready_mon.bind(*p_2_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[2667].first = 1;
        (*_glb_hdl_sc_channel_map)[2667].second.push_front(p_2_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata_mon.bind(*p_2_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[2676].first = 3;
        (*_glb_hdl_sc_channel_map)[2676].second.push_front(p_2_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb_mon.bind(*p_2_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[2678].first = 3;
        (*_glb_hdl_sc_channel_map)[2678].second.push_front(p_2_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid_mon.bind(*p_2_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[2679].first = 1;
        (*_glb_hdl_sc_channel_map)[2679].second.push_front(p_2_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready_mon.bind(*p_2_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[2677].first = 1;
        (*_glb_hdl_sc_channel_map)[2677].second.push_front(p_2_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp_mon.bind(*p_2_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[2670].first = 3;
        (*_glb_hdl_sc_channel_map)[2670].second.push_front(p_2_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid_mon.bind(*p_2_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[2671].first = 1;
        (*_glb_hdl_sc_channel_map)[2671].second.push_front(p_2_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready_mon.bind(*p_2_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[2669].first = 1;
        (*_glb_hdl_sc_channel_map)[2669].second.push_front(p_2_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr_mon.bind(*p_2_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[540].first = 3;
        (*_glb_hdl_sc_channel_map)[540].second.push_front(p_2_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot_mon.bind(*p_2_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[2663].first = 3;
        (*_glb_hdl_sc_channel_map)[2663].second.push_front(p_2_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid_mon.bind(*p_2_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[2665].first = 1;
        (*_glb_hdl_sc_channel_map)[2665].second.push_front(p_2_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready_mon.bind(*p_2_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[2664].first = 1;
        (*_glb_hdl_sc_channel_map)[2664].second.push_front(p_2_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata_mon.bind(*p_2_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[2672].first = 3;
        (*_glb_hdl_sc_channel_map)[2672].second.push_front(p_2_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp_mon.bind(*p_2_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[2674].first = 3;
        (*_glb_hdl_sc_channel_map)[2674].second.push_front(p_2_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid_mon.bind(*p_2_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[2675].first = 1;
        (*_glb_hdl_sc_channel_map)[2675].second.push_front(p_2_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready_mon.bind(*p_2_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[2673].first = 1;
        (*_glb_hdl_sc_channel_map)[2673].second.push_front(p_2_s_axi_rready_mon);
        sc_inst_3 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_3->xsim_set_dbg_index(16);
        sc_inst_4 = new emu_hmss_0_0(".emu_wrapper.emu_i.hmss_0");
        sc_inst_4->xsim_set_dbg_index(20);
        xsim_sc_channel<0, bool > *p_4_hbm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->hbm_aclk.bind(*p_4_hbm_aclk);
        (*_glb_hdl_sc_channel_map)[5499].first = 1;
        (*_glb_hdl_sc_channel_map)[5499].second.push_front(p_4_hbm_aclk);
        xsim_sc_channel<0, bool > *p_4_hbm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->hbm_aresetn.bind(*p_4_hbm_aresetn);
        (*_glb_hdl_sc_channel_map)[5500].first = 1;
        (*_glb_hdl_sc_channel_map)[5500].second.push_front(p_4_hbm_aresetn);
        xsim_sc_channel<0, bool > *p_4_hbm_ref_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->hbm_ref_clk.bind(*p_4_hbm_ref_clk);
        (*_glb_hdl_sc_channel_map)[5501].first = 1;
        (*_glb_hdl_sc_channel_map)[5501].second.push_front(p_4_hbm_ref_clk);
        xsim_sc_channel<0, bool > *p_4_hbm_mc_init_seq_complete = new xsim_sc_channel<0, bool >();
        sc_inst_4->hbm_mc_init_seq_complete.bind(*p_4_hbm_mc_init_seq_complete);
        p_4_hbm_mc_init_seq_complete->set_sv_netview_offsetfromdp(11954448);
        xsim_sc_channel<0, bool > *p_4_DRAM_0_STAT_TEMP = new xsim_sc_channel<0, bool >();
        sc_inst_4->DRAM_0_STAT_TEMP.bind(*p_4_DRAM_0_STAT_TEMP);
        p_4_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(11954504);
        xsim_sc_channel<0, bool > *p_4_DRAM_1_STAT_TEMP = new xsim_sc_channel<0, bool >();
        sc_inst_4->DRAM_1_STAT_TEMP.bind(*p_4_DRAM_1_STAT_TEMP);
        p_4_DRAM_1_STAT_TEMP->set_sv_netview_offsetfromdp(11954560);
        xsim_sc_channel<0, bool > *p_4_DRAM_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_4->DRAM_STAT_CATTRIP.bind(*p_4_DRAM_STAT_CATTRIP);
        p_4_DRAM_STAT_CATTRIP->set_sv_netview_offsetfromdp(11954616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S_AXI_CTRL_awaddr = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S_AXI_CTRL_awaddr.bind(*p_4_S_AXI_CTRL_awaddr);
        (*_glb_hdl_sc_channel_map)[360].first = 3;
        (*_glb_hdl_sc_channel_map)[360].second.push_front(p_4_S_AXI_CTRL_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S_AXI_CTRL_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S_AXI_CTRL_awprot.bind(*p_4_S_AXI_CTRL_awprot);
        (*_glb_hdl_sc_channel_map)[359].first = 3;
        (*_glb_hdl_sc_channel_map)[359].second.push_front(p_4_S_AXI_CTRL_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_awvalid.bind(*p_4_S_AXI_CTRL_awvalid);
        (*_glb_hdl_sc_channel_map)[358].first = 3;
        (*_glb_hdl_sc_channel_map)[358].second.push_front(p_4_S_AXI_CTRL_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_awready.bind(*p_4_S_AXI_CTRL_awready);
        p_4_S_AXI_CTRL_awready->set_sv_netview_offsetfromdp(11954840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S_AXI_CTRL_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S_AXI_CTRL_wdata.bind(*p_4_S_AXI_CTRL_wdata);
        (*_glb_hdl_sc_channel_map)[355].first = 3;
        (*_glb_hdl_sc_channel_map)[355].second.push_front(p_4_S_AXI_CTRL_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S_AXI_CTRL_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S_AXI_CTRL_wstrb.bind(*p_4_S_AXI_CTRL_wstrb);
        (*_glb_hdl_sc_channel_map)[354].first = 3;
        (*_glb_hdl_sc_channel_map)[354].second.push_front(p_4_S_AXI_CTRL_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_wvalid.bind(*p_4_S_AXI_CTRL_wvalid);
        (*_glb_hdl_sc_channel_map)[353].first = 3;
        (*_glb_hdl_sc_channel_map)[353].second.push_front(p_4_S_AXI_CTRL_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_wready.bind(*p_4_S_AXI_CTRL_wready);
        p_4_S_AXI_CTRL_wready->set_sv_netview_offsetfromdp(11955064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S_AXI_CTRL_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S_AXI_CTRL_bresp.bind(*p_4_S_AXI_CTRL_bresp);
        p_4_S_AXI_CTRL_bresp->set_sv_netview_offsetfromdp(11955120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_bvalid.bind(*p_4_S_AXI_CTRL_bvalid);
        p_4_S_AXI_CTRL_bvalid->set_sv_netview_offsetfromdp(11955176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_bready.bind(*p_4_S_AXI_CTRL_bready);
        (*_glb_hdl_sc_channel_map)[357].first = 3;
        (*_glb_hdl_sc_channel_map)[357].second.push_front(p_4_S_AXI_CTRL_bready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S_AXI_CTRL_araddr = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S_AXI_CTRL_araddr.bind(*p_4_S_AXI_CTRL_araddr);
        (*_glb_hdl_sc_channel_map)[363].first = 3;
        (*_glb_hdl_sc_channel_map)[363].second.push_front(p_4_S_AXI_CTRL_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S_AXI_CTRL_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S_AXI_CTRL_arprot.bind(*p_4_S_AXI_CTRL_arprot);
        (*_glb_hdl_sc_channel_map)[362].first = 3;
        (*_glb_hdl_sc_channel_map)[362].second.push_front(p_4_S_AXI_CTRL_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_arvalid.bind(*p_4_S_AXI_CTRL_arvalid);
        (*_glb_hdl_sc_channel_map)[361].first = 3;
        (*_glb_hdl_sc_channel_map)[361].second.push_front(p_4_S_AXI_CTRL_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_arready.bind(*p_4_S_AXI_CTRL_arready);
        p_4_S_AXI_CTRL_arready->set_sv_netview_offsetfromdp(11955456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S_AXI_CTRL_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S_AXI_CTRL_rdata.bind(*p_4_S_AXI_CTRL_rdata);
        p_4_S_AXI_CTRL_rdata->set_sv_netview_offsetfromdp(11955512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S_AXI_CTRL_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S_AXI_CTRL_rresp.bind(*p_4_S_AXI_CTRL_rresp);
        p_4_S_AXI_CTRL_rresp->set_sv_netview_offsetfromdp(11955568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_rvalid.bind(*p_4_S_AXI_CTRL_rvalid);
        p_4_S_AXI_CTRL_rvalid->set_sv_netview_offsetfromdp(11955624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_rready.bind(*p_4_S_AXI_CTRL_rready);
        (*_glb_hdl_sc_channel_map)[356].first = 3;
        (*_glb_hdl_sc_channel_map)[356].second.push_front(p_4_S_AXI_CTRL_rready);
        xsim_sc_channel<0, bool > *p_4_ctrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->ctrl_aclk.bind(*p_4_ctrl_aclk);
        (*_glb_hdl_sc_channel_map)[5497].first = 1;
        (*_glb_hdl_sc_channel_map)[5497].second.push_front(p_4_ctrl_aclk);
        xsim_sc_channel<0, bool > *p_4_ctrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->ctrl_aresetn.bind(*p_4_ctrl_aresetn);
        (*_glb_hdl_sc_channel_map)[5498].first = 1;
        (*_glb_hdl_sc_channel_map)[5498].second.push_front(p_4_ctrl_aresetn);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map)[5493].first = 1;
        (*_glb_hdl_sc_channel_map)[5493].second.push_front(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk1.bind(*p_4_aclk1);
        (*_glb_hdl_sc_channel_map)[5494].first = 1;
        (*_glb_hdl_sc_channel_map)[5494].second.push_front(p_4_aclk1);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map)[5495].first = 1;
        (*_glb_hdl_sc_channel_map)[5495].second.push_front(p_4_aresetn);
        xsim_sc_channel<0, bool > *p_4_aresetn1 = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn1.bind(*p_4_aresetn1);
        (*_glb_hdl_sc_channel_map)[5496].first = 1;
        (*_glb_hdl_sc_channel_map)[5496].second.push_front(p_4_aresetn1);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awid.bind(*p_4_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map)[5435].first = 3;
        (*_glb_hdl_sc_channel_map)[5435].second.push_front(p_4_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S00_AXI_awaddr.bind(*p_4_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[5432].first = 3;
        (*_glb_hdl_sc_channel_map)[5432].second.push_front(p_4_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S00_AXI_awlen.bind(*p_4_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[5436].first = 3;
        (*_glb_hdl_sc_channel_map)[5436].second.push_front(p_4_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_awsize.bind(*p_4_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[5441].first = 3;
        (*_glb_hdl_sc_channel_map)[5441].second.push_front(p_4_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_awburst.bind(*p_4_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[5433].first = 3;
        (*_glb_hdl_sc_channel_map)[5433].second.push_front(p_4_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_4_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S00_AXI_awlock.bind(*p_4_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[5437].first = 1;
        (*_glb_hdl_sc_channel_map)[5437].second.push_front(p_4_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_awcache.bind(*p_4_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[5434].first = 3;
        (*_glb_hdl_sc_channel_map)[5434].second.push_front(p_4_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_awprot.bind(*p_4_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[5438].first = 3;
        (*_glb_hdl_sc_channel_map)[5438].second.push_front(p_4_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_awqos.bind(*p_4_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[5439].first = 3;
        (*_glb_hdl_sc_channel_map)[5439].second.push_front(p_4_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awuser.bind(*p_4_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[5442].first = 3;
        (*_glb_hdl_sc_channel_map)[5442].second.push_front(p_4_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awvalid.bind(*p_4_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[5443].first = 3;
        (*_glb_hdl_sc_channel_map)[5443].second.push_front(p_4_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awready.bind(*p_4_S00_AXI_awready);
        p_4_S00_AXI_awready->set_sv_netview_offsetfromdp(11956688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S00_AXI_wdata.bind(*p_4_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[5456].first = 3;
        (*_glb_hdl_sc_channel_map)[5456].second.push_front(p_4_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_wstrb.bind(*p_4_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[5459].first = 3;
        (*_glb_hdl_sc_channel_map)[5459].second.push_front(p_4_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wlast.bind(*p_4_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[5457].first = 3;
        (*_glb_hdl_sc_channel_map)[5457].second.push_front(p_4_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wuser.bind(*p_4_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[5460].first = 3;
        (*_glb_hdl_sc_channel_map)[5460].second.push_front(p_4_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wvalid.bind(*p_4_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[5461].first = 3;
        (*_glb_hdl_sc_channel_map)[5461].second.push_front(p_4_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wready.bind(*p_4_S00_AXI_wready);
        p_4_S00_AXI_wready->set_sv_netview_offsetfromdp(11957024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bid.bind(*p_4_S00_AXI_bid);
        p_4_S00_AXI_bid->set_sv_netview_offsetfromdp(11957080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_bresp.bind(*p_4_S00_AXI_bresp);
        p_4_S00_AXI_bresp->set_sv_netview_offsetfromdp(11957136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_buser.bind(*p_4_S00_AXI_buser);
        p_4_S00_AXI_buser->set_sv_netview_offsetfromdp(11957192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bvalid.bind(*p_4_S00_AXI_bvalid);
        p_4_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11957248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bready.bind(*p_4_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map)[5445].first = 3;
        (*_glb_hdl_sc_channel_map)[5445].second.push_front(p_4_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arid.bind(*p_4_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map)[5423].first = 3;
        (*_glb_hdl_sc_channel_map)[5423].second.push_front(p_4_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S00_AXI_araddr.bind(*p_4_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[5420].first = 3;
        (*_glb_hdl_sc_channel_map)[5420].second.push_front(p_4_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S00_AXI_arlen.bind(*p_4_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[5424].first = 3;
        (*_glb_hdl_sc_channel_map)[5424].second.push_front(p_4_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_arsize.bind(*p_4_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[5429].first = 3;
        (*_glb_hdl_sc_channel_map)[5429].second.push_front(p_4_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_arburst.bind(*p_4_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[5421].first = 3;
        (*_glb_hdl_sc_channel_map)[5421].second.push_front(p_4_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_4_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S00_AXI_arlock.bind(*p_4_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[5425].first = 1;
        (*_glb_hdl_sc_channel_map)[5425].second.push_front(p_4_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_arcache.bind(*p_4_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[5422].first = 3;
        (*_glb_hdl_sc_channel_map)[5422].second.push_front(p_4_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_arprot.bind(*p_4_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[5426].first = 3;
        (*_glb_hdl_sc_channel_map)[5426].second.push_front(p_4_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_arqos.bind(*p_4_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[5427].first = 3;
        (*_glb_hdl_sc_channel_map)[5427].second.push_front(p_4_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_aruser.bind(*p_4_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[5430].first = 3;
        (*_glb_hdl_sc_channel_map)[5430].second.push_front(p_4_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arvalid.bind(*p_4_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[5431].first = 3;
        (*_glb_hdl_sc_channel_map)[5431].second.push_front(p_4_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arready.bind(*p_4_S00_AXI_arready);
        p_4_S00_AXI_arready->set_sv_netview_offsetfromdp(11957976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rid.bind(*p_4_S00_AXI_rid);
        p_4_S00_AXI_rid->set_sv_netview_offsetfromdp(11958032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S00_AXI_rdata.bind(*p_4_S00_AXI_rdata);
        p_4_S00_AXI_rdata->set_sv_netview_offsetfromdp(11958088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_rresp.bind(*p_4_S00_AXI_rresp);
        p_4_S00_AXI_rresp->set_sv_netview_offsetfromdp(11958144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rlast.bind(*p_4_S00_AXI_rlast);
        p_4_S00_AXI_rlast->set_sv_netview_offsetfromdp(11958200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_ruser.bind(*p_4_S00_AXI_ruser);
        p_4_S00_AXI_ruser->set_sv_netview_offsetfromdp(11958256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rvalid.bind(*p_4_S00_AXI_rvalid);
        p_4_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11958312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rready.bind(*p_4_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map)[5452].first = 3;
        (*_glb_hdl_sc_channel_map)[5452].second.push_front(p_4_S00_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S01_AXI_awaddr.bind(*p_4_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[5471].first = 3;
        (*_glb_hdl_sc_channel_map)[5471].second.push_front(p_4_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S01_AXI_awlen.bind(*p_4_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[5473].first = 3;
        (*_glb_hdl_sc_channel_map)[5473].second.push_front(p_4_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_awsize.bind(*p_4_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[5478].first = 3;
        (*_glb_hdl_sc_channel_map)[5478].second.push_front(p_4_S01_AXI_awsize);
        xsim_sc_channel<0, bool > *p_4_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S01_AXI_awlock.bind(*p_4_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[364].first = 1;
        (*_glb_hdl_sc_channel_map)[364].second.push_front(p_4_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_awcache.bind(*p_4_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[5472].first = 3;
        (*_glb_hdl_sc_channel_map)[5472].second.push_front(p_4_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_awprot.bind(*p_4_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[5474].first = 3;
        (*_glb_hdl_sc_channel_map)[5474].second.push_front(p_4_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_awregion.bind(*p_4_S01_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[5477].first = 3;
        (*_glb_hdl_sc_channel_map)[5477].second.push_front(p_4_S01_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_awqos.bind(*p_4_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[5475].first = 3;
        (*_glb_hdl_sc_channel_map)[5475].second.push_front(p_4_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awvalid.bind(*p_4_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[5479].first = 3;
        (*_glb_hdl_sc_channel_map)[5479].second.push_front(p_4_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awready.bind(*p_4_S01_AXI_awready);
        p_4_S01_AXI_awready->set_sv_netview_offsetfromdp(11958928);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S01_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S01_AXI_wdata.bind(*p_4_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[5488].first = 3;
        (*_glb_hdl_sc_channel_map)[5488].second.push_front(p_4_S01_AXI_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S01_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S01_AXI_wstrb.bind(*p_4_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[5491].first = 3;
        (*_glb_hdl_sc_channel_map)[5491].second.push_front(p_4_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wlast.bind(*p_4_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[5489].first = 3;
        (*_glb_hdl_sc_channel_map)[5489].second.push_front(p_4_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wvalid.bind(*p_4_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[5492].first = 3;
        (*_glb_hdl_sc_channel_map)[5492].second.push_front(p_4_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wready.bind(*p_4_S01_AXI_wready);
        p_4_S01_AXI_wready->set_sv_netview_offsetfromdp(11959208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_bresp.bind(*p_4_S01_AXI_bresp);
        p_4_S01_AXI_bresp->set_sv_netview_offsetfromdp(11959264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_bvalid.bind(*p_4_S01_AXI_bvalid);
        p_4_S01_AXI_bvalid->set_sv_netview_offsetfromdp(11959320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_bready.bind(*p_4_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map)[5480].first = 3;
        (*_glb_hdl_sc_channel_map)[5480].second.push_front(p_4_S01_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S01_AXI_araddr.bind(*p_4_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[5462].first = 3;
        (*_glb_hdl_sc_channel_map)[5462].second.push_front(p_4_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S01_AXI_arlen.bind(*p_4_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[5464].first = 3;
        (*_glb_hdl_sc_channel_map)[5464].second.push_front(p_4_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_arsize.bind(*p_4_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[5469].first = 3;
        (*_glb_hdl_sc_channel_map)[5469].second.push_front(p_4_S01_AXI_arsize);
        xsim_sc_channel<0, bool > *p_4_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S01_AXI_arlock.bind(*p_4_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[365].first = 1;
        (*_glb_hdl_sc_channel_map)[365].second.push_front(p_4_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_arcache.bind(*p_4_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[5463].first = 3;
        (*_glb_hdl_sc_channel_map)[5463].second.push_front(p_4_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_arprot.bind(*p_4_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[5465].first = 3;
        (*_glb_hdl_sc_channel_map)[5465].second.push_front(p_4_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_arregion.bind(*p_4_S01_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[5468].first = 3;
        (*_glb_hdl_sc_channel_map)[5468].second.push_front(p_4_S01_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_arqos.bind(*p_4_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[5466].first = 3;
        (*_glb_hdl_sc_channel_map)[5466].second.push_front(p_4_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_arvalid.bind(*p_4_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[5470].first = 3;
        (*_glb_hdl_sc_channel_map)[5470].second.push_front(p_4_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_arready.bind(*p_4_S01_AXI_arready);
        p_4_S01_AXI_arready->set_sv_netview_offsetfromdp(11959936);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S01_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S01_AXI_rdata.bind(*p_4_S01_AXI_rdata);
        p_4_S01_AXI_rdata->set_sv_netview_offsetfromdp(11959992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_rresp.bind(*p_4_S01_AXI_rresp);
        p_4_S01_AXI_rresp->set_sv_netview_offsetfromdp(11960048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rlast.bind(*p_4_S01_AXI_rlast);
        p_4_S01_AXI_rlast->set_sv_netview_offsetfromdp(11960104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rvalid.bind(*p_4_S01_AXI_rvalid);
        p_4_S01_AXI_rvalid->set_sv_netview_offsetfromdp(11960160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rready.bind(*p_4_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map)[5485].first = 3;
        (*_glb_hdl_sc_channel_map)[5485].second.push_front(p_4_S01_AXI_rready);
        sc_inst_5 = new emu_memory_subsystem_0(".emu_wrapper.emu_i.memory_subsystem");
        sc_inst_5->xsim_set_dbg_index(27);
        xsim_sc_channel<0, bool > *p_5_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->aclk.bind(*p_5_aclk);
        (*_glb_hdl_sc_channel_map)[40233].first = 1;
        (*_glb_hdl_sc_channel_map)[40233].second.push_front(p_5_aclk);
        xsim_sc_channel<0, bool > *p_5_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->aresetn.bind(*p_5_aresetn);
        (*_glb_hdl_sc_channel_map)[40234].first = 1;
        (*_glb_hdl_sc_channel_map)[40234].second.push_front(p_5_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awid.bind(*p_5_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map)[40206].first = 3;
        (*_glb_hdl_sc_channel_map)[40206].second.push_front(p_5_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S00_AXI_awaddr.bind(*p_5_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[40203].first = 3;
        (*_glb_hdl_sc_channel_map)[40203].second.push_front(p_5_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S00_AXI_awlen.bind(*p_5_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[40207].first = 3;
        (*_glb_hdl_sc_channel_map)[40207].second.push_front(p_5_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_awsize.bind(*p_5_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[40212].first = 3;
        (*_glb_hdl_sc_channel_map)[40212].second.push_front(p_5_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_awburst.bind(*p_5_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[40204].first = 3;
        (*_glb_hdl_sc_channel_map)[40204].second.push_front(p_5_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S00_AXI_awlock.bind(*p_5_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[40208].first = 1;
        (*_glb_hdl_sc_channel_map)[40208].second.push_front(p_5_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_awcache.bind(*p_5_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[40205].first = 3;
        (*_glb_hdl_sc_channel_map)[40205].second.push_front(p_5_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_awprot.bind(*p_5_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[40209].first = 3;
        (*_glb_hdl_sc_channel_map)[40209].second.push_front(p_5_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_awqos.bind(*p_5_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[40210].first = 3;
        (*_glb_hdl_sc_channel_map)[40210].second.push_front(p_5_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awuser.bind(*p_5_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[40213].first = 3;
        (*_glb_hdl_sc_channel_map)[40213].second.push_front(p_5_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awvalid.bind(*p_5_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[40214].first = 3;
        (*_glb_hdl_sc_channel_map)[40214].second.push_front(p_5_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awready.bind(*p_5_S00_AXI_awready);
        p_5_S00_AXI_awready->set_sv_netview_offsetfromdp(29560800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S00_AXI_wdata.bind(*p_5_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[40227].first = 3;
        (*_glb_hdl_sc_channel_map)[40227].second.push_front(p_5_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_wstrb.bind(*p_5_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[40230].first = 3;
        (*_glb_hdl_sc_channel_map)[40230].second.push_front(p_5_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wlast.bind(*p_5_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[40228].first = 3;
        (*_glb_hdl_sc_channel_map)[40228].second.push_front(p_5_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wuser.bind(*p_5_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[40231].first = 3;
        (*_glb_hdl_sc_channel_map)[40231].second.push_front(p_5_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wvalid.bind(*p_5_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[40232].first = 3;
        (*_glb_hdl_sc_channel_map)[40232].second.push_front(p_5_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wready.bind(*p_5_S00_AXI_wready);
        p_5_S00_AXI_wready->set_sv_netview_offsetfromdp(29561136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bid.bind(*p_5_S00_AXI_bid);
        p_5_S00_AXI_bid->set_sv_netview_offsetfromdp(29561192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_bresp.bind(*p_5_S00_AXI_bresp);
        p_5_S00_AXI_bresp->set_sv_netview_offsetfromdp(29561248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_buser.bind(*p_5_S00_AXI_buser);
        p_5_S00_AXI_buser->set_sv_netview_offsetfromdp(29561304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bvalid.bind(*p_5_S00_AXI_bvalid);
        p_5_S00_AXI_bvalid->set_sv_netview_offsetfromdp(29561360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bready.bind(*p_5_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map)[40216].first = 3;
        (*_glb_hdl_sc_channel_map)[40216].second.push_front(p_5_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arid.bind(*p_5_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map)[40194].first = 3;
        (*_glb_hdl_sc_channel_map)[40194].second.push_front(p_5_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S00_AXI_araddr.bind(*p_5_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[40191].first = 3;
        (*_glb_hdl_sc_channel_map)[40191].second.push_front(p_5_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S00_AXI_arlen.bind(*p_5_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[40195].first = 3;
        (*_glb_hdl_sc_channel_map)[40195].second.push_front(p_5_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_arsize.bind(*p_5_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[40200].first = 3;
        (*_glb_hdl_sc_channel_map)[40200].second.push_front(p_5_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_arburst.bind(*p_5_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[40192].first = 3;
        (*_glb_hdl_sc_channel_map)[40192].second.push_front(p_5_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S00_AXI_arlock.bind(*p_5_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[40196].first = 1;
        (*_glb_hdl_sc_channel_map)[40196].second.push_front(p_5_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_arcache.bind(*p_5_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[40193].first = 3;
        (*_glb_hdl_sc_channel_map)[40193].second.push_front(p_5_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_arprot.bind(*p_5_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[40197].first = 3;
        (*_glb_hdl_sc_channel_map)[40197].second.push_front(p_5_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_arqos.bind(*p_5_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[40198].first = 3;
        (*_glb_hdl_sc_channel_map)[40198].second.push_front(p_5_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_aruser.bind(*p_5_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[40201].first = 3;
        (*_glb_hdl_sc_channel_map)[40201].second.push_front(p_5_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arvalid.bind(*p_5_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[40202].first = 3;
        (*_glb_hdl_sc_channel_map)[40202].second.push_front(p_5_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arready.bind(*p_5_S00_AXI_arready);
        p_5_S00_AXI_arready->set_sv_netview_offsetfromdp(29562088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rid.bind(*p_5_S00_AXI_rid);
        p_5_S00_AXI_rid->set_sv_netview_offsetfromdp(29562144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S00_AXI_rdata.bind(*p_5_S00_AXI_rdata);
        p_5_S00_AXI_rdata->set_sv_netview_offsetfromdp(29562200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_rresp.bind(*p_5_S00_AXI_rresp);
        p_5_S00_AXI_rresp->set_sv_netview_offsetfromdp(29562256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rlast.bind(*p_5_S00_AXI_rlast);
        p_5_S00_AXI_rlast->set_sv_netview_offsetfromdp(29562312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_ruser.bind(*p_5_S00_AXI_ruser);
        p_5_S00_AXI_ruser->set_sv_netview_offsetfromdp(29562368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rvalid.bind(*p_5_S00_AXI_rvalid);
        p_5_S00_AXI_rvalid->set_sv_netview_offsetfromdp(29562424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rready.bind(*p_5_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map)[40223].first = 3;
        (*_glb_hdl_sc_channel_map)[40223].second.push_front(p_5_S00_AXI_rready);
        xsim_sc_channel<0, bool > *p_5_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_5->ddr4_mem_calib_complete.bind(*p_5_ddr4_mem_calib_complete);
        p_5_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(29562536);
        sc_inst_6 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_6->xsim_set_dbg_index(1458);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->saxi_lite_cq_awaddr.bind(*p_6_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map)[46741].first = 3;
        (*_glb_hdl_sc_channel_map)[46741].second.push_front(p_6_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->saxi_lite_cq_awprot.bind(*p_6_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map)[46742].first = 3;
        (*_glb_hdl_sc_channel_map)[46742].second.push_front(p_6_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_awvalid.bind(*p_6_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map)[46744].first = 1;
        (*_glb_hdl_sc_channel_map)[46744].second.push_front(p_6_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_awready.bind(*p_6_saxi_lite_cq_awready);
        p_6_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(32133256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->saxi_lite_cq_wdata.bind(*p_6_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map)[46752].first = 3;
        (*_glb_hdl_sc_channel_map)[46752].second.push_front(p_6_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->saxi_lite_cq_wstrb.bind(*p_6_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map)[46754].first = 3;
        (*_glb_hdl_sc_channel_map)[46754].second.push_front(p_6_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_wvalid.bind(*p_6_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map)[46755].first = 1;
        (*_glb_hdl_sc_channel_map)[46755].second.push_front(p_6_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_wready.bind(*p_6_saxi_lite_cq_wready);
        p_6_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(32133480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->saxi_lite_cq_bresp.bind(*p_6_saxi_lite_cq_bresp);
        p_6_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(32133536);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_bvalid.bind(*p_6_saxi_lite_cq_bvalid);
        p_6_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(32133592);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_bready.bind(*p_6_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map)[46745].first = 1;
        (*_glb_hdl_sc_channel_map)[46745].second.push_front(p_6_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->saxi_lite_cq_araddr.bind(*p_6_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map)[46736].first = 3;
        (*_glb_hdl_sc_channel_map)[46736].second.push_front(p_6_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->saxi_lite_cq_arprot.bind(*p_6_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map)[46738].first = 3;
        (*_glb_hdl_sc_channel_map)[46738].second.push_front(p_6_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_arvalid.bind(*p_6_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map)[46740].first = 1;
        (*_glb_hdl_sc_channel_map)[46740].second.push_front(p_6_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_arready.bind(*p_6_saxi_lite_cq_arready);
        p_6_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(32133872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->saxi_lite_cq_rdata.bind(*p_6_saxi_lite_cq_rdata);
        p_6_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(32133928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->saxi_lite_cq_rresp.bind(*p_6_saxi_lite_cq_rresp);
        p_6_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(32133984);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_rvalid.bind(*p_6_saxi_lite_cq_rvalid);
        p_6_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(32134040);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_rready.bind(*p_6_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map)[46749].first = 1;
        (*_glb_hdl_sc_channel_map)[46749].second.push_front(p_6_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_aclk.bind(*p_6_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map)[46735].first = 1;
        (*_glb_hdl_sc_channel_map)[46735].second.push_front(p_6_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_aresetn.bind(*p_6_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map)[46737].first = 1;
        (*_glb_hdl_sc_channel_map)[46737].second.push_front(p_6_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->maxi_lite_mb_awaddr.bind(*p_6_maxi_lite_mb_awaddr);
        p_6_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(32134264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->maxi_lite_mb_awprot.bind(*p_6_maxi_lite_mb_awprot);
        p_6_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(32134320);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_awvalid.bind(*p_6_maxi_lite_mb_awvalid);
        p_6_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(32134376);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_awready.bind(*p_6_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map)[46722].first = 1;
        (*_glb_hdl_sc_channel_map)[46722].second.push_front(p_6_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->maxi_lite_mb_wdata.bind(*p_6_maxi_lite_mb_wdata);
        p_6_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(32134488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->maxi_lite_mb_wstrb.bind(*p_6_maxi_lite_mb_wstrb);
        p_6_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(32134544);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_wvalid.bind(*p_6_maxi_lite_mb_wvalid);
        p_6_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(32134600);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_wready.bind(*p_6_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map)[46732].first = 1;
        (*_glb_hdl_sc_channel_map)[46732].second.push_front(p_6_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->maxi_lite_mb_bresp.bind(*p_6_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map)[46725].first = 3;
        (*_glb_hdl_sc_channel_map)[46725].second.push_front(p_6_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_bvalid.bind(*p_6_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map)[46726].first = 1;
        (*_glb_hdl_sc_channel_map)[46726].second.push_front(p_6_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_bready.bind(*p_6_maxi_lite_mb_bready);
        p_6_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(32134824);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->maxi_lite_mb_araddr.bind(*p_6_maxi_lite_mb_araddr);
        p_6_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(32134880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->maxi_lite_mb_arprot.bind(*p_6_maxi_lite_mb_arprot);
        p_6_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(32134936);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_arvalid.bind(*p_6_maxi_lite_mb_arvalid);
        p_6_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(32134992);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_arready.bind(*p_6_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map)[46718].first = 1;
        (*_glb_hdl_sc_channel_map)[46718].second.push_front(p_6_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->maxi_lite_mb_rdata.bind(*p_6_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map)[46727].first = 3;
        (*_glb_hdl_sc_channel_map)[46727].second.push_front(p_6_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->maxi_lite_mb_rresp.bind(*p_6_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map)[46729].first = 3;
        (*_glb_hdl_sc_channel_map)[46729].second.push_front(p_6_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_rvalid.bind(*p_6_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map)[46730].first = 1;
        (*_glb_hdl_sc_channel_map)[46730].second.push_front(p_6_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_rready.bind(*p_6_maxi_lite_mb_rready);
        p_6_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(32135272);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_aclk.bind(*p_6_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map)[46714].first = 1;
        (*_glb_hdl_sc_channel_map)[46714].second.push_front(p_6_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_aresetn.bind(*p_6_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map)[46716].first = 1;
        (*_glb_hdl_sc_channel_map)[46716].second.push_front(p_6_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_6_irq = new xsim_sc_channel<0, bool >();
        sc_inst_6->irq.bind(*p_6_irq);
        (*_glb_hdl_sc_channel_map)[46713].first = 1;
        (*_glb_hdl_sc_channel_map)[46713].second.push_front(p_6_irq);
        sc_inst_7 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_7->xsim_set_dbg_index(385);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_awid.bind(*p_7_m_aximm_awid);
        p_7_m_aximm_awid->set_sv_netview_offsetfromdp(32191616);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_aximm_awaddr.bind(*p_7_m_aximm_awaddr);
        p_7_m_aximm_awaddr->set_sv_netview_offsetfromdp(32191672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_aximm_awlen.bind(*p_7_m_aximm_awlen);
        p_7_m_aximm_awlen->set_sv_netview_offsetfromdp(32191728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_aximm_awsize.bind(*p_7_m_aximm_awsize);
        p_7_m_aximm_awsize->set_sv_netview_offsetfromdp(32191784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_aximm_awburst.bind(*p_7_m_aximm_awburst);
        p_7_m_aximm_awburst->set_sv_netview_offsetfromdp(32191840);
        xsim_sc_channel<0, bool > *p_7_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_awlock.bind(*p_7_m_aximm_awlock);
        p_7_m_aximm_awlock->set_sv_netview_offsetfromdp(32191896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_aximm_awcache.bind(*p_7_m_aximm_awcache);
        p_7_m_aximm_awcache->set_sv_netview_offsetfromdp(32191952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_aximm_awprot.bind(*p_7_m_aximm_awprot);
        p_7_m_aximm_awprot->set_sv_netview_offsetfromdp(32192008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_aximm_awqos.bind(*p_7_m_aximm_awqos);
        p_7_m_aximm_awqos->set_sv_netview_offsetfromdp(32192064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_aximm_awuser.bind(*p_7_m_aximm_awuser);
        p_7_m_aximm_awuser->set_sv_netview_offsetfromdp(32192120);
        xsim_sc_channel<0, bool > *p_7_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_awvalid.bind(*p_7_m_aximm_awvalid);
        p_7_m_aximm_awvalid->set_sv_netview_offsetfromdp(32192176);
        xsim_sc_channel<0, bool > *p_7_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_awready.bind(*p_7_m_aximm_awready);
        (*_glb_hdl_sc_channel_map)[47075].first = 1;
        (*_glb_hdl_sc_channel_map)[47075].second.push_front(p_7_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_aximm_wdata.bind(*p_7_m_aximm_wdata);
        p_7_m_aximm_wdata->set_sv_netview_offsetfromdp(32192288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_aximm_wstrb.bind(*p_7_m_aximm_wstrb);
        p_7_m_aximm_wstrb->set_sv_netview_offsetfromdp(32192344);
        xsim_sc_channel<0, bool > *p_7_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_wlast.bind(*p_7_m_aximm_wlast);
        p_7_m_aximm_wlast->set_sv_netview_offsetfromdp(32192400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_wuser.bind(*p_7_m_aximm_wuser);
        p_7_m_aximm_wuser->set_sv_netview_offsetfromdp(32192456);
        xsim_sc_channel<0, bool > *p_7_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_wvalid.bind(*p_7_m_aximm_wvalid);
        p_7_m_aximm_wvalid->set_sv_netview_offsetfromdp(32192512);
        xsim_sc_channel<0, bool > *p_7_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_wready.bind(*p_7_m_aximm_wready);
        (*_glb_hdl_sc_channel_map)[47093].first = 1;
        (*_glb_hdl_sc_channel_map)[47093].second.push_front(p_7_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_bid.bind(*p_7_m_aximm_bid);
        (*_glb_hdl_sc_channel_map)[47079].first = 3;
        (*_glb_hdl_sc_channel_map)[47079].second.push_front(p_7_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_aximm_bresp.bind(*p_7_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map)[47081].first = 3;
        (*_glb_hdl_sc_channel_map)[47081].second.push_front(p_7_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_buser.bind(*p_7_m_aximm_buser);
        (*_glb_hdl_sc_channel_map)[47082].first = 3;
        (*_glb_hdl_sc_channel_map)[47082].second.push_front(p_7_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_7_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_bvalid.bind(*p_7_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map)[47083].first = 1;
        (*_glb_hdl_sc_channel_map)[47083].second.push_front(p_7_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_bready.bind(*p_7_m_aximm_bready);
        p_7_m_aximm_bready->set_sv_netview_offsetfromdp(32192848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_arid.bind(*p_7_m_aximm_arid);
        p_7_m_aximm_arid->set_sv_netview_offsetfromdp(32192904);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_aximm_araddr.bind(*p_7_m_aximm_araddr);
        p_7_m_aximm_araddr->set_sv_netview_offsetfromdp(32192960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_aximm_arlen.bind(*p_7_m_aximm_arlen);
        p_7_m_aximm_arlen->set_sv_netview_offsetfromdp(32193016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_aximm_arsize.bind(*p_7_m_aximm_arsize);
        p_7_m_aximm_arsize->set_sv_netview_offsetfromdp(32193072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_aximm_arburst.bind(*p_7_m_aximm_arburst);
        p_7_m_aximm_arburst->set_sv_netview_offsetfromdp(32193128);
        xsim_sc_channel<0, bool > *p_7_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_arlock.bind(*p_7_m_aximm_arlock);
        p_7_m_aximm_arlock->set_sv_netview_offsetfromdp(32193184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_aximm_arcache.bind(*p_7_m_aximm_arcache);
        p_7_m_aximm_arcache->set_sv_netview_offsetfromdp(32193240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_aximm_arprot.bind(*p_7_m_aximm_arprot);
        p_7_m_aximm_arprot->set_sv_netview_offsetfromdp(32193296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_aximm_arqos.bind(*p_7_m_aximm_arqos);
        p_7_m_aximm_arqos->set_sv_netview_offsetfromdp(32193352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_aximm_aruser.bind(*p_7_m_aximm_aruser);
        p_7_m_aximm_aruser->set_sv_netview_offsetfromdp(32193408);
        xsim_sc_channel<0, bool > *p_7_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_arvalid.bind(*p_7_m_aximm_arvalid);
        p_7_m_aximm_arvalid->set_sv_netview_offsetfromdp(32193464);
        xsim_sc_channel<0, bool > *p_7_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_arready.bind(*p_7_m_aximm_arready);
        (*_glb_hdl_sc_channel_map)[47063].first = 1;
        (*_glb_hdl_sc_channel_map)[47063].second.push_front(p_7_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_rid.bind(*p_7_m_aximm_rid);
        (*_glb_hdl_sc_channel_map)[47085].first = 3;
        (*_glb_hdl_sc_channel_map)[47085].second.push_front(p_7_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_aximm_rdata.bind(*p_7_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map)[47084].first = 3;
        (*_glb_hdl_sc_channel_map)[47084].second.push_front(p_7_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_aximm_rresp.bind(*p_7_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map)[47088].first = 3;
        (*_glb_hdl_sc_channel_map)[47088].second.push_front(p_7_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_7_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_rlast.bind(*p_7_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map)[47086].first = 1;
        (*_glb_hdl_sc_channel_map)[47086].second.push_front(p_7_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_ruser.bind(*p_7_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map)[47089].first = 3;
        (*_glb_hdl_sc_channel_map)[47089].second.push_front(p_7_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_7_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_rvalid.bind(*p_7_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map)[47090].first = 1;
        (*_glb_hdl_sc_channel_map)[47090].second.push_front(p_7_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_rready.bind(*p_7_m_aximm_rready);
        p_7_m_aximm_rready->set_sv_netview_offsetfromdp(32193912);
        xsim_sc_channel<0, bool > *p_7_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_aclk.bind(*p_7_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map)[47053].first = 1;
        (*_glb_hdl_sc_channel_map)[47053].second.push_front(p_7_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_7_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_aresetn.bind(*p_7_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[47057].first = 1;
        (*_glb_hdl_sc_channel_map)[47057].second.push_front(p_7_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axictrl_awaddr.bind(*p_7_m_axictrl_awaddr);
        p_7_m_axictrl_awaddr->set_sv_netview_offsetfromdp(32194080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axictrl_awprot.bind(*p_7_m_axictrl_awprot);
        p_7_m_axictrl_awprot->set_sv_netview_offsetfromdp(32194136);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_awvalid.bind(*p_7_m_axictrl_awvalid);
        p_7_m_axictrl_awvalid->set_sv_netview_offsetfromdp(32194192);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_awready.bind(*p_7_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map)[47040].first = 1;
        (*_glb_hdl_sc_channel_map)[47040].second.push_front(p_7_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axictrl_wdata.bind(*p_7_m_axictrl_wdata);
        p_7_m_axictrl_wdata->set_sv_netview_offsetfromdp(32194304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axictrl_wstrb.bind(*p_7_m_axictrl_wstrb);
        p_7_m_axictrl_wstrb->set_sv_netview_offsetfromdp(32194360);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_wvalid.bind(*p_7_m_axictrl_wvalid);
        p_7_m_axictrl_wvalid->set_sv_netview_offsetfromdp(32194416);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_wready.bind(*p_7_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map)[47050].first = 1;
        (*_glb_hdl_sc_channel_map)[47050].second.push_front(p_7_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axictrl_bresp.bind(*p_7_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map)[47043].first = 3;
        (*_glb_hdl_sc_channel_map)[47043].second.push_front(p_7_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_bvalid.bind(*p_7_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map)[47044].first = 1;
        (*_glb_hdl_sc_channel_map)[47044].second.push_front(p_7_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_bready.bind(*p_7_m_axictrl_bready);
        p_7_m_axictrl_bready->set_sv_netview_offsetfromdp(32194640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axictrl_araddr.bind(*p_7_m_axictrl_araddr);
        p_7_m_axictrl_araddr->set_sv_netview_offsetfromdp(32194696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axictrl_arprot.bind(*p_7_m_axictrl_arprot);
        p_7_m_axictrl_arprot->set_sv_netview_offsetfromdp(32194752);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_arvalid.bind(*p_7_m_axictrl_arvalid);
        p_7_m_axictrl_arvalid->set_sv_netview_offsetfromdp(32194808);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_arready.bind(*p_7_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map)[47036].first = 1;
        (*_glb_hdl_sc_channel_map)[47036].second.push_front(p_7_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axictrl_rdata.bind(*p_7_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map)[47045].first = 3;
        (*_glb_hdl_sc_channel_map)[47045].second.push_front(p_7_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axictrl_rresp.bind(*p_7_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map)[47047].first = 3;
        (*_glb_hdl_sc_channel_map)[47047].second.push_front(p_7_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_rvalid.bind(*p_7_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map)[47048].first = 1;
        (*_glb_hdl_sc_channel_map)[47048].second.push_front(p_7_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_rready.bind(*p_7_m_axictrl_rready);
        p_7_m_axictrl_rready->set_sv_netview_offsetfromdp(32195088);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_aclk.bind(*p_7_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map)[47032].first = 1;
        (*_glb_hdl_sc_channel_map)[47032].second.push_front(p_7_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_aresetn.bind(*p_7_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map)[47034].first = 1;
        (*_glb_hdl_sc_channel_map)[47034].second.push_front(p_7_m_axictrl_aresetn);
        sc_inst_8 = new emu_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.xtlm_simple_intercon_0");
        sc_inst_8->xsim_set_dbg_index(29);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_awid.bind(*p_8_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[47233].first = 3;
        (*_glb_hdl_sc_channel_map)[47233].second.push_front(p_8_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->s00_axi_awaddr.bind(*p_8_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[47230].first = 3;
        (*_glb_hdl_sc_channel_map)[47230].second.push_front(p_8_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s00_axi_awlen.bind(*p_8_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[47234].first = 3;
        (*_glb_hdl_sc_channel_map)[47234].second.push_front(p_8_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_awsize.bind(*p_8_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[47239].first = 3;
        (*_glb_hdl_sc_channel_map)[47239].second.push_front(p_8_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_awburst.bind(*p_8_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[47231].first = 3;
        (*_glb_hdl_sc_channel_map)[47231].second.push_front(p_8_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_awlock.bind(*p_8_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[47235].first = 1;
        (*_glb_hdl_sc_channel_map)[47235].second.push_front(p_8_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_awcache.bind(*p_8_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[47232].first = 3;
        (*_glb_hdl_sc_channel_map)[47232].second.push_front(p_8_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_awprot.bind(*p_8_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[47236].first = 3;
        (*_glb_hdl_sc_channel_map)[47236].second.push_front(p_8_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_awregion.bind(*p_8_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[349].first = 3;
        (*_glb_hdl_sc_channel_map)[349].second.push_front(p_8_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_awqos.bind(*p_8_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[47237].first = 3;
        (*_glb_hdl_sc_channel_map)[47237].second.push_front(p_8_s00_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s00_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s00_axi_awuser.bind(*p_8_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[47240].first = 3;
        (*_glb_hdl_sc_channel_map)[47240].second.push_front(p_8_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_awvalid.bind(*p_8_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[47241].first = 1;
        (*_glb_hdl_sc_channel_map)[47241].second.push_front(p_8_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_awready.bind(*p_8_s00_axi_awready);
        p_8_s00_axi_awready->set_sv_netview_offsetfromdp(32195976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s00_axi_wdata.bind(*p_8_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[47254].first = 3;
        (*_glb_hdl_sc_channel_map)[47254].second.push_front(p_8_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_wstrb.bind(*p_8_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[47257].first = 3;
        (*_glb_hdl_sc_channel_map)[47257].second.push_front(p_8_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_wlast.bind(*p_8_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[47255].first = 1;
        (*_glb_hdl_sc_channel_map)[47255].second.push_front(p_8_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_wuser.bind(*p_8_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[47258].first = 3;
        (*_glb_hdl_sc_channel_map)[47258].second.push_front(p_8_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_wvalid.bind(*p_8_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[47259].first = 1;
        (*_glb_hdl_sc_channel_map)[47259].second.push_front(p_8_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_wready.bind(*p_8_s00_axi_wready);
        p_8_s00_axi_wready->set_sv_netview_offsetfromdp(32196312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_bid.bind(*p_8_s00_axi_bid);
        p_8_s00_axi_bid->set_sv_netview_offsetfromdp(32196368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_bresp.bind(*p_8_s00_axi_bresp);
        p_8_s00_axi_bresp->set_sv_netview_offsetfromdp(32196424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_buser.bind(*p_8_s00_axi_buser);
        p_8_s00_axi_buser->set_sv_netview_offsetfromdp(32196480);
        xsim_sc_channel<0, bool > *p_8_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_bvalid.bind(*p_8_s00_axi_bvalid);
        p_8_s00_axi_bvalid->set_sv_netview_offsetfromdp(32196536);
        xsim_sc_channel<0, bool > *p_8_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_bready.bind(*p_8_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[47243].first = 1;
        (*_glb_hdl_sc_channel_map)[47243].second.push_front(p_8_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_arid.bind(*p_8_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[47221].first = 3;
        (*_glb_hdl_sc_channel_map)[47221].second.push_front(p_8_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->s00_axi_araddr.bind(*p_8_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[47217].first = 3;
        (*_glb_hdl_sc_channel_map)[47217].second.push_front(p_8_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s00_axi_arlen.bind(*p_8_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[47222].first = 3;
        (*_glb_hdl_sc_channel_map)[47222].second.push_front(p_8_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_arsize.bind(*p_8_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[47227].first = 3;
        (*_glb_hdl_sc_channel_map)[47227].second.push_front(p_8_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_arburst.bind(*p_8_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[47218].first = 3;
        (*_glb_hdl_sc_channel_map)[47218].second.push_front(p_8_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_arlock.bind(*p_8_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[47223].first = 1;
        (*_glb_hdl_sc_channel_map)[47223].second.push_front(p_8_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_arcache.bind(*p_8_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[47219].first = 3;
        (*_glb_hdl_sc_channel_map)[47219].second.push_front(p_8_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_arprot.bind(*p_8_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[47224].first = 3;
        (*_glb_hdl_sc_channel_map)[47224].second.push_front(p_8_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_arregion.bind(*p_8_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[350].first = 3;
        (*_glb_hdl_sc_channel_map)[350].second.push_front(p_8_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_arqos.bind(*p_8_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[47225].first = 3;
        (*_glb_hdl_sc_channel_map)[47225].second.push_front(p_8_s00_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s00_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s00_axi_aruser.bind(*p_8_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[47228].first = 3;
        (*_glb_hdl_sc_channel_map)[47228].second.push_front(p_8_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_arvalid.bind(*p_8_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[47229].first = 1;
        (*_glb_hdl_sc_channel_map)[47229].second.push_front(p_8_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_arready.bind(*p_8_s00_axi_arready);
        p_8_s00_axi_arready->set_sv_netview_offsetfromdp(32197320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_rid.bind(*p_8_s00_axi_rid);
        p_8_s00_axi_rid->set_sv_netview_offsetfromdp(32197376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s00_axi_rdata.bind(*p_8_s00_axi_rdata);
        p_8_s00_axi_rdata->set_sv_netview_offsetfromdp(32197432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_rresp.bind(*p_8_s00_axi_rresp);
        p_8_s00_axi_rresp->set_sv_netview_offsetfromdp(32197488);
        xsim_sc_channel<0, bool > *p_8_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_rlast.bind(*p_8_s00_axi_rlast);
        p_8_s00_axi_rlast->set_sv_netview_offsetfromdp(32197544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_ruser.bind(*p_8_s00_axi_ruser);
        p_8_s00_axi_ruser->set_sv_netview_offsetfromdp(32197600);
        xsim_sc_channel<0, bool > *p_8_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_rvalid.bind(*p_8_s00_axi_rvalid);
        p_8_s00_axi_rvalid->set_sv_netview_offsetfromdp(32197656);
        xsim_sc_channel<0, bool > *p_8_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_rready.bind(*p_8_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[47250].first = 1;
        (*_glb_hdl_sc_channel_map)[47250].second.push_front(p_8_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_aclk.bind(*p_8_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[47216].first = 1;
        (*_glb_hdl_sc_channel_map)[47216].second.push_front(p_8_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_aresetn.bind(*p_8_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[47220].first = 1;
        (*_glb_hdl_sc_channel_map)[47220].second.push_front(p_8_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_awid.bind(*p_8_m00_axi_awid);
        p_8_m00_axi_awid->set_sv_netview_offsetfromdp(32197880);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m00_axi_awaddr.bind(*p_8_m00_axi_awaddr);
        p_8_m00_axi_awaddr->set_sv_netview_offsetfromdp(32197936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m00_axi_awlen.bind(*p_8_m00_axi_awlen);
        p_8_m00_axi_awlen->set_sv_netview_offsetfromdp(32197992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_awsize.bind(*p_8_m00_axi_awsize);
        p_8_m00_axi_awsize->set_sv_netview_offsetfromdp(32198048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_awburst.bind(*p_8_m00_axi_awburst);
        p_8_m00_axi_awburst->set_sv_netview_offsetfromdp(32198104);
        xsim_sc_channel<0, bool > *p_8_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_awlock.bind(*p_8_m00_axi_awlock);
        p_8_m00_axi_awlock->set_sv_netview_offsetfromdp(32198160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_awcache.bind(*p_8_m00_axi_awcache);
        p_8_m00_axi_awcache->set_sv_netview_offsetfromdp(32198216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_awprot.bind(*p_8_m00_axi_awprot);
        p_8_m00_axi_awprot->set_sv_netview_offsetfromdp(32198272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_awqos.bind(*p_8_m00_axi_awqos);
        p_8_m00_axi_awqos->set_sv_netview_offsetfromdp(32198328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_awuser.bind(*p_8_m00_axi_awuser);
        p_8_m00_axi_awuser->set_sv_netview_offsetfromdp(32198384);
        xsim_sc_channel<0, bool > *p_8_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_awvalid.bind(*p_8_m00_axi_awvalid);
        p_8_m00_axi_awvalid->set_sv_netview_offsetfromdp(32198440);
        xsim_sc_channel<0, bool > *p_8_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_awready.bind(*p_8_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[47119].first = 1;
        (*_glb_hdl_sc_channel_map)[47119].second.push_front(p_8_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m00_axi_wdata.bind(*p_8_m00_axi_wdata);
        p_8_m00_axi_wdata->set_sv_netview_offsetfromdp(32198552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_wstrb.bind(*p_8_m00_axi_wstrb);
        p_8_m00_axi_wstrb->set_sv_netview_offsetfromdp(32198608);
        xsim_sc_channel<0, bool > *p_8_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_wlast.bind(*p_8_m00_axi_wlast);
        p_8_m00_axi_wlast->set_sv_netview_offsetfromdp(32198664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_wuser.bind(*p_8_m00_axi_wuser);
        p_8_m00_axi_wuser->set_sv_netview_offsetfromdp(32198720);
        xsim_sc_channel<0, bool > *p_8_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_wvalid.bind(*p_8_m00_axi_wvalid);
        p_8_m00_axi_wvalid->set_sv_netview_offsetfromdp(32198776);
        xsim_sc_channel<0, bool > *p_8_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_wready.bind(*p_8_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[47137].first = 1;
        (*_glb_hdl_sc_channel_map)[47137].second.push_front(p_8_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_bid.bind(*p_8_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[47123].first = 3;
        (*_glb_hdl_sc_channel_map)[47123].second.push_front(p_8_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_bresp.bind(*p_8_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[47125].first = 3;
        (*_glb_hdl_sc_channel_map)[47125].second.push_front(p_8_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_buser.bind(*p_8_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[47126].first = 3;
        (*_glb_hdl_sc_channel_map)[47126].second.push_front(p_8_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_8_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_bvalid.bind(*p_8_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[47127].first = 1;
        (*_glb_hdl_sc_channel_map)[47127].second.push_front(p_8_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_bready.bind(*p_8_m00_axi_bready);
        p_8_m00_axi_bready->set_sv_netview_offsetfromdp(32199112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_arid.bind(*p_8_m00_axi_arid);
        p_8_m00_axi_arid->set_sv_netview_offsetfromdp(32199168);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m00_axi_araddr.bind(*p_8_m00_axi_araddr);
        p_8_m00_axi_araddr->set_sv_netview_offsetfromdp(32199224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m00_axi_arlen.bind(*p_8_m00_axi_arlen);
        p_8_m00_axi_arlen->set_sv_netview_offsetfromdp(32199280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_arsize.bind(*p_8_m00_axi_arsize);
        p_8_m00_axi_arsize->set_sv_netview_offsetfromdp(32199336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_arburst.bind(*p_8_m00_axi_arburst);
        p_8_m00_axi_arburst->set_sv_netview_offsetfromdp(32199392);
        xsim_sc_channel<0, bool > *p_8_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_arlock.bind(*p_8_m00_axi_arlock);
        p_8_m00_axi_arlock->set_sv_netview_offsetfromdp(32199448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_arcache.bind(*p_8_m00_axi_arcache);
        p_8_m00_axi_arcache->set_sv_netview_offsetfromdp(32199504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_arprot.bind(*p_8_m00_axi_arprot);
        p_8_m00_axi_arprot->set_sv_netview_offsetfromdp(32199560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_arqos.bind(*p_8_m00_axi_arqos);
        p_8_m00_axi_arqos->set_sv_netview_offsetfromdp(32199616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_aruser.bind(*p_8_m00_axi_aruser);
        p_8_m00_axi_aruser->set_sv_netview_offsetfromdp(32199672);
        xsim_sc_channel<0, bool > *p_8_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_arvalid.bind(*p_8_m00_axi_arvalid);
        p_8_m00_axi_arvalid->set_sv_netview_offsetfromdp(32199728);
        xsim_sc_channel<0, bool > *p_8_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_arready.bind(*p_8_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[47107].first = 1;
        (*_glb_hdl_sc_channel_map)[47107].second.push_front(p_8_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_rid.bind(*p_8_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[47129].first = 3;
        (*_glb_hdl_sc_channel_map)[47129].second.push_front(p_8_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m00_axi_rdata.bind(*p_8_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[47128].first = 3;
        (*_glb_hdl_sc_channel_map)[47128].second.push_front(p_8_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_rresp.bind(*p_8_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[47132].first = 3;
        (*_glb_hdl_sc_channel_map)[47132].second.push_front(p_8_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_rlast.bind(*p_8_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[47130].first = 1;
        (*_glb_hdl_sc_channel_map)[47130].second.push_front(p_8_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_ruser.bind(*p_8_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[47133].first = 3;
        (*_glb_hdl_sc_channel_map)[47133].second.push_front(p_8_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_8_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_rvalid.bind(*p_8_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[47134].first = 1;
        (*_glb_hdl_sc_channel_map)[47134].second.push_front(p_8_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_rready.bind(*p_8_m00_axi_rready);
        p_8_m00_axi_rready->set_sv_netview_offsetfromdp(32200176);
        xsim_sc_channel<0, bool > *p_8_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_aclk.bind(*p_8_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[47097].first = 1;
        (*_glb_hdl_sc_channel_map)[47097].second.push_front(p_8_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_aresetn.bind(*p_8_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[47101].first = 1;
        (*_glb_hdl_sc_channel_map)[47101].second.push_front(p_8_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_awid.bind(*p_8_m02_axi_awid);
        p_8_m02_axi_awid->set_sv_netview_offsetfromdp(32200344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m02_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m02_axi_awaddr.bind(*p_8_m02_axi_awaddr);
        p_8_m02_axi_awaddr->set_sv_netview_offsetfromdp(32200400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m02_axi_awlen.bind(*p_8_m02_axi_awlen);
        p_8_m02_axi_awlen->set_sv_netview_offsetfromdp(32200456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m02_axi_awsize.bind(*p_8_m02_axi_awsize);
        p_8_m02_axi_awsize->set_sv_netview_offsetfromdp(32200512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m02_axi_awburst.bind(*p_8_m02_axi_awburst);
        p_8_m02_axi_awburst->set_sv_netview_offsetfromdp(32200568);
        xsim_sc_channel<0, bool > *p_8_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_awlock.bind(*p_8_m02_axi_awlock);
        p_8_m02_axi_awlock->set_sv_netview_offsetfromdp(32200624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m02_axi_awcache.bind(*p_8_m02_axi_awcache);
        p_8_m02_axi_awcache->set_sv_netview_offsetfromdp(32200680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m02_axi_awprot.bind(*p_8_m02_axi_awprot);
        p_8_m02_axi_awprot->set_sv_netview_offsetfromdp(32200736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m02_axi_awqos.bind(*p_8_m02_axi_awqos);
        p_8_m02_axi_awqos->set_sv_netview_offsetfromdp(32200792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_awuser.bind(*p_8_m02_axi_awuser);
        p_8_m02_axi_awuser->set_sv_netview_offsetfromdp(32200848);
        xsim_sc_channel<0, bool > *p_8_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_awvalid.bind(*p_8_m02_axi_awvalid);
        p_8_m02_axi_awvalid->set_sv_netview_offsetfromdp(32200904);
        xsim_sc_channel<0, bool > *p_8_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_awready.bind(*p_8_m02_axi_awready);
        (*_glb_hdl_sc_channel_map)[47198].first = 1;
        (*_glb_hdl_sc_channel_map)[47198].second.push_front(p_8_m02_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m02_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m02_axi_wdata.bind(*p_8_m02_axi_wdata);
        p_8_m02_axi_wdata->set_sv_netview_offsetfromdp(32201016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m02_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m02_axi_wstrb.bind(*p_8_m02_axi_wstrb);
        p_8_m02_axi_wstrb->set_sv_netview_offsetfromdp(32201072);
        xsim_sc_channel<0, bool > *p_8_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_wlast.bind(*p_8_m02_axi_wlast);
        p_8_m02_axi_wlast->set_sv_netview_offsetfromdp(32201128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_wuser.bind(*p_8_m02_axi_wuser);
        p_8_m02_axi_wuser->set_sv_netview_offsetfromdp(32201184);
        xsim_sc_channel<0, bool > *p_8_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_wvalid.bind(*p_8_m02_axi_wvalid);
        p_8_m02_axi_wvalid->set_sv_netview_offsetfromdp(32201240);
        xsim_sc_channel<0, bool > *p_8_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_wready.bind(*p_8_m02_axi_wready);
        (*_glb_hdl_sc_channel_map)[47213].first = 1;
        (*_glb_hdl_sc_channel_map)[47213].second.push_front(p_8_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_bid.bind(*p_8_m02_axi_bid);
        (*_glb_hdl_sc_channel_map)[47201].first = 3;
        (*_glb_hdl_sc_channel_map)[47201].second.push_front(p_8_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m02_axi_bresp.bind(*p_8_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map)[47203].first = 3;
        (*_glb_hdl_sc_channel_map)[47203].second.push_front(p_8_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_buser.bind(*p_8_m02_axi_buser);
        (*_glb_hdl_sc_channel_map)[352].first = 3;
        (*_glb_hdl_sc_channel_map)[352].second.push_front(p_8_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_8_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_bvalid.bind(*p_8_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[47204].first = 1;
        (*_glb_hdl_sc_channel_map)[47204].second.push_front(p_8_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_bready.bind(*p_8_m02_axi_bready);
        p_8_m02_axi_bready->set_sv_netview_offsetfromdp(32201576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_arid.bind(*p_8_m02_axi_arid);
        p_8_m02_axi_arid->set_sv_netview_offsetfromdp(32201632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m02_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m02_axi_araddr.bind(*p_8_m02_axi_araddr);
        p_8_m02_axi_araddr->set_sv_netview_offsetfromdp(32201688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m02_axi_arlen.bind(*p_8_m02_axi_arlen);
        p_8_m02_axi_arlen->set_sv_netview_offsetfromdp(32201744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m02_axi_arsize.bind(*p_8_m02_axi_arsize);
        p_8_m02_axi_arsize->set_sv_netview_offsetfromdp(32201800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m02_axi_arburst.bind(*p_8_m02_axi_arburst);
        p_8_m02_axi_arburst->set_sv_netview_offsetfromdp(32201856);
        xsim_sc_channel<0, bool > *p_8_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_arlock.bind(*p_8_m02_axi_arlock);
        p_8_m02_axi_arlock->set_sv_netview_offsetfromdp(32201912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m02_axi_arcache.bind(*p_8_m02_axi_arcache);
        p_8_m02_axi_arcache->set_sv_netview_offsetfromdp(32201968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m02_axi_arprot.bind(*p_8_m02_axi_arprot);
        p_8_m02_axi_arprot->set_sv_netview_offsetfromdp(32202024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m02_axi_arqos.bind(*p_8_m02_axi_arqos);
        p_8_m02_axi_arqos->set_sv_netview_offsetfromdp(32202080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_aruser.bind(*p_8_m02_axi_aruser);
        p_8_m02_axi_aruser->set_sv_netview_offsetfromdp(32202136);
        xsim_sc_channel<0, bool > *p_8_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_arvalid.bind(*p_8_m02_axi_arvalid);
        p_8_m02_axi_arvalid->set_sv_netview_offsetfromdp(32202192);
        xsim_sc_channel<0, bool > *p_8_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_arready.bind(*p_8_m02_axi_arready);
        (*_glb_hdl_sc_channel_map)[47191].first = 1;
        (*_glb_hdl_sc_channel_map)[47191].second.push_front(p_8_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_rid.bind(*p_8_m02_axi_rid);
        (*_glb_hdl_sc_channel_map)[47206].first = 3;
        (*_glb_hdl_sc_channel_map)[47206].second.push_front(p_8_m02_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m02_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m02_axi_rdata.bind(*p_8_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map)[47205].first = 3;
        (*_glb_hdl_sc_channel_map)[47205].second.push_front(p_8_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m02_axi_rresp.bind(*p_8_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map)[47209].first = 3;
        (*_glb_hdl_sc_channel_map)[47209].second.push_front(p_8_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_rlast.bind(*p_8_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map)[47207].first = 1;
        (*_glb_hdl_sc_channel_map)[47207].second.push_front(p_8_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_ruser.bind(*p_8_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map)[351].first = 3;
        (*_glb_hdl_sc_channel_map)[351].second.push_front(p_8_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_8_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_rvalid.bind(*p_8_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[47210].first = 1;
        (*_glb_hdl_sc_channel_map)[47210].second.push_front(p_8_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_rready.bind(*p_8_m02_axi_rready);
        p_8_m02_axi_rready->set_sv_netview_offsetfromdp(32202640);
        xsim_sc_channel<0, bool > *p_8_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_aclk.bind(*p_8_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[47185].first = 1;
        (*_glb_hdl_sc_channel_map)[47185].second.push_front(p_8_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_aresetn.bind(*p_8_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[47188].first = 1;
        (*_glb_hdl_sc_channel_map)[47188].second.push_front(p_8_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_awid.bind(*p_8_m01_axi_awid);
        p_8_m01_axi_awid->set_sv_netview_offsetfromdp(32202808);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m01_axi_awaddr.bind(*p_8_m01_axi_awaddr);
        p_8_m01_axi_awaddr->set_sv_netview_offsetfromdp(32202864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m01_axi_awlen.bind(*p_8_m01_axi_awlen);
        p_8_m01_axi_awlen->set_sv_netview_offsetfromdp(32202920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m01_axi_awsize.bind(*p_8_m01_axi_awsize);
        p_8_m01_axi_awsize->set_sv_netview_offsetfromdp(32202976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m01_axi_awburst.bind(*p_8_m01_axi_awburst);
        p_8_m01_axi_awburst->set_sv_netview_offsetfromdp(32203032);
        xsim_sc_channel<0, bool > *p_8_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_awlock.bind(*p_8_m01_axi_awlock);
        p_8_m01_axi_awlock->set_sv_netview_offsetfromdp(32203088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m01_axi_awcache.bind(*p_8_m01_axi_awcache);
        p_8_m01_axi_awcache->set_sv_netview_offsetfromdp(32203144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m01_axi_awprot.bind(*p_8_m01_axi_awprot);
        p_8_m01_axi_awprot->set_sv_netview_offsetfromdp(32203200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m01_axi_awqos.bind(*p_8_m01_axi_awqos);
        p_8_m01_axi_awqos->set_sv_netview_offsetfromdp(32203256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_awuser.bind(*p_8_m01_axi_awuser);
        p_8_m01_axi_awuser->set_sv_netview_offsetfromdp(32203312);
        xsim_sc_channel<0, bool > *p_8_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_awvalid.bind(*p_8_m01_axi_awvalid);
        p_8_m01_axi_awvalid->set_sv_netview_offsetfromdp(32203368);
        xsim_sc_channel<0, bool > *p_8_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_awready.bind(*p_8_m01_axi_awready);
        (*_glb_hdl_sc_channel_map)[47163].first = 1;
        (*_glb_hdl_sc_channel_map)[47163].second.push_front(p_8_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m01_axi_wdata.bind(*p_8_m01_axi_wdata);
        p_8_m01_axi_wdata->set_sv_netview_offsetfromdp(32203480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m01_axi_wstrb.bind(*p_8_m01_axi_wstrb);
        p_8_m01_axi_wstrb->set_sv_netview_offsetfromdp(32203536);
        xsim_sc_channel<0, bool > *p_8_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_wlast.bind(*p_8_m01_axi_wlast);
        p_8_m01_axi_wlast->set_sv_netview_offsetfromdp(32203592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_wuser.bind(*p_8_m01_axi_wuser);
        p_8_m01_axi_wuser->set_sv_netview_offsetfromdp(32203648);
        xsim_sc_channel<0, bool > *p_8_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_wvalid.bind(*p_8_m01_axi_wvalid);
        p_8_m01_axi_wvalid->set_sv_netview_offsetfromdp(32203704);
        xsim_sc_channel<0, bool > *p_8_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_wready.bind(*p_8_m01_axi_wready);
        (*_glb_hdl_sc_channel_map)[47181].first = 1;
        (*_glb_hdl_sc_channel_map)[47181].second.push_front(p_8_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_bid.bind(*p_8_m01_axi_bid);
        (*_glb_hdl_sc_channel_map)[47167].first = 3;
        (*_glb_hdl_sc_channel_map)[47167].second.push_front(p_8_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m01_axi_bresp.bind(*p_8_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map)[47169].first = 3;
        (*_glb_hdl_sc_channel_map)[47169].second.push_front(p_8_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_buser.bind(*p_8_m01_axi_buser);
        (*_glb_hdl_sc_channel_map)[47170].first = 3;
        (*_glb_hdl_sc_channel_map)[47170].second.push_front(p_8_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_8_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_bvalid.bind(*p_8_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[47171].first = 1;
        (*_glb_hdl_sc_channel_map)[47171].second.push_front(p_8_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_bready.bind(*p_8_m01_axi_bready);
        p_8_m01_axi_bready->set_sv_netview_offsetfromdp(32204040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_arid.bind(*p_8_m01_axi_arid);
        p_8_m01_axi_arid->set_sv_netview_offsetfromdp(32204096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m01_axi_araddr.bind(*p_8_m01_axi_araddr);
        p_8_m01_axi_araddr->set_sv_netview_offsetfromdp(32204152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m01_axi_arlen.bind(*p_8_m01_axi_arlen);
        p_8_m01_axi_arlen->set_sv_netview_offsetfromdp(32204208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m01_axi_arsize.bind(*p_8_m01_axi_arsize);
        p_8_m01_axi_arsize->set_sv_netview_offsetfromdp(32204264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m01_axi_arburst.bind(*p_8_m01_axi_arburst);
        p_8_m01_axi_arburst->set_sv_netview_offsetfromdp(32204320);
        xsim_sc_channel<0, bool > *p_8_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_arlock.bind(*p_8_m01_axi_arlock);
        p_8_m01_axi_arlock->set_sv_netview_offsetfromdp(32204376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m01_axi_arcache.bind(*p_8_m01_axi_arcache);
        p_8_m01_axi_arcache->set_sv_netview_offsetfromdp(32204432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m01_axi_arprot.bind(*p_8_m01_axi_arprot);
        p_8_m01_axi_arprot->set_sv_netview_offsetfromdp(32204488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m01_axi_arqos.bind(*p_8_m01_axi_arqos);
        p_8_m01_axi_arqos->set_sv_netview_offsetfromdp(32204544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_aruser.bind(*p_8_m01_axi_aruser);
        p_8_m01_axi_aruser->set_sv_netview_offsetfromdp(32204600);
        xsim_sc_channel<0, bool > *p_8_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_arvalid.bind(*p_8_m01_axi_arvalid);
        p_8_m01_axi_arvalid->set_sv_netview_offsetfromdp(32204656);
        xsim_sc_channel<0, bool > *p_8_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_arready.bind(*p_8_m01_axi_arready);
        (*_glb_hdl_sc_channel_map)[47151].first = 1;
        (*_glb_hdl_sc_channel_map)[47151].second.push_front(p_8_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_rid.bind(*p_8_m01_axi_rid);
        (*_glb_hdl_sc_channel_map)[47173].first = 3;
        (*_glb_hdl_sc_channel_map)[47173].second.push_front(p_8_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m01_axi_rdata.bind(*p_8_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map)[47172].first = 3;
        (*_glb_hdl_sc_channel_map)[47172].second.push_front(p_8_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m01_axi_rresp.bind(*p_8_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map)[47176].first = 3;
        (*_glb_hdl_sc_channel_map)[47176].second.push_front(p_8_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_rlast.bind(*p_8_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map)[47174].first = 1;
        (*_glb_hdl_sc_channel_map)[47174].second.push_front(p_8_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_ruser.bind(*p_8_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map)[47177].first = 3;
        (*_glb_hdl_sc_channel_map)[47177].second.push_front(p_8_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_8_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_rvalid.bind(*p_8_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[47178].first = 1;
        (*_glb_hdl_sc_channel_map)[47178].second.push_front(p_8_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_rready.bind(*p_8_m01_axi_rready);
        p_8_m01_axi_rready->set_sv_netview_offsetfromdp(32205104);
        xsim_sc_channel<0, bool > *p_8_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_aclk.bind(*p_8_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[47141].first = 1;
        (*_glb_hdl_sc_channel_map)[47141].second.push_front(p_8_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_aresetn.bind(*p_8_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[47145].first = 1;
        (*_glb_hdl_sc_channel_map)[47145].second.push_front(p_8_m01_axi_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
    }
