// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_gelinearsolver_0_gelinearsolver_double_4_2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        n,
        A,
        B
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_pp0_stage0 = 20'd16;
parameter    ap_ST_fsm_pp0_stage1 = 20'd32;
parameter    ap_ST_fsm_state81 = 20'd64;
parameter    ap_ST_fsm_state82 = 20'd128;
parameter    ap_ST_fsm_state83 = 20'd256;
parameter    ap_ST_fsm_state84 = 20'd512;
parameter    ap_ST_fsm_pp2_stage0 = 20'd1024;
parameter    ap_ST_fsm_state87 = 20'd2048;
parameter    ap_ST_fsm_state88 = 20'd4096;
parameter    ap_ST_fsm_pp3_stage0 = 20'd8192;
parameter    ap_ST_fsm_state91 = 20'd16384;
parameter    ap_ST_fsm_state92 = 20'd32768;
parameter    ap_ST_fsm_state93 = 20'd65536;
parameter    ap_ST_fsm_state94 = 20'd131072;
parameter    ap_ST_fsm_pp5_stage0 = 20'd262144;
parameter    ap_ST_fsm_state166 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [63:0] m_axi_gmem0_WDATA;
output  [7:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [63:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [31:0] n;
input  [63:0] A;
input  [63:0] B;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem0_AWVALID;
reg m_axi_gmem0_WVALID;
reg m_axi_gmem0_ARVALID;
reg[63:0] m_axi_gmem0_ARADDR;
reg m_axi_gmem0_RREADY;
reg m_axi_gmem0_BREADY;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] matA_1_address0;
reg    matA_1_ce0;
reg    matA_1_we0;
reg   [63:0] matA_1_d0;
wire   [63:0] matA_1_q0;
reg    matA_1_ce1;
reg    matA_1_we1;
wire   [63:0] matA_1_q1;
reg   [2:0] matA_0_address0;
reg    matA_0_ce0;
reg    matA_0_we0;
reg   [63:0] matA_0_d0;
wire   [63:0] matA_0_q0;
reg    matA_0_ce1;
reg    matA_0_we1;
wire   [63:0] matA_0_q1;
reg   [63:0] matB_1_0;
reg   [63:0] matB_1_1;
reg   [63:0] matB_0_0;
reg   [63:0] matB_0_1;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln154_1_reg_1654;
reg    gmem0_blk_n_R;
reg    ap_enable_reg_pp0_iter35;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter35_reg;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter1_reg;
reg    ap_enable_reg_pp0_iter37;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter36_reg;
reg    gmem0_blk_n_AW;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln168_reg_1937;
reg    gmem0_blk_n_W;
reg    ap_enable_reg_pp5_iter2;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter1_reg;
reg    gmem0_blk_n_B;
reg    ap_enable_reg_pp5_iter70;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter69_reg;
reg   [61:0] indvar_flatten_reg_348;
reg   [30:0] r_reg_359;
reg   [3:0] c_reg_370;
reg   [30:0] i_reg_504;
reg   [2:0] indvar_flatten25_reg_515;
reg   [1:0] i_4_reg_526;
reg   [1:0] k_reg_537;
reg   [31:0] r_4_reg_559;
wire   [63:0] cast_fu_631_p1;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln154_fu_641_p2;
reg   [0:0] icmp_ln154_reg_1601;
wire   [60:0] n_cast_fu_646_p1;
reg   [60:0] n_cast_reg_1605;
wire   [63:0] grp_fu_635_p2;
reg   [63:0] bound_reg_1610;
reg   [31:0] P_0_3_load_reg_1615;
wire    ap_CS_fsm_state3;
reg   [31:0] P_1_3_load_reg_1621;
reg   [31:0] P_2_3_load_reg_1627;
reg   [31:0] P_3_3_load_reg_1633;
wire   [0:0] icmp_ln152_fu_665_p2;
wire   [1:0] add_ln152_fu_671_p2;
reg   [1:0] add_ln152_reg_1643;
wire   [0:0] empty_fu_677_p1;
reg   [0:0] empty_reg_1648;
wire   [0:0] icmp_ln154_1_fu_742_p2;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
reg    ap_block_state9_io;
wire    ap_block_state11_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state15_pp0_stage0_iter5;
wire    ap_block_state17_pp0_stage0_iter6;
wire    ap_block_state19_pp0_stage0_iter7;
wire    ap_block_state21_pp0_stage0_iter8;
wire    ap_block_state23_pp0_stage0_iter9;
wire    ap_block_state25_pp0_stage0_iter10;
wire    ap_block_state27_pp0_stage0_iter11;
wire    ap_block_state29_pp0_stage0_iter12;
wire    ap_block_state31_pp0_stage0_iter13;
wire    ap_block_state33_pp0_stage0_iter14;
wire    ap_block_state35_pp0_stage0_iter15;
wire    ap_block_state37_pp0_stage0_iter16;
wire    ap_block_state39_pp0_stage0_iter17;
wire    ap_block_state41_pp0_stage0_iter18;
wire    ap_block_state43_pp0_stage0_iter19;
wire    ap_block_state45_pp0_stage0_iter20;
wire    ap_block_state47_pp0_stage0_iter21;
wire    ap_block_state49_pp0_stage0_iter22;
wire    ap_block_state51_pp0_stage0_iter23;
wire    ap_block_state53_pp0_stage0_iter24;
wire    ap_block_state55_pp0_stage0_iter25;
wire    ap_block_state57_pp0_stage0_iter26;
wire    ap_block_state59_pp0_stage0_iter27;
wire    ap_block_state61_pp0_stage0_iter28;
wire    ap_block_state63_pp0_stage0_iter29;
wire    ap_block_state65_pp0_stage0_iter30;
wire    ap_block_state67_pp0_stage0_iter31;
wire    ap_block_state69_pp0_stage0_iter32;
wire    ap_block_state71_pp0_stage0_iter33;
wire    ap_block_state73_pp0_stage0_iter34;
wire    ap_block_state75_pp0_stage0_iter35;
wire    ap_block_state77_pp0_stage0_iter36;
reg    ap_block_state79_pp0_stage0_iter37;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter2_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter3_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter4_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter5_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter6_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter7_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter8_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter9_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter10_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter11_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter12_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter13_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter14_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter15_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter16_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter17_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter18_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter19_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter20_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter21_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter22_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter23_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter24_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter25_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter26_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter27_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter28_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter29_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter30_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter31_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter32_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter33_reg;
reg   [0:0] icmp_ln154_1_reg_1654_pp0_iter34_reg;
wire   [61:0] add_ln154_2_fu_747_p2;
reg   [61:0] add_ln154_2_reg_1658;
wire   [3:0] select_ln154_fu_759_p3;
reg   [3:0] select_ln154_reg_1663;
reg   [3:0] select_ln154_reg_1663_pp0_iter1_reg;
wire   [30:0] select_ln154_1_fu_767_p3;
reg   [30:0] select_ln154_1_reg_1669;
wire   [0:0] tmp_10_fu_775_p3;
reg   [0:0] tmp_10_reg_1675;
reg   [0:0] tmp_10_reg_1675_pp0_iter1_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter2_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter3_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter4_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter5_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter6_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter7_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter8_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter9_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter10_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter11_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter12_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter13_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter14_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter15_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter16_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter17_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter18_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter19_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter20_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter21_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter22_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter23_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter24_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter25_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter26_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter27_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter28_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter29_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter30_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter31_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter32_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter33_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter34_reg;
reg   [0:0] tmp_10_reg_1675_pp0_iter35_reg;
wire   [0:0] trunc_ln154_fu_809_p1;
reg   [0:0] trunc_ln154_reg_1679;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter1_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter2_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter3_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter4_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter5_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter6_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter7_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter8_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter9_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter10_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter11_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter12_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter13_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter14_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter15_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter16_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter17_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter18_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter19_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter20_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter21_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter22_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter23_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter24_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter25_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter26_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter27_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter28_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter29_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter30_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter31_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter32_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter33_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter34_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter35_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter36_reg;
reg   [0:0] trunc_ln154_reg_1679_pp0_iter37_reg;
wire   [60:0] select_ln154_2_fu_823_p3;
reg   [60:0] select_ln154_2_reg_1683;
wire   [2:0] add_ln158_1_fu_835_p2;
reg   [2:0] add_ln158_1_reg_1688;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter1_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter2_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter3_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter4_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter5_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter6_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter7_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter8_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter9_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter10_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter11_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter12_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter13_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter14_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter15_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter16_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter17_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter18_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter19_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter20_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter21_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter22_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter23_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter24_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter25_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter26_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter27_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter28_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter29_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter30_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter31_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter32_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter33_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter34_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter35_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter36_reg;
reg   [2:0] add_ln158_1_reg_1688_pp0_iter37_reg;
wire   [0:0] icmp_ln159_fu_841_p2;
reg   [0:0] icmp_ln159_reg_1693;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter1_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter2_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter3_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter4_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter5_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter6_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter7_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter8_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter9_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter10_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter11_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter12_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter13_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter14_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter15_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter16_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter17_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter18_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter19_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter20_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter21_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter22_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter23_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter24_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter25_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter26_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter27_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter28_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter29_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter30_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter31_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter32_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter33_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter34_reg;
reg   [0:0] icmp_ln159_reg_1693_pp0_iter35_reg;
wire    ap_block_state6_pp0_stage1_iter0;
reg    ap_block_state6_io;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state12_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state16_pp0_stage1_iter5;
wire    ap_block_state18_pp0_stage1_iter6;
wire    ap_block_state20_pp0_stage1_iter7;
wire    ap_block_state22_pp0_stage1_iter8;
wire    ap_block_state24_pp0_stage1_iter9;
wire    ap_block_state26_pp0_stage1_iter10;
wire    ap_block_state28_pp0_stage1_iter11;
wire    ap_block_state30_pp0_stage1_iter12;
wire    ap_block_state32_pp0_stage1_iter13;
wire    ap_block_state34_pp0_stage1_iter14;
wire    ap_block_state36_pp0_stage1_iter15;
wire    ap_block_state38_pp0_stage1_iter16;
wire    ap_block_state40_pp0_stage1_iter17;
wire    ap_block_state42_pp0_stage1_iter18;
wire    ap_block_state44_pp0_stage1_iter19;
wire    ap_block_state46_pp0_stage1_iter20;
wire    ap_block_state48_pp0_stage1_iter21;
wire    ap_block_state50_pp0_stage1_iter22;
wire    ap_block_state52_pp0_stage1_iter23;
wire    ap_block_state54_pp0_stage1_iter24;
wire    ap_block_state56_pp0_stage1_iter25;
wire    ap_block_state58_pp0_stage1_iter26;
wire    ap_block_state60_pp0_stage1_iter27;
wire    ap_block_state62_pp0_stage1_iter28;
wire    ap_block_state64_pp0_stage1_iter29;
wire    ap_block_state66_pp0_stage1_iter30;
wire    ap_block_state68_pp0_stage1_iter31;
wire    ap_block_state70_pp0_stage1_iter32;
wire    ap_block_state72_pp0_stage1_iter33;
wire    ap_block_state74_pp0_stage1_iter34;
reg    ap_block_state76_pp0_stage1_iter35;
wire    ap_block_state78_pp0_stage1_iter36;
wire    ap_block_state80_pp0_stage1_iter37;
reg    ap_block_pp0_stage1_11001;
wire   [3:0] add_ln155_fu_865_p2;
reg   [3:0] add_ln155_reg_1708;
wire   [60:0] grp_fu_850_p2;
reg   [60:0] mul_ln154_reg_1713;
wire   [61:0] add_ln158_fu_899_p2;
reg   [61:0] add_ln158_reg_1718;
wire   [63:0] bitcast_ln158_fu_943_p1;
reg   [63:0] bitcast_ln158_reg_1729;
wire   [30:0] add_ln75_fu_965_p2;
wire    ap_CS_fsm_state82;
reg   [31:0] P_0_2_reg_1746;
wire    ap_CS_fsm_state84;
wire    grp_getrf_core_double_2_4_2_s_fu_570_ap_ready;
wire    grp_getrf_core_double_2_4_2_s_fu_570_ap_done;
reg   [31:0] P_1_4_reg_1752;
reg   [31:0] P_2_4_reg_1758;
reg   [31:0] P_3_4_reg_1764;
reg   [63:0] matB_1_0_load_reg_1770;
reg   [63:0] matB_1_1_load_reg_1775;
reg   [63:0] matB_0_0_load_reg_1780;
reg   [63:0] matB_0_1_load_reg_1785;
wire   [0:0] icmp_ln113_fu_995_p2;
reg   [0:0] icmp_ln113_reg_1790;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state85_pp2_stage0_iter0;
wire    ap_block_state86_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [30:0] add_ln113_fu_1000_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] select_ln115_3_fu_1078_p3;
reg   [63:0] select_ln115_3_reg_1799;
wire   [1:0] add_ln115_fu_1108_p2;
reg   [1:0] add_ln115_reg_1804;
wire    ap_CS_fsm_state87;
reg   [63:0] buf_0_reg_1824;
wire    ap_CS_fsm_state88;
wire    grp_trisolver_L_double_4_2_s_fu_602_ap_ready;
wire    grp_trisolver_L_double_4_2_s_fu_602_ap_done;
reg   [63:0] buf_1_reg_1829;
reg   [63:0] buf_2_reg_1834;
reg   [63:0] buf_3_reg_1839;
wire   [0:0] icmp_ln87_fu_1177_p2;
reg   [0:0] icmp_ln87_reg_1844;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state89_pp3_stage0_iter0;
wire    ap_block_state90_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [2:0] add_ln87_1_fu_1183_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [1:0] select_ln87_fu_1201_p3;
reg   [1:0] select_ln87_reg_1853;
wire   [1:0] select_ln87_1_fu_1209_p3;
reg   [1:0] select_ln87_1_reg_1859;
wire   [0:0] trunc_ln87_fu_1217_p1;
reg   [0:0] trunc_ln87_reg_1866;
wire   [0:0] trunc_ln91_fu_1221_p1;
reg   [0:0] trunc_ln91_reg_1871;
wire   [1:0] add_ln88_fu_1225_p2;
wire    ap_CS_fsm_state91;
reg   [63:0] buf_o_0_reg_1901;
wire    ap_CS_fsm_state92;
wire    grp_trisolver_U_double_4_2_s_fu_588_ap_ready;
wire    grp_trisolver_U_double_4_2_s_fu_588_ap_done;
reg   [63:0] buf_o_1_reg_1906;
reg   [63:0] buf_o_2_reg_1911;
reg   [63:0] buf_o_3_reg_1916;
wire   [2:0] add_ln100_fu_1348_p2;
wire    ap_CS_fsm_state93;
wire   [0:0] trunc_ln170_fu_1388_p1;
reg   [0:0] trunc_ln170_reg_1932;
wire    ap_CS_fsm_state94;
wire   [0:0] icmp_ln168_fu_1392_p2;
wire    ap_block_state95_pp5_stage0_iter0;
wire    ap_block_state96_pp5_stage0_iter1;
reg    ap_block_state96_io;
wire    ap_block_state97_pp5_stage0_iter2;
reg    ap_block_state97_io;
wire    ap_block_state98_pp5_stage0_iter3;
wire    ap_block_state99_pp5_stage0_iter4;
wire    ap_block_state100_pp5_stage0_iter5;
wire    ap_block_state101_pp5_stage0_iter6;
wire    ap_block_state102_pp5_stage0_iter7;
wire    ap_block_state103_pp5_stage0_iter8;
wire    ap_block_state104_pp5_stage0_iter9;
wire    ap_block_state105_pp5_stage0_iter10;
wire    ap_block_state106_pp5_stage0_iter11;
wire    ap_block_state107_pp5_stage0_iter12;
wire    ap_block_state108_pp5_stage0_iter13;
wire    ap_block_state109_pp5_stage0_iter14;
wire    ap_block_state110_pp5_stage0_iter15;
wire    ap_block_state111_pp5_stage0_iter16;
wire    ap_block_state112_pp5_stage0_iter17;
wire    ap_block_state113_pp5_stage0_iter18;
wire    ap_block_state114_pp5_stage0_iter19;
wire    ap_block_state115_pp5_stage0_iter20;
wire    ap_block_state116_pp5_stage0_iter21;
wire    ap_block_state117_pp5_stage0_iter22;
wire    ap_block_state118_pp5_stage0_iter23;
wire    ap_block_state119_pp5_stage0_iter24;
wire    ap_block_state120_pp5_stage0_iter25;
wire    ap_block_state121_pp5_stage0_iter26;
wire    ap_block_state122_pp5_stage0_iter27;
wire    ap_block_state123_pp5_stage0_iter28;
wire    ap_block_state124_pp5_stage0_iter29;
wire    ap_block_state125_pp5_stage0_iter30;
wire    ap_block_state126_pp5_stage0_iter31;
wire    ap_block_state127_pp5_stage0_iter32;
wire    ap_block_state128_pp5_stage0_iter33;
wire    ap_block_state129_pp5_stage0_iter34;
wire    ap_block_state130_pp5_stage0_iter35;
wire    ap_block_state131_pp5_stage0_iter36;
wire    ap_block_state132_pp5_stage0_iter37;
wire    ap_block_state133_pp5_stage0_iter38;
wire    ap_block_state134_pp5_stage0_iter39;
wire    ap_block_state135_pp5_stage0_iter40;
wire    ap_block_state136_pp5_stage0_iter41;
wire    ap_block_state137_pp5_stage0_iter42;
wire    ap_block_state138_pp5_stage0_iter43;
wire    ap_block_state139_pp5_stage0_iter44;
wire    ap_block_state140_pp5_stage0_iter45;
wire    ap_block_state141_pp5_stage0_iter46;
wire    ap_block_state142_pp5_stage0_iter47;
wire    ap_block_state143_pp5_stage0_iter48;
wire    ap_block_state144_pp5_stage0_iter49;
wire    ap_block_state145_pp5_stage0_iter50;
wire    ap_block_state146_pp5_stage0_iter51;
wire    ap_block_state147_pp5_stage0_iter52;
wire    ap_block_state148_pp5_stage0_iter53;
wire    ap_block_state149_pp5_stage0_iter54;
wire    ap_block_state150_pp5_stage0_iter55;
wire    ap_block_state151_pp5_stage0_iter56;
wire    ap_block_state152_pp5_stage0_iter57;
wire    ap_block_state153_pp5_stage0_iter58;
wire    ap_block_state154_pp5_stage0_iter59;
wire    ap_block_state155_pp5_stage0_iter60;
wire    ap_block_state156_pp5_stage0_iter61;
wire    ap_block_state157_pp5_stage0_iter62;
wire    ap_block_state158_pp5_stage0_iter63;
wire    ap_block_state159_pp5_stage0_iter64;
wire    ap_block_state160_pp5_stage0_iter65;
wire    ap_block_state161_pp5_stage0_iter66;
wire    ap_block_state162_pp5_stage0_iter67;
wire    ap_block_state163_pp5_stage0_iter68;
wire    ap_block_state164_pp5_stage0_iter69;
reg    ap_block_state165_pp5_stage0_iter70;
reg    ap_block_pp5_stage0_11001;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter2_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter3_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter4_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter5_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter6_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter7_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter8_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter9_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter10_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter11_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter12_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter13_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter14_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter15_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter16_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter17_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter18_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter19_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter20_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter21_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter22_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter23_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter24_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter25_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter26_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter27_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter28_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter29_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter30_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter31_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter32_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter33_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter34_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter35_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter36_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter37_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter38_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter39_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter40_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter41_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter42_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter43_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter44_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter45_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter46_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter47_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter48_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter49_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter50_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter51_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter52_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter53_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter54_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter55_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter56_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter57_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter58_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter59_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter60_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter61_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter62_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter63_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter64_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter65_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter66_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter67_reg;
reg   [0:0] icmp_ln168_reg_1937_pp5_iter68_reg;
wire   [31:0] add_ln168_fu_1397_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [1:0] trunc_ln170_1_fu_1403_p1;
reg   [1:0] trunc_ln170_1_reg_1946;
reg   [60:0] trunc_ln170_3_reg_1951;
wire   [63:0] tmp_s_fu_1447_p6;
reg   [63:0] tmp_s_reg_1956;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter36;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state85;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state89;
reg    ap_enable_reg_pp3_iter1;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state95;
reg    ap_enable_reg_pp5_iter3;
reg    ap_enable_reg_pp5_iter4;
reg    ap_enable_reg_pp5_iter5;
reg    ap_enable_reg_pp5_iter6;
reg    ap_enable_reg_pp5_iter7;
reg    ap_enable_reg_pp5_iter8;
reg    ap_enable_reg_pp5_iter9;
reg    ap_enable_reg_pp5_iter10;
reg    ap_enable_reg_pp5_iter11;
reg    ap_enable_reg_pp5_iter12;
reg    ap_enable_reg_pp5_iter13;
reg    ap_enable_reg_pp5_iter14;
reg    ap_enable_reg_pp5_iter15;
reg    ap_enable_reg_pp5_iter16;
reg    ap_enable_reg_pp5_iter17;
reg    ap_enable_reg_pp5_iter18;
reg    ap_enable_reg_pp5_iter19;
reg    ap_enable_reg_pp5_iter20;
reg    ap_enable_reg_pp5_iter21;
reg    ap_enable_reg_pp5_iter22;
reg    ap_enable_reg_pp5_iter23;
reg    ap_enable_reg_pp5_iter24;
reg    ap_enable_reg_pp5_iter25;
reg    ap_enable_reg_pp5_iter26;
reg    ap_enable_reg_pp5_iter27;
reg    ap_enable_reg_pp5_iter28;
reg    ap_enable_reg_pp5_iter29;
reg    ap_enable_reg_pp5_iter30;
reg    ap_enable_reg_pp5_iter31;
reg    ap_enable_reg_pp5_iter32;
reg    ap_enable_reg_pp5_iter33;
reg    ap_enable_reg_pp5_iter34;
reg    ap_enable_reg_pp5_iter35;
reg    ap_enable_reg_pp5_iter36;
reg    ap_enable_reg_pp5_iter37;
reg    ap_enable_reg_pp5_iter38;
reg    ap_enable_reg_pp5_iter39;
reg    ap_enable_reg_pp5_iter40;
reg    ap_enable_reg_pp5_iter41;
reg    ap_enable_reg_pp5_iter42;
reg    ap_enable_reg_pp5_iter43;
reg    ap_enable_reg_pp5_iter44;
reg    ap_enable_reg_pp5_iter45;
reg    ap_enable_reg_pp5_iter46;
reg    ap_enable_reg_pp5_iter47;
reg    ap_enable_reg_pp5_iter48;
reg    ap_enable_reg_pp5_iter49;
reg    ap_enable_reg_pp5_iter50;
reg    ap_enable_reg_pp5_iter51;
reg    ap_enable_reg_pp5_iter52;
reg    ap_enable_reg_pp5_iter53;
reg    ap_enable_reg_pp5_iter54;
reg    ap_enable_reg_pp5_iter55;
reg    ap_enable_reg_pp5_iter56;
reg    ap_enable_reg_pp5_iter57;
reg    ap_enable_reg_pp5_iter58;
reg    ap_enable_reg_pp5_iter59;
reg    ap_enable_reg_pp5_iter60;
reg    ap_enable_reg_pp5_iter61;
reg    ap_enable_reg_pp5_iter62;
reg    ap_enable_reg_pp5_iter63;
reg    ap_enable_reg_pp5_iter64;
reg    ap_enable_reg_pp5_iter65;
reg    ap_enable_reg_pp5_iter66;
reg    ap_enable_reg_pp5_iter67;
reg    ap_enable_reg_pp5_iter68;
reg    ap_enable_reg_pp5_iter69;
reg   [1:0] buf_i_address0;
reg    buf_i_ce0;
reg    buf_i_we0;
reg   [63:0] buf_i_d0;
wire   [63:0] buf_i_q0;
reg    buf_i_ce1;
reg    buf_i_we1;
wire   [63:0] buf_i_q1;
reg   [1:0] dataC_address0;
reg    dataC_ce0;
reg    dataC_we0;
reg   [63:0] dataC_d0;
wire   [63:0] dataC_q0;
reg    dataC_ce1;
reg    dataC_we1;
wire   [63:0] dataC_q1;
wire    grp_getrf_core_double_2_4_2_s_fu_570_ap_start;
wire    grp_getrf_core_double_2_4_2_s_fu_570_ap_idle;
reg   [31:0] grp_getrf_core_double_2_4_2_s_fu_570_p_read;
reg   [31:0] grp_getrf_core_double_2_4_2_s_fu_570_p_read1;
reg   [31:0] grp_getrf_core_double_2_4_2_s_fu_570_p_read2;
reg   [31:0] grp_getrf_core_double_2_4_2_s_fu_570_p_read3;
wire   [2:0] grp_getrf_core_double_2_4_2_s_fu_570_matA_1_address0;
wire    grp_getrf_core_double_2_4_2_s_fu_570_matA_1_ce0;
wire    grp_getrf_core_double_2_4_2_s_fu_570_matA_1_we0;
wire   [63:0] grp_getrf_core_double_2_4_2_s_fu_570_matA_1_d0;
wire   [2:0] grp_getrf_core_double_2_4_2_s_fu_570_matA_1_address1;
wire    grp_getrf_core_double_2_4_2_s_fu_570_matA_1_ce1;
wire    grp_getrf_core_double_2_4_2_s_fu_570_matA_1_we1;
wire   [63:0] grp_getrf_core_double_2_4_2_s_fu_570_matA_1_d1;
wire   [2:0] grp_getrf_core_double_2_4_2_s_fu_570_matA_0_address0;
wire    grp_getrf_core_double_2_4_2_s_fu_570_matA_0_ce0;
wire    grp_getrf_core_double_2_4_2_s_fu_570_matA_0_we0;
wire   [63:0] grp_getrf_core_double_2_4_2_s_fu_570_matA_0_d0;
wire   [2:0] grp_getrf_core_double_2_4_2_s_fu_570_matA_0_address1;
wire    grp_getrf_core_double_2_4_2_s_fu_570_matA_0_ce1;
wire    grp_getrf_core_double_2_4_2_s_fu_570_matA_0_we1;
wire   [63:0] grp_getrf_core_double_2_4_2_s_fu_570_matA_0_d1;
wire   [31:0] grp_getrf_core_double_2_4_2_s_fu_570_ap_return_0;
wire   [31:0] grp_getrf_core_double_2_4_2_s_fu_570_ap_return_1;
wire   [31:0] grp_getrf_core_double_2_4_2_s_fu_570_ap_return_2;
wire   [31:0] grp_getrf_core_double_2_4_2_s_fu_570_ap_return_3;
wire    grp_trisolver_U_double_4_2_s_fu_588_ap_start;
wire    grp_trisolver_U_double_4_2_s_fu_588_ap_idle;
wire   [1:0] grp_trisolver_U_double_4_2_s_fu_588_dataB_address0;
wire    grp_trisolver_U_double_4_2_s_fu_588_dataB_ce0;
wire    grp_trisolver_U_double_4_2_s_fu_588_dataB_we0;
wire   [63:0] grp_trisolver_U_double_4_2_s_fu_588_dataB_d0;
wire   [1:0] grp_trisolver_U_double_4_2_s_fu_588_dataB_address1;
wire    grp_trisolver_U_double_4_2_s_fu_588_dataB_ce1;
wire    grp_trisolver_U_double_4_2_s_fu_588_dataB_we1;
wire   [63:0] grp_trisolver_U_double_4_2_s_fu_588_dataB_d1;
wire   [2:0] grp_trisolver_U_double_4_2_s_fu_588_matA_1_address0;
wire    grp_trisolver_U_double_4_2_s_fu_588_matA_1_ce0;
wire   [2:0] grp_trisolver_U_double_4_2_s_fu_588_matA_0_address0;
wire    grp_trisolver_U_double_4_2_s_fu_588_matA_0_ce0;
wire   [63:0] grp_trisolver_U_double_4_2_s_fu_588_ap_return_0;
wire   [63:0] grp_trisolver_U_double_4_2_s_fu_588_ap_return_1;
wire   [63:0] grp_trisolver_U_double_4_2_s_fu_588_ap_return_2;
wire   [63:0] grp_trisolver_U_double_4_2_s_fu_588_ap_return_3;
wire    grp_trisolver_L_double_4_2_s_fu_602_ap_start;
wire    grp_trisolver_L_double_4_2_s_fu_602_ap_idle;
wire   [1:0] grp_trisolver_L_double_4_2_s_fu_602_dataB_address0;
wire    grp_trisolver_L_double_4_2_s_fu_602_dataB_ce0;
wire    grp_trisolver_L_double_4_2_s_fu_602_dataB_we0;
wire   [63:0] grp_trisolver_L_double_4_2_s_fu_602_dataB_d0;
wire   [1:0] grp_trisolver_L_double_4_2_s_fu_602_dataB_address1;
wire    grp_trisolver_L_double_4_2_s_fu_602_dataB_ce1;
wire    grp_trisolver_L_double_4_2_s_fu_602_dataB_we1;
wire   [63:0] grp_trisolver_L_double_4_2_s_fu_602_dataB_d1;
wire   [2:0] grp_trisolver_L_double_4_2_s_fu_602_matA_0_address0;
wire    grp_trisolver_L_double_4_2_s_fu_602_matA_0_ce0;
wire   [2:0] grp_trisolver_L_double_4_2_s_fu_602_matA_1_address0;
wire    grp_trisolver_L_double_4_2_s_fu_602_matA_1_ce0;
wire   [63:0] grp_trisolver_L_double_4_2_s_fu_602_ap_return_0;
wire   [63:0] grp_trisolver_L_double_4_2_s_fu_602_ap_return_1;
wire   [63:0] grp_trisolver_L_double_4_2_s_fu_602_ap_return_2;
wire   [63:0] grp_trisolver_L_double_4_2_s_fu_602_ap_return_3;
reg   [1:0] j_reg_336;
wire    ap_CS_fsm_state166;
reg   [61:0] ap_phi_mux_indvar_flatten_phi_fu_352_p4;
reg   [30:0] ap_phi_mux_r_phi_fu_363_p4;
reg   [3:0] ap_phi_mux_c_phi_fu_374_p4;
reg   [31:0] ap_phi_mux_P_3_2_phi_fu_436_p8;
reg   [31:0] P_3_1_reg_381;
wire   [0:0] icmp_ln75_fu_960_p2;
wire    ap_CS_fsm_state81;
reg   [31:0] ap_phi_mux_P_2_2_phi_fu_454_p8;
reg   [31:0] P_2_1_reg_391;
reg   [31:0] ap_phi_mux_P_1_2_phi_fu_472_p8;
reg   [31:0] P_1_1_reg_401;
reg   [31:0] ap_phi_mux_P_0_231_phi_fu_490_p8;
reg   [31:0] P_0_1_reg_411;
reg   [30:0] P_0_5_reg_421;
wire   [31:0] zext_ln75_fu_952_p1;
wire   [1:0] trunc_ln77_fu_971_p1;
reg   [1:0] ap_phi_mux_i_4_phi_fu_530_p4;
wire    ap_block_pp3_stage0;
reg   [2:0] i_5_reg_548;
wire   [0:0] icmp_ln100_fu_1342_p2;
reg    grp_getrf_core_double_2_4_2_s_fu_570_ap_start_reg;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state4;
reg    grp_trisolver_U_double_4_2_s_fu_588_ap_start_reg;
reg    grp_trisolver_L_double_4_2_s_fu_602_ap_start_reg;
wire   [63:0] zext_ln158_fu_947_p1;
wire   [63:0] zext_ln115_fu_1114_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln91_fu_1246_p1;
wire  signed [63:0] sext_ln154_1_fu_855_p1;
wire  signed [63:0] sext_ln158_fu_905_p1;
wire  signed [63:0] sext_ln170_fu_1460_p1;
reg    ap_block_pp5_stage0_01001;
wire   [63:0] bitcast_ln154_fu_915_p1;
reg   [63:0] buf_1_1_fu_160;
reg   [63:0] buf_2_1_fu_164;
reg   [63:0] buf_3_1_fu_168;
reg   [63:0] buf_o_0_1_fu_172;
reg   [63:0] buf_o_1_1_fu_176;
reg   [63:0] buf_o_2_1_fu_180;
reg   [63:0] buf_o_3_1_fu_184;
reg   [63:0] dataX_3_fu_188;
wire   [63:0] dataX_0_fu_1358_p6;
wire   [1:0] trunc_ln102_fu_1354_p1;
reg   [63:0] dataX_3_1_fu_192;
reg   [63:0] dataX_3_2_fu_196;
reg   [63:0] dataX_3_3_fu_200;
reg   [31:0] P_0_3_fu_204;
reg   [31:0] P_1_3_fu_208;
reg   [31:0] P_2_3_fu_212;
reg   [31:0] P_3_3_fu_216;
wire   [63:0] select_ln90_fu_1281_p3;
wire   [31:0] grp_fu_635_p0;
wire   [31:0] grp_fu_635_p1;
wire   [34:0] tmp_fu_705_p4;
wire   [63:0] p_cast44_fu_714_p1;
wire   [63:0] empty_42_fu_718_p2;
wire   [31:0] zext_ln155_fu_733_p1;
wire   [63:0] zext_ln154_1_fu_701_p1;
wire   [0:0] icmp_ln155_fu_737_p2;
wire   [30:0] add_ln154_fu_753_p2;
wire   [34:0] p_mid_fu_791_p4;
wire   [63:0] p_cast44_mid1_fu_800_p1;
wire   [63:0] p_mid119_fu_804_p2;
wire   [60:0] trunc_ln160_mid1_fu_813_p4;
wire   [60:0] trunc_ln_fu_723_p4;
wire   [2:0] trunc_ln158_fu_831_p1;
wire   [2:0] tmp_2_fu_783_p3;
wire   [30:0] grp_fu_850_p0;
wire   [31:0] grp_fu_850_p1;
wire   [63:0] sext_ln160_1_mid2_v_v_v_v_fu_870_p3;
wire   [63:0] add_ln154_1_fu_877_p2;
wire   [60:0] sext_ln160_1_mid2_v_fu_882_p4;
wire   [61:0] zext_ln155_1_fu_896_p1;
wire  signed [61:0] sext_ln154_fu_892_p1;
wire   [31:0] zext_ln113_fu_991_p1;
wire   [1:0] tmp_7_fu_1010_p5;
wire   [31:0] tmp_7_fu_1010_p6;
wire   [1:0] trunc_ln115_1_fu_1020_p1;
wire   [1:0] sub_ln115_fu_1032_p2;
wire   [0:0] tmp_11_fu_1024_p3;
wire   [0:0] tmp_12_fu_1038_p3;
wire   [0:0] tmp_13_fu_1046_p3;
wire   [0:0] select_ln115_fu_1054_p3;
wire   [0:0] trunc_ln115_2_fu_1062_p1;
wire   [63:0] select_ln115_2_fu_1066_p3;
wire   [63:0] select_ln115_1_fu_1072_p3;
wire   [0:0] trunc_ln115_3_fu_1086_p1;
wire   [1:0] tmp_3_fu_1090_p3;
wire   [1:0] div10_i_udiv_fu_1098_p4;
wire   [0:0] icmp_ln88_fu_1195_p2;
wire   [1:0] add_ln87_fu_1189_p2;
wire   [1:0] shl_ln91_fu_1236_p2;
wire   [1:0] add_ln91_fu_1241_p2;
wire   [1:0] shl_ln87_fu_1231_p2;
wire   [1:0] add_ln90_fu_1251_p2;
wire   [31:0] zext_ln90_fu_1256_p1;
wire   [1:0] tmp_9_fu_1271_p5;
wire   [0:0] icmp_ln90_fu_1260_p2;
wire   [63:0] tmp_9_fu_1271_p6;
wire   [1:0] dataX_0_fu_1358_p5;
wire   [35:0] shl_ln_fu_1407_p4;
wire   [63:0] zext_ln170_fu_1416_p1;
wire   [63:0] add_ln170_fu_1420_p2;
reg    grp_fu_850_ce;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
wire   [60:0] grp_fu_850_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 matB_1_0 = 64'd0;
#0 matB_1_1 = 64'd0;
#0 matB_0_0 = 64'd0;
#0 matB_0_1 = 64'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter70 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter6 = 1'b0;
#0 ap_enable_reg_pp5_iter7 = 1'b0;
#0 ap_enable_reg_pp5_iter8 = 1'b0;
#0 ap_enable_reg_pp5_iter9 = 1'b0;
#0 ap_enable_reg_pp5_iter10 = 1'b0;
#0 ap_enable_reg_pp5_iter11 = 1'b0;
#0 ap_enable_reg_pp5_iter12 = 1'b0;
#0 ap_enable_reg_pp5_iter13 = 1'b0;
#0 ap_enable_reg_pp5_iter14 = 1'b0;
#0 ap_enable_reg_pp5_iter15 = 1'b0;
#0 ap_enable_reg_pp5_iter16 = 1'b0;
#0 ap_enable_reg_pp5_iter17 = 1'b0;
#0 ap_enable_reg_pp5_iter18 = 1'b0;
#0 ap_enable_reg_pp5_iter19 = 1'b0;
#0 ap_enable_reg_pp5_iter20 = 1'b0;
#0 ap_enable_reg_pp5_iter21 = 1'b0;
#0 ap_enable_reg_pp5_iter22 = 1'b0;
#0 ap_enable_reg_pp5_iter23 = 1'b0;
#0 ap_enable_reg_pp5_iter24 = 1'b0;
#0 ap_enable_reg_pp5_iter25 = 1'b0;
#0 ap_enable_reg_pp5_iter26 = 1'b0;
#0 ap_enable_reg_pp5_iter27 = 1'b0;
#0 ap_enable_reg_pp5_iter28 = 1'b0;
#0 ap_enable_reg_pp5_iter29 = 1'b0;
#0 ap_enable_reg_pp5_iter30 = 1'b0;
#0 ap_enable_reg_pp5_iter31 = 1'b0;
#0 ap_enable_reg_pp5_iter32 = 1'b0;
#0 ap_enable_reg_pp5_iter33 = 1'b0;
#0 ap_enable_reg_pp5_iter34 = 1'b0;
#0 ap_enable_reg_pp5_iter35 = 1'b0;
#0 ap_enable_reg_pp5_iter36 = 1'b0;
#0 ap_enable_reg_pp5_iter37 = 1'b0;
#0 ap_enable_reg_pp5_iter38 = 1'b0;
#0 ap_enable_reg_pp5_iter39 = 1'b0;
#0 ap_enable_reg_pp5_iter40 = 1'b0;
#0 ap_enable_reg_pp5_iter41 = 1'b0;
#0 ap_enable_reg_pp5_iter42 = 1'b0;
#0 ap_enable_reg_pp5_iter43 = 1'b0;
#0 ap_enable_reg_pp5_iter44 = 1'b0;
#0 ap_enable_reg_pp5_iter45 = 1'b0;
#0 ap_enable_reg_pp5_iter46 = 1'b0;
#0 ap_enable_reg_pp5_iter47 = 1'b0;
#0 ap_enable_reg_pp5_iter48 = 1'b0;
#0 ap_enable_reg_pp5_iter49 = 1'b0;
#0 ap_enable_reg_pp5_iter50 = 1'b0;
#0 ap_enable_reg_pp5_iter51 = 1'b0;
#0 ap_enable_reg_pp5_iter52 = 1'b0;
#0 ap_enable_reg_pp5_iter53 = 1'b0;
#0 ap_enable_reg_pp5_iter54 = 1'b0;
#0 ap_enable_reg_pp5_iter55 = 1'b0;
#0 ap_enable_reg_pp5_iter56 = 1'b0;
#0 ap_enable_reg_pp5_iter57 = 1'b0;
#0 ap_enable_reg_pp5_iter58 = 1'b0;
#0 ap_enable_reg_pp5_iter59 = 1'b0;
#0 ap_enable_reg_pp5_iter60 = 1'b0;
#0 ap_enable_reg_pp5_iter61 = 1'b0;
#0 ap_enable_reg_pp5_iter62 = 1'b0;
#0 ap_enable_reg_pp5_iter63 = 1'b0;
#0 ap_enable_reg_pp5_iter64 = 1'b0;
#0 ap_enable_reg_pp5_iter65 = 1'b0;
#0 ap_enable_reg_pp5_iter66 = 1'b0;
#0 ap_enable_reg_pp5_iter67 = 1'b0;
#0 ap_enable_reg_pp5_iter68 = 1'b0;
#0 ap_enable_reg_pp5_iter69 = 1'b0;
#0 grp_getrf_core_double_2_4_2_s_fu_570_ap_start_reg = 1'b0;
#0 grp_trisolver_U_double_4_2_s_fu_588_ap_start_reg = 1'b0;
#0 grp_trisolver_L_double_4_2_s_fu_602_ap_start_reg = 1'b0;
end

kernel_gelinearsolver_0_gelinearsolver_double_4_2_s_matA_1 #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
matA_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(matA_1_address0),
    .ce0(matA_1_ce0),
    .we0(matA_1_we0),
    .d0(matA_1_d0),
    .q0(matA_1_q0),
    .address1(grp_getrf_core_double_2_4_2_s_fu_570_matA_1_address1),
    .ce1(matA_1_ce1),
    .we1(matA_1_we1),
    .d1(grp_getrf_core_double_2_4_2_s_fu_570_matA_1_d1),
    .q1(matA_1_q1)
);

kernel_gelinearsolver_0_gelinearsolver_double_4_2_s_matA_1 #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
matA_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(matA_0_address0),
    .ce0(matA_0_ce0),
    .we0(matA_0_we0),
    .d0(matA_0_d0),
    .q0(matA_0_q0),
    .address1(grp_getrf_core_double_2_4_2_s_fu_570_matA_0_address1),
    .ce1(matA_0_ce1),
    .we1(matA_0_we1),
    .d1(grp_getrf_core_double_2_4_2_s_fu_570_matA_0_d1),
    .q1(matA_0_q1)
);

kernel_gelinearsolver_0_gelinearsolver_double_4_2_s_buf_i #(
    .DataWidth( 64 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
buf_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_i_address0),
    .ce0(buf_i_ce0),
    .we0(buf_i_we0),
    .d0(buf_i_d0),
    .q0(buf_i_q0),
    .address1(grp_trisolver_U_double_4_2_s_fu_588_dataB_address1),
    .ce1(buf_i_ce1),
    .we1(buf_i_we1),
    .d1(grp_trisolver_U_double_4_2_s_fu_588_dataB_d1),
    .q1(buf_i_q1)
);

kernel_gelinearsolver_0_gelinearsolver_double_4_2_s_buf_i #(
    .DataWidth( 64 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
dataC_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dataC_address0),
    .ce0(dataC_ce0),
    .we0(dataC_we0),
    .d0(dataC_d0),
    .q0(dataC_q0),
    .address1(grp_trisolver_L_double_4_2_s_fu_602_dataB_address1),
    .ce1(dataC_ce1),
    .we1(dataC_we1),
    .d1(grp_trisolver_L_double_4_2_s_fu_602_dataB_d1),
    .q1(dataC_q1)
);

kernel_gelinearsolver_0_getrf_core_double_2_4_2_s grp_getrf_core_double_2_4_2_s_fu_570(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_getrf_core_double_2_4_2_s_fu_570_ap_start),
    .ap_done(grp_getrf_core_double_2_4_2_s_fu_570_ap_done),
    .ap_idle(grp_getrf_core_double_2_4_2_s_fu_570_ap_idle),
    .ap_ready(grp_getrf_core_double_2_4_2_s_fu_570_ap_ready),
    .m(n),
    .n(n),
    .p_read(grp_getrf_core_double_2_4_2_s_fu_570_p_read),
    .p_read1(grp_getrf_core_double_2_4_2_s_fu_570_p_read1),
    .p_read2(grp_getrf_core_double_2_4_2_s_fu_570_p_read2),
    .p_read3(grp_getrf_core_double_2_4_2_s_fu_570_p_read3),
    .matA_1_address0(grp_getrf_core_double_2_4_2_s_fu_570_matA_1_address0),
    .matA_1_ce0(grp_getrf_core_double_2_4_2_s_fu_570_matA_1_ce0),
    .matA_1_we0(grp_getrf_core_double_2_4_2_s_fu_570_matA_1_we0),
    .matA_1_d0(grp_getrf_core_double_2_4_2_s_fu_570_matA_1_d0),
    .matA_1_q0(matA_1_q0),
    .matA_1_address1(grp_getrf_core_double_2_4_2_s_fu_570_matA_1_address1),
    .matA_1_ce1(grp_getrf_core_double_2_4_2_s_fu_570_matA_1_ce1),
    .matA_1_we1(grp_getrf_core_double_2_4_2_s_fu_570_matA_1_we1),
    .matA_1_d1(grp_getrf_core_double_2_4_2_s_fu_570_matA_1_d1),
    .matA_1_q1(matA_1_q1),
    .matA_0_address0(grp_getrf_core_double_2_4_2_s_fu_570_matA_0_address0),
    .matA_0_ce0(grp_getrf_core_double_2_4_2_s_fu_570_matA_0_ce0),
    .matA_0_we0(grp_getrf_core_double_2_4_2_s_fu_570_matA_0_we0),
    .matA_0_d0(grp_getrf_core_double_2_4_2_s_fu_570_matA_0_d0),
    .matA_0_q0(matA_0_q0),
    .matA_0_address1(grp_getrf_core_double_2_4_2_s_fu_570_matA_0_address1),
    .matA_0_ce1(grp_getrf_core_double_2_4_2_s_fu_570_matA_0_ce1),
    .matA_0_we1(grp_getrf_core_double_2_4_2_s_fu_570_matA_0_we1),
    .matA_0_d1(grp_getrf_core_double_2_4_2_s_fu_570_matA_0_d1),
    .matA_0_q1(matA_0_q1),
    .ap_return_0(grp_getrf_core_double_2_4_2_s_fu_570_ap_return_0),
    .ap_return_1(grp_getrf_core_double_2_4_2_s_fu_570_ap_return_1),
    .ap_return_2(grp_getrf_core_double_2_4_2_s_fu_570_ap_return_2),
    .ap_return_3(grp_getrf_core_double_2_4_2_s_fu_570_ap_return_3)
);

kernel_gelinearsolver_0_trisolver_U_double_4_2_s grp_trisolver_U_double_4_2_s_fu_588(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_trisolver_U_double_4_2_s_fu_588_ap_start),
    .ap_done(grp_trisolver_U_double_4_2_s_fu_588_ap_done),
    .ap_idle(grp_trisolver_U_double_4_2_s_fu_588_ap_idle),
    .ap_ready(grp_trisolver_U_double_4_2_s_fu_588_ap_ready),
    .n(n),
    .dataB_address0(grp_trisolver_U_double_4_2_s_fu_588_dataB_address0),
    .dataB_ce0(grp_trisolver_U_double_4_2_s_fu_588_dataB_ce0),
    .dataB_we0(grp_trisolver_U_double_4_2_s_fu_588_dataB_we0),
    .dataB_d0(grp_trisolver_U_double_4_2_s_fu_588_dataB_d0),
    .dataB_q0(buf_i_q0),
    .dataB_address1(grp_trisolver_U_double_4_2_s_fu_588_dataB_address1),
    .dataB_ce1(grp_trisolver_U_double_4_2_s_fu_588_dataB_ce1),
    .dataB_we1(grp_trisolver_U_double_4_2_s_fu_588_dataB_we1),
    .dataB_d1(grp_trisolver_U_double_4_2_s_fu_588_dataB_d1),
    .dataB_q1(buf_i_q1),
    .p_read(buf_o_0_1_fu_172),
    .p_read1(buf_o_1_1_fu_176),
    .p_read2(buf_o_2_1_fu_180),
    .p_read3(buf_o_3_1_fu_184),
    .matA_1_address0(grp_trisolver_U_double_4_2_s_fu_588_matA_1_address0),
    .matA_1_ce0(grp_trisolver_U_double_4_2_s_fu_588_matA_1_ce0),
    .matA_1_q0(matA_1_q0),
    .matA_0_address0(grp_trisolver_U_double_4_2_s_fu_588_matA_0_address0),
    .matA_0_ce0(grp_trisolver_U_double_4_2_s_fu_588_matA_0_ce0),
    .matA_0_q0(matA_0_q0),
    .ap_return_0(grp_trisolver_U_double_4_2_s_fu_588_ap_return_0),
    .ap_return_1(grp_trisolver_U_double_4_2_s_fu_588_ap_return_1),
    .ap_return_2(grp_trisolver_U_double_4_2_s_fu_588_ap_return_2),
    .ap_return_3(grp_trisolver_U_double_4_2_s_fu_588_ap_return_3)
);

kernel_gelinearsolver_0_trisolver_L_double_4_2_s grp_trisolver_L_double_4_2_s_fu_602(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_trisolver_L_double_4_2_s_fu_602_ap_start),
    .ap_done(grp_trisolver_L_double_4_2_s_fu_602_ap_done),
    .ap_idle(grp_trisolver_L_double_4_2_s_fu_602_ap_idle),
    .ap_ready(grp_trisolver_L_double_4_2_s_fu_602_ap_ready),
    .n(n),
    .dataB_address0(grp_trisolver_L_double_4_2_s_fu_602_dataB_address0),
    .dataB_ce0(grp_trisolver_L_double_4_2_s_fu_602_dataB_ce0),
    .dataB_we0(grp_trisolver_L_double_4_2_s_fu_602_dataB_we0),
    .dataB_d0(grp_trisolver_L_double_4_2_s_fu_602_dataB_d0),
    .dataB_q0(dataC_q0),
    .dataB_address1(grp_trisolver_L_double_4_2_s_fu_602_dataB_address1),
    .dataB_ce1(grp_trisolver_L_double_4_2_s_fu_602_dataB_ce1),
    .dataB_we1(grp_trisolver_L_double_4_2_s_fu_602_dataB_we1),
    .dataB_d1(grp_trisolver_L_double_4_2_s_fu_602_dataB_d1),
    .dataB_q1(dataC_q1),
    .p_read1(buf_1_1_fu_160),
    .p_read2(buf_2_1_fu_164),
    .p_read3(buf_3_1_fu_168),
    .matA_0_address0(grp_trisolver_L_double_4_2_s_fu_602_matA_0_address0),
    .matA_0_ce0(grp_trisolver_L_double_4_2_s_fu_602_matA_0_ce0),
    .matA_0_q0(matA_0_q0),
    .matA_1_address0(grp_trisolver_L_double_4_2_s_fu_602_matA_1_address0),
    .matA_1_ce0(grp_trisolver_L_double_4_2_s_fu_602_matA_1_ce0),
    .matA_1_q0(matA_1_q0),
    .ap_return_0(grp_trisolver_L_double_4_2_s_fu_602_ap_return_0),
    .ap_return_1(grp_trisolver_L_double_4_2_s_fu_602_ap_return_1),
    .ap_return_2(grp_trisolver_L_double_4_2_s_fu_602_ap_return_2),
    .ap_return_3(grp_trisolver_L_double_4_2_s_fu_602_ap_return_3)
);

kernel_gelinearsolver_0_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_635_p0),
    .din1(grp_fu_635_p1),
    .ce(1'b1),
    .dout(grp_fu_635_p2)
);

kernel_gelinearsolver_0_mul_31ns_32ns_61_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_31ns_32ns_61_2_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_850_p0),
    .din1(grp_fu_850_p1),
    .ce(grp_fu_850_ce),
    .dout(grp_fu_850_p2)
);

kernel_gelinearsolver_0_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U62(
    .din0(P_0_2_reg_1746),
    .din1(P_1_4_reg_1752),
    .din2(P_2_4_reg_1758),
    .din3(P_3_4_reg_1764),
    .din4(tmp_7_fu_1010_p5),
    .dout(tmp_7_fu_1010_p6)
);

kernel_gelinearsolver_0_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U63(
    .din0(buf_0_reg_1824),
    .din1(buf_1_reg_1829),
    .din2(buf_2_reg_1834),
    .din3(buf_3_reg_1839),
    .din4(tmp_9_fu_1271_p5),
    .dout(tmp_9_fu_1271_p6)
);

kernel_gelinearsolver_0_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U64(
    .din0(buf_o_0_reg_1901),
    .din1(buf_o_1_reg_1906),
    .din2(buf_o_2_reg_1911),
    .din3(buf_o_3_reg_1916),
    .din4(dataX_0_fu_1358_p5),
    .dout(dataX_0_fu_1358_p6)
);

kernel_gelinearsolver_0_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U65(
    .din0(dataX_3_3_fu_200),
    .din1(dataX_3_2_fu_196),
    .din2(dataX_3_1_fu_192),
    .din3(dataX_3_fu_188),
    .din4(trunc_ln170_1_reg_1946),
    .dout(tmp_s_fu_1447_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln152_fu_665_p2 == 1'd0) & (icmp_ln154_reg_1601 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end else if (((icmp_ln152_fu_665_p2 == 1'd0) & (icmp_ln154_reg_1601 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter37 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state85) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_getrf_core_double_2_4_2_s_fu_570_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state85) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state85);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((grp_getrf_core_double_2_4_2_s_fu_570_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state89) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((grp_trisolver_L_double_4_2_s_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state89) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state89);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((grp_trisolver_L_double_4_2_s_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state95) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state94)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state95)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state95);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter10 <= ap_enable_reg_pp5_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter11 <= ap_enable_reg_pp5_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter12 <= ap_enable_reg_pp5_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter13 <= ap_enable_reg_pp5_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter14 <= ap_enable_reg_pp5_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter15 <= ap_enable_reg_pp5_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter16 <= ap_enable_reg_pp5_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter17 <= ap_enable_reg_pp5_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter18 <= ap_enable_reg_pp5_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter19 <= ap_enable_reg_pp5_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter20 <= ap_enable_reg_pp5_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter21 <= ap_enable_reg_pp5_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter22 <= ap_enable_reg_pp5_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter23 <= ap_enable_reg_pp5_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter24 <= ap_enable_reg_pp5_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter25 <= ap_enable_reg_pp5_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter26 <= ap_enable_reg_pp5_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter27 <= ap_enable_reg_pp5_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter28 <= ap_enable_reg_pp5_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter29 <= ap_enable_reg_pp5_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter30 <= ap_enable_reg_pp5_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter31 <= ap_enable_reg_pp5_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter32 <= ap_enable_reg_pp5_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter33 <= ap_enable_reg_pp5_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter34 <= ap_enable_reg_pp5_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter35 <= ap_enable_reg_pp5_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter36 <= ap_enable_reg_pp5_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter37 <= ap_enable_reg_pp5_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter38 <= ap_enable_reg_pp5_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter39 <= ap_enable_reg_pp5_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter40 <= ap_enable_reg_pp5_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter41 <= ap_enable_reg_pp5_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter42 <= ap_enable_reg_pp5_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter43 <= ap_enable_reg_pp5_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter44 <= ap_enable_reg_pp5_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter45 <= ap_enable_reg_pp5_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter46 <= ap_enable_reg_pp5_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter47 <= ap_enable_reg_pp5_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter48 <= ap_enable_reg_pp5_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter49 <= ap_enable_reg_pp5_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter50 <= ap_enable_reg_pp5_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter51 <= ap_enable_reg_pp5_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter52 <= ap_enable_reg_pp5_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter53 <= ap_enable_reg_pp5_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter54 <= ap_enable_reg_pp5_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter55 <= ap_enable_reg_pp5_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter56 <= ap_enable_reg_pp5_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter57 <= ap_enable_reg_pp5_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter58 <= ap_enable_reg_pp5_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter59 <= ap_enable_reg_pp5_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter60 <= ap_enable_reg_pp5_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter61 <= ap_enable_reg_pp5_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter62 <= ap_enable_reg_pp5_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter63 <= ap_enable_reg_pp5_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter64 <= ap_enable_reg_pp5_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter65 <= ap_enable_reg_pp5_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter66 <= ap_enable_reg_pp5_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter67 <= ap_enable_reg_pp5_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter68 <= ap_enable_reg_pp5_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter69 <= ap_enable_reg_pp5_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter70 <= ap_enable_reg_pp5_iter69;
        end else if ((1'b1 == ap_CS_fsm_state94)) begin
            ap_enable_reg_pp5_iter70 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter8 <= ap_enable_reg_pp5_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter9 <= ap_enable_reg_pp5_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_getrf_core_double_2_4_2_s_fu_570_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state83) | ((icmp_ln152_fu_665_p2 == 1'd0) & (icmp_ln154_reg_1601 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_getrf_core_double_2_4_2_s_fu_570_ap_start_reg <= 1'b1;
        end else if ((grp_getrf_core_double_2_4_2_s_fu_570_ap_ready == 1'b1)) begin
            grp_getrf_core_double_2_4_2_s_fu_570_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_trisolver_L_double_4_2_s_fu_602_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            grp_trisolver_L_double_4_2_s_fu_602_ap_start_reg <= 1'b1;
        end else if ((grp_trisolver_L_double_4_2_s_fu_602_ap_ready == 1'b1)) begin
            grp_trisolver_L_double_4_2_s_fu_602_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_trisolver_U_double_4_2_s_fu_588_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state91)) begin
            grp_trisolver_U_double_4_2_s_fu_588_ap_start_reg <= 1'b1;
        end else if ((grp_trisolver_U_double_4_2_s_fu_588_ap_ready == 1'b1)) begin
            grp_trisolver_U_double_4_2_s_fu_588_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        P_0_1_reg_411 <= P_0_3_load_reg_1615;
    end else if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln75_fu_960_p2 == 1'd0))) begin
        P_0_1_reg_411 <= ap_phi_mux_P_0_231_phi_fu_490_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_reg_1601 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        P_0_3_fu_204 <= P_0_2_reg_1746;
    end else if (((grp_getrf_core_double_2_4_2_s_fu_570_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        P_0_3_fu_204 <= grp_getrf_core_double_2_4_2_s_fu_570_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        P_0_5_reg_421 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln75_fu_960_p2 == 1'd0))) begin
        P_0_5_reg_421 <= add_ln75_fu_965_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        P_1_1_reg_401 <= P_1_3_load_reg_1621;
    end else if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln75_fu_960_p2 == 1'd0))) begin
        P_1_1_reg_401 <= ap_phi_mux_P_1_2_phi_fu_472_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_reg_1601 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        P_1_3_fu_208 <= P_1_4_reg_1752;
    end else if (((grp_getrf_core_double_2_4_2_s_fu_570_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        P_1_3_fu_208 <= grp_getrf_core_double_2_4_2_s_fu_570_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        P_2_1_reg_391 <= P_2_3_load_reg_1627;
    end else if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln75_fu_960_p2 == 1'd0))) begin
        P_2_1_reg_391 <= ap_phi_mux_P_2_2_phi_fu_454_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_reg_1601 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        P_2_3_fu_212 <= P_2_4_reg_1758;
    end else if (((grp_getrf_core_double_2_4_2_s_fu_570_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        P_2_3_fu_212 <= grp_getrf_core_double_2_4_2_s_fu_570_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        P_3_1_reg_381 <= P_3_3_load_reg_1633;
    end else if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln75_fu_960_p2 == 1'd0))) begin
        P_3_1_reg_381 <= ap_phi_mux_P_3_2_phi_fu_436_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_reg_1601 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        P_3_3_fu_216 <= P_3_4_reg_1764;
    end else if (((grp_getrf_core_double_2_4_2_s_fu_570_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        P_3_3_fu_216 <= grp_getrf_core_double_2_4_2_s_fu_570_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        c_reg_370 <= add_ln155_reg_1708;
    end else if (((icmp_ln152_fu_665_p2 == 1'd0) & (icmp_ln154_reg_1601 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        c_reg_370 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_reg_1844 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        i_4_reg_526 <= select_ln87_1_reg_1859;
    end else if (((grp_trisolver_L_double_4_2_s_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
        i_4_reg_526 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) & (icmp_ln100_fu_1342_p2 == 1'd0))) begin
        i_5_reg_548 <= add_ln100_fu_1348_p2;
    end else if (((grp_trisolver_U_double_4_2_s_fu_588_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state92))) begin
        i_5_reg_548 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_getrf_core_double_2_4_2_s_fu_570_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
        i_reg_504 <= 31'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln113_fu_995_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_reg_504 <= add_ln113_fu_1000_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln87_fu_1177_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten25_reg_515 <= add_ln87_1_fu_1183_p2;
    end else if (((grp_trisolver_L_double_4_2_s_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
        indvar_flatten25_reg_515 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_348 <= add_ln154_2_reg_1658;
    end else if (((icmp_ln152_fu_665_p2 == 1'd0) & (icmp_ln154_reg_1601 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten_reg_348 <= 62'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        j_reg_336 <= add_ln152_reg_1643;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        j_reg_336 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln87_fu_1177_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        k_reg_537 <= add_ln88_fu_1225_p2;
    end else if (((grp_trisolver_L_double_4_2_s_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
        k_reg_537 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        r_4_reg_559 <= 32'd0;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln168_fu_1392_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        r_4_reg_559 <= add_ln168_fu_1397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        r_reg_359 <= select_ln154_1_reg_1669;
    end else if (((icmp_ln152_fu_665_p2 == 1'd0) & (icmp_ln154_reg_1601 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r_reg_359 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_getrf_core_double_2_4_2_s_fu_570_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
        P_0_2_reg_1746 <= grp_getrf_core_double_2_4_2_s_fu_570_ap_return_0;
        P_1_4_reg_1752 <= grp_getrf_core_double_2_4_2_s_fu_570_ap_return_1;
        P_2_4_reg_1758 <= grp_getrf_core_double_2_4_2_s_fu_570_ap_return_2;
        P_3_4_reg_1764 <= grp_getrf_core_double_2_4_2_s_fu_570_ap_return_3;
        matB_0_0_load_reg_1780 <= matB_0_0;
        matB_0_1_load_reg_1785 <= matB_0_1;
        matB_1_0_load_reg_1770 <= matB_1_0;
        matB_1_1_load_reg_1775 <= matB_1_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        P_0_3_load_reg_1615 <= P_0_3_fu_204;
        P_1_3_load_reg_1621 <= P_1_3_fu_208;
        P_2_3_load_reg_1627 <= P_2_3_fu_212;
        P_3_3_load_reg_1633 <= P_3_3_fu_216;
        add_ln152_reg_1643 <= add_ln152_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_995_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln115_reg_1804 <= add_ln115_fu_1108_p2;
        select_ln115_3_reg_1799 <= select_ln115_3_fu_1078_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln154_2_reg_1658 <= add_ln154_2_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln154_1_reg_1654 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln155_reg_1708 <= add_ln155_fu_865_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_1_fu_742_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln158_1_reg_1688 <= add_ln158_1_fu_835_p2;
        icmp_ln159_reg_1693 <= icmp_ln159_fu_841_p2;
        select_ln154_2_reg_1683 <= select_ln154_2_fu_823_p3;
        select_ln154_reg_1663 <= select_ln154_fu_759_p3;
        tmp_10_reg_1675 <= select_ln154_1_fu_767_p3[32'd1];
        trunc_ln154_reg_1679 <= trunc_ln154_fu_809_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln158_1_reg_1688_pp0_iter10_reg <= add_ln158_1_reg_1688_pp0_iter9_reg;
        add_ln158_1_reg_1688_pp0_iter11_reg <= add_ln158_1_reg_1688_pp0_iter10_reg;
        add_ln158_1_reg_1688_pp0_iter12_reg <= add_ln158_1_reg_1688_pp0_iter11_reg;
        add_ln158_1_reg_1688_pp0_iter13_reg <= add_ln158_1_reg_1688_pp0_iter12_reg;
        add_ln158_1_reg_1688_pp0_iter14_reg <= add_ln158_1_reg_1688_pp0_iter13_reg;
        add_ln158_1_reg_1688_pp0_iter15_reg <= add_ln158_1_reg_1688_pp0_iter14_reg;
        add_ln158_1_reg_1688_pp0_iter16_reg <= add_ln158_1_reg_1688_pp0_iter15_reg;
        add_ln158_1_reg_1688_pp0_iter17_reg <= add_ln158_1_reg_1688_pp0_iter16_reg;
        add_ln158_1_reg_1688_pp0_iter18_reg <= add_ln158_1_reg_1688_pp0_iter17_reg;
        add_ln158_1_reg_1688_pp0_iter19_reg <= add_ln158_1_reg_1688_pp0_iter18_reg;
        add_ln158_1_reg_1688_pp0_iter1_reg <= add_ln158_1_reg_1688;
        add_ln158_1_reg_1688_pp0_iter20_reg <= add_ln158_1_reg_1688_pp0_iter19_reg;
        add_ln158_1_reg_1688_pp0_iter21_reg <= add_ln158_1_reg_1688_pp0_iter20_reg;
        add_ln158_1_reg_1688_pp0_iter22_reg <= add_ln158_1_reg_1688_pp0_iter21_reg;
        add_ln158_1_reg_1688_pp0_iter23_reg <= add_ln158_1_reg_1688_pp0_iter22_reg;
        add_ln158_1_reg_1688_pp0_iter24_reg <= add_ln158_1_reg_1688_pp0_iter23_reg;
        add_ln158_1_reg_1688_pp0_iter25_reg <= add_ln158_1_reg_1688_pp0_iter24_reg;
        add_ln158_1_reg_1688_pp0_iter26_reg <= add_ln158_1_reg_1688_pp0_iter25_reg;
        add_ln158_1_reg_1688_pp0_iter27_reg <= add_ln158_1_reg_1688_pp0_iter26_reg;
        add_ln158_1_reg_1688_pp0_iter28_reg <= add_ln158_1_reg_1688_pp0_iter27_reg;
        add_ln158_1_reg_1688_pp0_iter29_reg <= add_ln158_1_reg_1688_pp0_iter28_reg;
        add_ln158_1_reg_1688_pp0_iter2_reg <= add_ln158_1_reg_1688_pp0_iter1_reg;
        add_ln158_1_reg_1688_pp0_iter30_reg <= add_ln158_1_reg_1688_pp0_iter29_reg;
        add_ln158_1_reg_1688_pp0_iter31_reg <= add_ln158_1_reg_1688_pp0_iter30_reg;
        add_ln158_1_reg_1688_pp0_iter32_reg <= add_ln158_1_reg_1688_pp0_iter31_reg;
        add_ln158_1_reg_1688_pp0_iter33_reg <= add_ln158_1_reg_1688_pp0_iter32_reg;
        add_ln158_1_reg_1688_pp0_iter34_reg <= add_ln158_1_reg_1688_pp0_iter33_reg;
        add_ln158_1_reg_1688_pp0_iter35_reg <= add_ln158_1_reg_1688_pp0_iter34_reg;
        add_ln158_1_reg_1688_pp0_iter36_reg <= add_ln158_1_reg_1688_pp0_iter35_reg;
        add_ln158_1_reg_1688_pp0_iter37_reg <= add_ln158_1_reg_1688_pp0_iter36_reg;
        add_ln158_1_reg_1688_pp0_iter3_reg <= add_ln158_1_reg_1688_pp0_iter2_reg;
        add_ln158_1_reg_1688_pp0_iter4_reg <= add_ln158_1_reg_1688_pp0_iter3_reg;
        add_ln158_1_reg_1688_pp0_iter5_reg <= add_ln158_1_reg_1688_pp0_iter4_reg;
        add_ln158_1_reg_1688_pp0_iter6_reg <= add_ln158_1_reg_1688_pp0_iter5_reg;
        add_ln158_1_reg_1688_pp0_iter7_reg <= add_ln158_1_reg_1688_pp0_iter6_reg;
        add_ln158_1_reg_1688_pp0_iter8_reg <= add_ln158_1_reg_1688_pp0_iter7_reg;
        add_ln158_1_reg_1688_pp0_iter9_reg <= add_ln158_1_reg_1688_pp0_iter8_reg;
        icmp_ln154_1_reg_1654 <= icmp_ln154_1_fu_742_p2;
        icmp_ln154_1_reg_1654_pp0_iter10_reg <= icmp_ln154_1_reg_1654_pp0_iter9_reg;
        icmp_ln154_1_reg_1654_pp0_iter11_reg <= icmp_ln154_1_reg_1654_pp0_iter10_reg;
        icmp_ln154_1_reg_1654_pp0_iter12_reg <= icmp_ln154_1_reg_1654_pp0_iter11_reg;
        icmp_ln154_1_reg_1654_pp0_iter13_reg <= icmp_ln154_1_reg_1654_pp0_iter12_reg;
        icmp_ln154_1_reg_1654_pp0_iter14_reg <= icmp_ln154_1_reg_1654_pp0_iter13_reg;
        icmp_ln154_1_reg_1654_pp0_iter15_reg <= icmp_ln154_1_reg_1654_pp0_iter14_reg;
        icmp_ln154_1_reg_1654_pp0_iter16_reg <= icmp_ln154_1_reg_1654_pp0_iter15_reg;
        icmp_ln154_1_reg_1654_pp0_iter17_reg <= icmp_ln154_1_reg_1654_pp0_iter16_reg;
        icmp_ln154_1_reg_1654_pp0_iter18_reg <= icmp_ln154_1_reg_1654_pp0_iter17_reg;
        icmp_ln154_1_reg_1654_pp0_iter19_reg <= icmp_ln154_1_reg_1654_pp0_iter18_reg;
        icmp_ln154_1_reg_1654_pp0_iter1_reg <= icmp_ln154_1_reg_1654;
        icmp_ln154_1_reg_1654_pp0_iter20_reg <= icmp_ln154_1_reg_1654_pp0_iter19_reg;
        icmp_ln154_1_reg_1654_pp0_iter21_reg <= icmp_ln154_1_reg_1654_pp0_iter20_reg;
        icmp_ln154_1_reg_1654_pp0_iter22_reg <= icmp_ln154_1_reg_1654_pp0_iter21_reg;
        icmp_ln154_1_reg_1654_pp0_iter23_reg <= icmp_ln154_1_reg_1654_pp0_iter22_reg;
        icmp_ln154_1_reg_1654_pp0_iter24_reg <= icmp_ln154_1_reg_1654_pp0_iter23_reg;
        icmp_ln154_1_reg_1654_pp0_iter25_reg <= icmp_ln154_1_reg_1654_pp0_iter24_reg;
        icmp_ln154_1_reg_1654_pp0_iter26_reg <= icmp_ln154_1_reg_1654_pp0_iter25_reg;
        icmp_ln154_1_reg_1654_pp0_iter27_reg <= icmp_ln154_1_reg_1654_pp0_iter26_reg;
        icmp_ln154_1_reg_1654_pp0_iter28_reg <= icmp_ln154_1_reg_1654_pp0_iter27_reg;
        icmp_ln154_1_reg_1654_pp0_iter29_reg <= icmp_ln154_1_reg_1654_pp0_iter28_reg;
        icmp_ln154_1_reg_1654_pp0_iter2_reg <= icmp_ln154_1_reg_1654_pp0_iter1_reg;
        icmp_ln154_1_reg_1654_pp0_iter30_reg <= icmp_ln154_1_reg_1654_pp0_iter29_reg;
        icmp_ln154_1_reg_1654_pp0_iter31_reg <= icmp_ln154_1_reg_1654_pp0_iter30_reg;
        icmp_ln154_1_reg_1654_pp0_iter32_reg <= icmp_ln154_1_reg_1654_pp0_iter31_reg;
        icmp_ln154_1_reg_1654_pp0_iter33_reg <= icmp_ln154_1_reg_1654_pp0_iter32_reg;
        icmp_ln154_1_reg_1654_pp0_iter34_reg <= icmp_ln154_1_reg_1654_pp0_iter33_reg;
        icmp_ln154_1_reg_1654_pp0_iter35_reg <= icmp_ln154_1_reg_1654_pp0_iter34_reg;
        icmp_ln154_1_reg_1654_pp0_iter36_reg <= icmp_ln154_1_reg_1654_pp0_iter35_reg;
        icmp_ln154_1_reg_1654_pp0_iter3_reg <= icmp_ln154_1_reg_1654_pp0_iter2_reg;
        icmp_ln154_1_reg_1654_pp0_iter4_reg <= icmp_ln154_1_reg_1654_pp0_iter3_reg;
        icmp_ln154_1_reg_1654_pp0_iter5_reg <= icmp_ln154_1_reg_1654_pp0_iter4_reg;
        icmp_ln154_1_reg_1654_pp0_iter6_reg <= icmp_ln154_1_reg_1654_pp0_iter5_reg;
        icmp_ln154_1_reg_1654_pp0_iter7_reg <= icmp_ln154_1_reg_1654_pp0_iter6_reg;
        icmp_ln154_1_reg_1654_pp0_iter8_reg <= icmp_ln154_1_reg_1654_pp0_iter7_reg;
        icmp_ln154_1_reg_1654_pp0_iter9_reg <= icmp_ln154_1_reg_1654_pp0_iter8_reg;
        icmp_ln159_reg_1693_pp0_iter10_reg <= icmp_ln159_reg_1693_pp0_iter9_reg;
        icmp_ln159_reg_1693_pp0_iter11_reg <= icmp_ln159_reg_1693_pp0_iter10_reg;
        icmp_ln159_reg_1693_pp0_iter12_reg <= icmp_ln159_reg_1693_pp0_iter11_reg;
        icmp_ln159_reg_1693_pp0_iter13_reg <= icmp_ln159_reg_1693_pp0_iter12_reg;
        icmp_ln159_reg_1693_pp0_iter14_reg <= icmp_ln159_reg_1693_pp0_iter13_reg;
        icmp_ln159_reg_1693_pp0_iter15_reg <= icmp_ln159_reg_1693_pp0_iter14_reg;
        icmp_ln159_reg_1693_pp0_iter16_reg <= icmp_ln159_reg_1693_pp0_iter15_reg;
        icmp_ln159_reg_1693_pp0_iter17_reg <= icmp_ln159_reg_1693_pp0_iter16_reg;
        icmp_ln159_reg_1693_pp0_iter18_reg <= icmp_ln159_reg_1693_pp0_iter17_reg;
        icmp_ln159_reg_1693_pp0_iter19_reg <= icmp_ln159_reg_1693_pp0_iter18_reg;
        icmp_ln159_reg_1693_pp0_iter1_reg <= icmp_ln159_reg_1693;
        icmp_ln159_reg_1693_pp0_iter20_reg <= icmp_ln159_reg_1693_pp0_iter19_reg;
        icmp_ln159_reg_1693_pp0_iter21_reg <= icmp_ln159_reg_1693_pp0_iter20_reg;
        icmp_ln159_reg_1693_pp0_iter22_reg <= icmp_ln159_reg_1693_pp0_iter21_reg;
        icmp_ln159_reg_1693_pp0_iter23_reg <= icmp_ln159_reg_1693_pp0_iter22_reg;
        icmp_ln159_reg_1693_pp0_iter24_reg <= icmp_ln159_reg_1693_pp0_iter23_reg;
        icmp_ln159_reg_1693_pp0_iter25_reg <= icmp_ln159_reg_1693_pp0_iter24_reg;
        icmp_ln159_reg_1693_pp0_iter26_reg <= icmp_ln159_reg_1693_pp0_iter25_reg;
        icmp_ln159_reg_1693_pp0_iter27_reg <= icmp_ln159_reg_1693_pp0_iter26_reg;
        icmp_ln159_reg_1693_pp0_iter28_reg <= icmp_ln159_reg_1693_pp0_iter27_reg;
        icmp_ln159_reg_1693_pp0_iter29_reg <= icmp_ln159_reg_1693_pp0_iter28_reg;
        icmp_ln159_reg_1693_pp0_iter2_reg <= icmp_ln159_reg_1693_pp0_iter1_reg;
        icmp_ln159_reg_1693_pp0_iter30_reg <= icmp_ln159_reg_1693_pp0_iter29_reg;
        icmp_ln159_reg_1693_pp0_iter31_reg <= icmp_ln159_reg_1693_pp0_iter30_reg;
        icmp_ln159_reg_1693_pp0_iter32_reg <= icmp_ln159_reg_1693_pp0_iter31_reg;
        icmp_ln159_reg_1693_pp0_iter33_reg <= icmp_ln159_reg_1693_pp0_iter32_reg;
        icmp_ln159_reg_1693_pp0_iter34_reg <= icmp_ln159_reg_1693_pp0_iter33_reg;
        icmp_ln159_reg_1693_pp0_iter35_reg <= icmp_ln159_reg_1693_pp0_iter34_reg;
        icmp_ln159_reg_1693_pp0_iter3_reg <= icmp_ln159_reg_1693_pp0_iter2_reg;
        icmp_ln159_reg_1693_pp0_iter4_reg <= icmp_ln159_reg_1693_pp0_iter3_reg;
        icmp_ln159_reg_1693_pp0_iter5_reg <= icmp_ln159_reg_1693_pp0_iter4_reg;
        icmp_ln159_reg_1693_pp0_iter6_reg <= icmp_ln159_reg_1693_pp0_iter5_reg;
        icmp_ln159_reg_1693_pp0_iter7_reg <= icmp_ln159_reg_1693_pp0_iter6_reg;
        icmp_ln159_reg_1693_pp0_iter8_reg <= icmp_ln159_reg_1693_pp0_iter7_reg;
        icmp_ln159_reg_1693_pp0_iter9_reg <= icmp_ln159_reg_1693_pp0_iter8_reg;
        select_ln154_reg_1663_pp0_iter1_reg <= select_ln154_reg_1663;
        tmp_10_reg_1675_pp0_iter10_reg <= tmp_10_reg_1675_pp0_iter9_reg;
        tmp_10_reg_1675_pp0_iter11_reg <= tmp_10_reg_1675_pp0_iter10_reg;
        tmp_10_reg_1675_pp0_iter12_reg <= tmp_10_reg_1675_pp0_iter11_reg;
        tmp_10_reg_1675_pp0_iter13_reg <= tmp_10_reg_1675_pp0_iter12_reg;
        tmp_10_reg_1675_pp0_iter14_reg <= tmp_10_reg_1675_pp0_iter13_reg;
        tmp_10_reg_1675_pp0_iter15_reg <= tmp_10_reg_1675_pp0_iter14_reg;
        tmp_10_reg_1675_pp0_iter16_reg <= tmp_10_reg_1675_pp0_iter15_reg;
        tmp_10_reg_1675_pp0_iter17_reg <= tmp_10_reg_1675_pp0_iter16_reg;
        tmp_10_reg_1675_pp0_iter18_reg <= tmp_10_reg_1675_pp0_iter17_reg;
        tmp_10_reg_1675_pp0_iter19_reg <= tmp_10_reg_1675_pp0_iter18_reg;
        tmp_10_reg_1675_pp0_iter1_reg <= tmp_10_reg_1675;
        tmp_10_reg_1675_pp0_iter20_reg <= tmp_10_reg_1675_pp0_iter19_reg;
        tmp_10_reg_1675_pp0_iter21_reg <= tmp_10_reg_1675_pp0_iter20_reg;
        tmp_10_reg_1675_pp0_iter22_reg <= tmp_10_reg_1675_pp0_iter21_reg;
        tmp_10_reg_1675_pp0_iter23_reg <= tmp_10_reg_1675_pp0_iter22_reg;
        tmp_10_reg_1675_pp0_iter24_reg <= tmp_10_reg_1675_pp0_iter23_reg;
        tmp_10_reg_1675_pp0_iter25_reg <= tmp_10_reg_1675_pp0_iter24_reg;
        tmp_10_reg_1675_pp0_iter26_reg <= tmp_10_reg_1675_pp0_iter25_reg;
        tmp_10_reg_1675_pp0_iter27_reg <= tmp_10_reg_1675_pp0_iter26_reg;
        tmp_10_reg_1675_pp0_iter28_reg <= tmp_10_reg_1675_pp0_iter27_reg;
        tmp_10_reg_1675_pp0_iter29_reg <= tmp_10_reg_1675_pp0_iter28_reg;
        tmp_10_reg_1675_pp0_iter2_reg <= tmp_10_reg_1675_pp0_iter1_reg;
        tmp_10_reg_1675_pp0_iter30_reg <= tmp_10_reg_1675_pp0_iter29_reg;
        tmp_10_reg_1675_pp0_iter31_reg <= tmp_10_reg_1675_pp0_iter30_reg;
        tmp_10_reg_1675_pp0_iter32_reg <= tmp_10_reg_1675_pp0_iter31_reg;
        tmp_10_reg_1675_pp0_iter33_reg <= tmp_10_reg_1675_pp0_iter32_reg;
        tmp_10_reg_1675_pp0_iter34_reg <= tmp_10_reg_1675_pp0_iter33_reg;
        tmp_10_reg_1675_pp0_iter35_reg <= tmp_10_reg_1675_pp0_iter34_reg;
        tmp_10_reg_1675_pp0_iter3_reg <= tmp_10_reg_1675_pp0_iter2_reg;
        tmp_10_reg_1675_pp0_iter4_reg <= tmp_10_reg_1675_pp0_iter3_reg;
        tmp_10_reg_1675_pp0_iter5_reg <= tmp_10_reg_1675_pp0_iter4_reg;
        tmp_10_reg_1675_pp0_iter6_reg <= tmp_10_reg_1675_pp0_iter5_reg;
        tmp_10_reg_1675_pp0_iter7_reg <= tmp_10_reg_1675_pp0_iter6_reg;
        tmp_10_reg_1675_pp0_iter8_reg <= tmp_10_reg_1675_pp0_iter7_reg;
        tmp_10_reg_1675_pp0_iter9_reg <= tmp_10_reg_1675_pp0_iter8_reg;
        trunc_ln154_reg_1679_pp0_iter10_reg <= trunc_ln154_reg_1679_pp0_iter9_reg;
        trunc_ln154_reg_1679_pp0_iter11_reg <= trunc_ln154_reg_1679_pp0_iter10_reg;
        trunc_ln154_reg_1679_pp0_iter12_reg <= trunc_ln154_reg_1679_pp0_iter11_reg;
        trunc_ln154_reg_1679_pp0_iter13_reg <= trunc_ln154_reg_1679_pp0_iter12_reg;
        trunc_ln154_reg_1679_pp0_iter14_reg <= trunc_ln154_reg_1679_pp0_iter13_reg;
        trunc_ln154_reg_1679_pp0_iter15_reg <= trunc_ln154_reg_1679_pp0_iter14_reg;
        trunc_ln154_reg_1679_pp0_iter16_reg <= trunc_ln154_reg_1679_pp0_iter15_reg;
        trunc_ln154_reg_1679_pp0_iter17_reg <= trunc_ln154_reg_1679_pp0_iter16_reg;
        trunc_ln154_reg_1679_pp0_iter18_reg <= trunc_ln154_reg_1679_pp0_iter17_reg;
        trunc_ln154_reg_1679_pp0_iter19_reg <= trunc_ln154_reg_1679_pp0_iter18_reg;
        trunc_ln154_reg_1679_pp0_iter1_reg <= trunc_ln154_reg_1679;
        trunc_ln154_reg_1679_pp0_iter20_reg <= trunc_ln154_reg_1679_pp0_iter19_reg;
        trunc_ln154_reg_1679_pp0_iter21_reg <= trunc_ln154_reg_1679_pp0_iter20_reg;
        trunc_ln154_reg_1679_pp0_iter22_reg <= trunc_ln154_reg_1679_pp0_iter21_reg;
        trunc_ln154_reg_1679_pp0_iter23_reg <= trunc_ln154_reg_1679_pp0_iter22_reg;
        trunc_ln154_reg_1679_pp0_iter24_reg <= trunc_ln154_reg_1679_pp0_iter23_reg;
        trunc_ln154_reg_1679_pp0_iter25_reg <= trunc_ln154_reg_1679_pp0_iter24_reg;
        trunc_ln154_reg_1679_pp0_iter26_reg <= trunc_ln154_reg_1679_pp0_iter25_reg;
        trunc_ln154_reg_1679_pp0_iter27_reg <= trunc_ln154_reg_1679_pp0_iter26_reg;
        trunc_ln154_reg_1679_pp0_iter28_reg <= trunc_ln154_reg_1679_pp0_iter27_reg;
        trunc_ln154_reg_1679_pp0_iter29_reg <= trunc_ln154_reg_1679_pp0_iter28_reg;
        trunc_ln154_reg_1679_pp0_iter2_reg <= trunc_ln154_reg_1679_pp0_iter1_reg;
        trunc_ln154_reg_1679_pp0_iter30_reg <= trunc_ln154_reg_1679_pp0_iter29_reg;
        trunc_ln154_reg_1679_pp0_iter31_reg <= trunc_ln154_reg_1679_pp0_iter30_reg;
        trunc_ln154_reg_1679_pp0_iter32_reg <= trunc_ln154_reg_1679_pp0_iter31_reg;
        trunc_ln154_reg_1679_pp0_iter33_reg <= trunc_ln154_reg_1679_pp0_iter32_reg;
        trunc_ln154_reg_1679_pp0_iter34_reg <= trunc_ln154_reg_1679_pp0_iter33_reg;
        trunc_ln154_reg_1679_pp0_iter35_reg <= trunc_ln154_reg_1679_pp0_iter34_reg;
        trunc_ln154_reg_1679_pp0_iter36_reg <= trunc_ln154_reg_1679_pp0_iter35_reg;
        trunc_ln154_reg_1679_pp0_iter37_reg <= trunc_ln154_reg_1679_pp0_iter36_reg;
        trunc_ln154_reg_1679_pp0_iter3_reg <= trunc_ln154_reg_1679_pp0_iter2_reg;
        trunc_ln154_reg_1679_pp0_iter4_reg <= trunc_ln154_reg_1679_pp0_iter3_reg;
        trunc_ln154_reg_1679_pp0_iter5_reg <= trunc_ln154_reg_1679_pp0_iter4_reg;
        trunc_ln154_reg_1679_pp0_iter6_reg <= trunc_ln154_reg_1679_pp0_iter5_reg;
        trunc_ln154_reg_1679_pp0_iter7_reg <= trunc_ln154_reg_1679_pp0_iter6_reg;
        trunc_ln154_reg_1679_pp0_iter8_reg <= trunc_ln154_reg_1679_pp0_iter7_reg;
        trunc_ln154_reg_1679_pp0_iter9_reg <= trunc_ln154_reg_1679_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln154_1_reg_1654_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln158_reg_1718 <= add_ln158_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bitcast_ln158_reg_1729 <= bitcast_ln158_fu_943_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_1610 <= grp_fu_635_p2;
        icmp_ln154_reg_1601 <= icmp_ln154_fu_641_p2;
        n_cast_reg_1605[31 : 0] <= n_cast_fu_646_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_trisolver_L_double_4_2_s_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
        buf_0_reg_1824 <= grp_trisolver_L_double_4_2_s_fu_602_ap_return_0;
        buf_1_1_fu_160 <= grp_trisolver_L_double_4_2_s_fu_602_ap_return_1;
        buf_1_reg_1829 <= grp_trisolver_L_double_4_2_s_fu_602_ap_return_1;
        buf_2_1_fu_164 <= grp_trisolver_L_double_4_2_s_fu_602_ap_return_2;
        buf_2_reg_1834 <= grp_trisolver_L_double_4_2_s_fu_602_ap_return_2;
        buf_3_1_fu_168 <= grp_trisolver_L_double_4_2_s_fu_602_ap_return_3;
        buf_3_reg_1839 <= grp_trisolver_L_double_4_2_s_fu_602_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_trisolver_U_double_4_2_s_fu_588_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state92))) begin
        buf_o_0_1_fu_172 <= grp_trisolver_U_double_4_2_s_fu_588_ap_return_0;
        buf_o_0_reg_1901 <= grp_trisolver_U_double_4_2_s_fu_588_ap_return_0;
        buf_o_1_1_fu_176 <= grp_trisolver_U_double_4_2_s_fu_588_ap_return_1;
        buf_o_1_reg_1906 <= grp_trisolver_U_double_4_2_s_fu_588_ap_return_1;
        buf_o_2_1_fu_180 <= grp_trisolver_U_double_4_2_s_fu_588_ap_return_2;
        buf_o_2_reg_1911 <= grp_trisolver_U_double_4_2_s_fu_588_ap_return_2;
        buf_o_3_1_fu_184 <= grp_trisolver_U_double_4_2_s_fu_588_ap_return_3;
        buf_o_3_reg_1916 <= grp_trisolver_U_double_4_2_s_fu_588_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) & (trunc_ln102_fu_1354_p1 == 2'd2) & (icmp_ln100_fu_1342_p2 == 1'd0))) begin
        dataX_3_1_fu_192 <= dataX_0_fu_1358_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) & (trunc_ln102_fu_1354_p1 == 2'd1) & (icmp_ln100_fu_1342_p2 == 1'd0))) begin
        dataX_3_2_fu_196 <= dataX_0_fu_1358_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) & (trunc_ln102_fu_1354_p1 == 2'd0) & (icmp_ln100_fu_1342_p2 == 1'd0))) begin
        dataX_3_3_fu_200 <= dataX_0_fu_1358_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) & (trunc_ln102_fu_1354_p1 == 2'd3) & (icmp_ln100_fu_1342_p2 == 1'd0))) begin
        dataX_3_fu_188 <= dataX_0_fu_1358_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln152_fu_665_p2 == 1'd0) & (icmp_ln154_reg_1601 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        empty_reg_1648 <= empty_fu_677_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln113_reg_1790 <= icmp_ln113_fu_995_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        icmp_ln168_reg_1937 <= icmp_ln168_fu_1392_p2;
        icmp_ln168_reg_1937_pp5_iter1_reg <= icmp_ln168_reg_1937;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp5_stage0_11001)) begin
        icmp_ln168_reg_1937_pp5_iter10_reg <= icmp_ln168_reg_1937_pp5_iter9_reg;
        icmp_ln168_reg_1937_pp5_iter11_reg <= icmp_ln168_reg_1937_pp5_iter10_reg;
        icmp_ln168_reg_1937_pp5_iter12_reg <= icmp_ln168_reg_1937_pp5_iter11_reg;
        icmp_ln168_reg_1937_pp5_iter13_reg <= icmp_ln168_reg_1937_pp5_iter12_reg;
        icmp_ln168_reg_1937_pp5_iter14_reg <= icmp_ln168_reg_1937_pp5_iter13_reg;
        icmp_ln168_reg_1937_pp5_iter15_reg <= icmp_ln168_reg_1937_pp5_iter14_reg;
        icmp_ln168_reg_1937_pp5_iter16_reg <= icmp_ln168_reg_1937_pp5_iter15_reg;
        icmp_ln168_reg_1937_pp5_iter17_reg <= icmp_ln168_reg_1937_pp5_iter16_reg;
        icmp_ln168_reg_1937_pp5_iter18_reg <= icmp_ln168_reg_1937_pp5_iter17_reg;
        icmp_ln168_reg_1937_pp5_iter19_reg <= icmp_ln168_reg_1937_pp5_iter18_reg;
        icmp_ln168_reg_1937_pp5_iter20_reg <= icmp_ln168_reg_1937_pp5_iter19_reg;
        icmp_ln168_reg_1937_pp5_iter21_reg <= icmp_ln168_reg_1937_pp5_iter20_reg;
        icmp_ln168_reg_1937_pp5_iter22_reg <= icmp_ln168_reg_1937_pp5_iter21_reg;
        icmp_ln168_reg_1937_pp5_iter23_reg <= icmp_ln168_reg_1937_pp5_iter22_reg;
        icmp_ln168_reg_1937_pp5_iter24_reg <= icmp_ln168_reg_1937_pp5_iter23_reg;
        icmp_ln168_reg_1937_pp5_iter25_reg <= icmp_ln168_reg_1937_pp5_iter24_reg;
        icmp_ln168_reg_1937_pp5_iter26_reg <= icmp_ln168_reg_1937_pp5_iter25_reg;
        icmp_ln168_reg_1937_pp5_iter27_reg <= icmp_ln168_reg_1937_pp5_iter26_reg;
        icmp_ln168_reg_1937_pp5_iter28_reg <= icmp_ln168_reg_1937_pp5_iter27_reg;
        icmp_ln168_reg_1937_pp5_iter29_reg <= icmp_ln168_reg_1937_pp5_iter28_reg;
        icmp_ln168_reg_1937_pp5_iter2_reg <= icmp_ln168_reg_1937_pp5_iter1_reg;
        icmp_ln168_reg_1937_pp5_iter30_reg <= icmp_ln168_reg_1937_pp5_iter29_reg;
        icmp_ln168_reg_1937_pp5_iter31_reg <= icmp_ln168_reg_1937_pp5_iter30_reg;
        icmp_ln168_reg_1937_pp5_iter32_reg <= icmp_ln168_reg_1937_pp5_iter31_reg;
        icmp_ln168_reg_1937_pp5_iter33_reg <= icmp_ln168_reg_1937_pp5_iter32_reg;
        icmp_ln168_reg_1937_pp5_iter34_reg <= icmp_ln168_reg_1937_pp5_iter33_reg;
        icmp_ln168_reg_1937_pp5_iter35_reg <= icmp_ln168_reg_1937_pp5_iter34_reg;
        icmp_ln168_reg_1937_pp5_iter36_reg <= icmp_ln168_reg_1937_pp5_iter35_reg;
        icmp_ln168_reg_1937_pp5_iter37_reg <= icmp_ln168_reg_1937_pp5_iter36_reg;
        icmp_ln168_reg_1937_pp5_iter38_reg <= icmp_ln168_reg_1937_pp5_iter37_reg;
        icmp_ln168_reg_1937_pp5_iter39_reg <= icmp_ln168_reg_1937_pp5_iter38_reg;
        icmp_ln168_reg_1937_pp5_iter3_reg <= icmp_ln168_reg_1937_pp5_iter2_reg;
        icmp_ln168_reg_1937_pp5_iter40_reg <= icmp_ln168_reg_1937_pp5_iter39_reg;
        icmp_ln168_reg_1937_pp5_iter41_reg <= icmp_ln168_reg_1937_pp5_iter40_reg;
        icmp_ln168_reg_1937_pp5_iter42_reg <= icmp_ln168_reg_1937_pp5_iter41_reg;
        icmp_ln168_reg_1937_pp5_iter43_reg <= icmp_ln168_reg_1937_pp5_iter42_reg;
        icmp_ln168_reg_1937_pp5_iter44_reg <= icmp_ln168_reg_1937_pp5_iter43_reg;
        icmp_ln168_reg_1937_pp5_iter45_reg <= icmp_ln168_reg_1937_pp5_iter44_reg;
        icmp_ln168_reg_1937_pp5_iter46_reg <= icmp_ln168_reg_1937_pp5_iter45_reg;
        icmp_ln168_reg_1937_pp5_iter47_reg <= icmp_ln168_reg_1937_pp5_iter46_reg;
        icmp_ln168_reg_1937_pp5_iter48_reg <= icmp_ln168_reg_1937_pp5_iter47_reg;
        icmp_ln168_reg_1937_pp5_iter49_reg <= icmp_ln168_reg_1937_pp5_iter48_reg;
        icmp_ln168_reg_1937_pp5_iter4_reg <= icmp_ln168_reg_1937_pp5_iter3_reg;
        icmp_ln168_reg_1937_pp5_iter50_reg <= icmp_ln168_reg_1937_pp5_iter49_reg;
        icmp_ln168_reg_1937_pp5_iter51_reg <= icmp_ln168_reg_1937_pp5_iter50_reg;
        icmp_ln168_reg_1937_pp5_iter52_reg <= icmp_ln168_reg_1937_pp5_iter51_reg;
        icmp_ln168_reg_1937_pp5_iter53_reg <= icmp_ln168_reg_1937_pp5_iter52_reg;
        icmp_ln168_reg_1937_pp5_iter54_reg <= icmp_ln168_reg_1937_pp5_iter53_reg;
        icmp_ln168_reg_1937_pp5_iter55_reg <= icmp_ln168_reg_1937_pp5_iter54_reg;
        icmp_ln168_reg_1937_pp5_iter56_reg <= icmp_ln168_reg_1937_pp5_iter55_reg;
        icmp_ln168_reg_1937_pp5_iter57_reg <= icmp_ln168_reg_1937_pp5_iter56_reg;
        icmp_ln168_reg_1937_pp5_iter58_reg <= icmp_ln168_reg_1937_pp5_iter57_reg;
        icmp_ln168_reg_1937_pp5_iter59_reg <= icmp_ln168_reg_1937_pp5_iter58_reg;
        icmp_ln168_reg_1937_pp5_iter5_reg <= icmp_ln168_reg_1937_pp5_iter4_reg;
        icmp_ln168_reg_1937_pp5_iter60_reg <= icmp_ln168_reg_1937_pp5_iter59_reg;
        icmp_ln168_reg_1937_pp5_iter61_reg <= icmp_ln168_reg_1937_pp5_iter60_reg;
        icmp_ln168_reg_1937_pp5_iter62_reg <= icmp_ln168_reg_1937_pp5_iter61_reg;
        icmp_ln168_reg_1937_pp5_iter63_reg <= icmp_ln168_reg_1937_pp5_iter62_reg;
        icmp_ln168_reg_1937_pp5_iter64_reg <= icmp_ln168_reg_1937_pp5_iter63_reg;
        icmp_ln168_reg_1937_pp5_iter65_reg <= icmp_ln168_reg_1937_pp5_iter64_reg;
        icmp_ln168_reg_1937_pp5_iter66_reg <= icmp_ln168_reg_1937_pp5_iter65_reg;
        icmp_ln168_reg_1937_pp5_iter67_reg <= icmp_ln168_reg_1937_pp5_iter66_reg;
        icmp_ln168_reg_1937_pp5_iter68_reg <= icmp_ln168_reg_1937_pp5_iter67_reg;
        icmp_ln168_reg_1937_pp5_iter69_reg <= icmp_ln168_reg_1937_pp5_iter68_reg;
        icmp_ln168_reg_1937_pp5_iter6_reg <= icmp_ln168_reg_1937_pp5_iter5_reg;
        icmp_ln168_reg_1937_pp5_iter7_reg <= icmp_ln168_reg_1937_pp5_iter6_reg;
        icmp_ln168_reg_1937_pp5_iter8_reg <= icmp_ln168_reg_1937_pp5_iter7_reg;
        icmp_ln168_reg_1937_pp5_iter9_reg <= icmp_ln168_reg_1937_pp5_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln87_reg_1844 <= icmp_ln87_fu_1177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_reg_1693_pp0_iter35_reg == 1'd1) & (trunc_ln154_reg_1679_pp0_iter35_reg == 1'd0) & (tmp_10_reg_1675_pp0_iter35_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        matB_0_0 <= bitcast_ln154_fu_915_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_reg_1693_pp0_iter35_reg == 1'd1) & (trunc_ln154_reg_1679_pp0_iter35_reg == 1'd0) & (tmp_10_reg_1675_pp0_iter35_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        matB_0_1 <= bitcast_ln154_fu_915_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_reg_1693_pp0_iter35_reg == 1'd1) & (trunc_ln154_reg_1679_pp0_iter35_reg == 1'd1) & (tmp_10_reg_1675_pp0_iter35_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        matB_1_0 <= bitcast_ln154_fu_915_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_reg_1693_pp0_iter35_reg == 1'd1) & (trunc_ln154_reg_1679_pp0_iter35_reg == 1'd1) & (tmp_10_reg_1675_pp0_iter35_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        matB_1_1 <= bitcast_ln154_fu_915_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln154_reg_1713 <= grp_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_1_fu_742_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln154_1_reg_1669 <= select_ln154_1_fu_767_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln87_fu_1177_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln87_1_reg_1859 <= select_ln87_1_fu_1209_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1177_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln87_reg_1853 <= select_ln87_fu_1201_p3;
        trunc_ln87_reg_1866 <= trunc_ln87_fu_1217_p1;
        trunc_ln91_reg_1871 <= trunc_ln91_fu_1221_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln168_reg_1937 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        tmp_s_reg_1956 <= tmp_s_fu_1447_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln168_fu_1392_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        trunc_ln170_1_reg_1946 <= trunc_ln170_1_fu_1403_p1;
        trunc_ln170_3_reg_1951 <= {{add_ln170_fu_1420_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        trunc_ln170_reg_1932 <= trunc_ln170_fu_1388_p1;
    end
end

always @ (*) begin
    if ((icmp_ln154_1_fu_742_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln113_fu_995_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state85 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state85 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln87_fu_1177_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state89 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state89 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln168_fu_1392_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state95 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state95 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln152_fu_665_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter70 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter69 == 1'b0) & (ap_enable_reg_pp5_iter68 == 1'b0) & (ap_enable_reg_pp5_iter67 == 1'b0) & (ap_enable_reg_pp5_iter66 == 1'b0) & (ap_enable_reg_pp5_iter65 == 1'b0) & (ap_enable_reg_pp5_iter64 == 1'b0) & (ap_enable_reg_pp5_iter63 == 1'b0) & (ap_enable_reg_pp5_iter62 == 1'b0) & (ap_enable_reg_pp5_iter61 == 1'b0) & (ap_enable_reg_pp5_iter60 == 1'b0) & (ap_enable_reg_pp5_iter59 == 1'b0) & (ap_enable_reg_pp5_iter58 == 1'b0) & (ap_enable_reg_pp5_iter57 == 1'b0) & (ap_enable_reg_pp5_iter56 == 1'b0) & (ap_enable_reg_pp5_iter55 == 1'b0) & (ap_enable_reg_pp5_iter54 == 1'b0) & (ap_enable_reg_pp5_iter53 == 1'b0) & (ap_enable_reg_pp5_iter52 == 1'b0) & (ap_enable_reg_pp5_iter51 == 1'b0) & (ap_enable_reg_pp5_iter50 == 1'b0) & (ap_enable_reg_pp5_iter49 == 1'b0) & (ap_enable_reg_pp5_iter48 == 1'b0) & (ap_enable_reg_pp5_iter47 == 1'b0) & (ap_enable_reg_pp5_iter46 == 1'b0) & (ap_enable_reg_pp5_iter45 == 1'b0) & (ap_enable_reg_pp5_iter44 == 1'b0) & (ap_enable_reg_pp5_iter43 == 1'b0) & (ap_enable_reg_pp5_iter42 == 1'b0) & (ap_enable_reg_pp5_iter41 == 1'b0) & (ap_enable_reg_pp5_iter40 == 1'b0) & (ap_enable_reg_pp5_iter39 == 1'b0) & (ap_enable_reg_pp5_iter38 == 1'b0) & (ap_enable_reg_pp5_iter37 == 1'b0) & (ap_enable_reg_pp5_iter36 == 1'b0) & (ap_enable_reg_pp5_iter35 == 1'b0) & (ap_enable_reg_pp5_iter34 == 1'b0) & (ap_enable_reg_pp5_iter33 == 1'b0) & (ap_enable_reg_pp5_iter32 == 1'b0) & (ap_enable_reg_pp5_iter31 == 1'b0) & (ap_enable_reg_pp5_iter30 == 1'b0) & (ap_enable_reg_pp5_iter29 == 1'b0) & (ap_enable_reg_pp5_iter28 == 1'b0) & (ap_enable_reg_pp5_iter27 == 1'b0) & (ap_enable_reg_pp5_iter26 == 1'b0) & (ap_enable_reg_pp5_iter25 == 1'b0) & (ap_enable_reg_pp5_iter24 == 1'b0) & (ap_enable_reg_pp5_iter23 == 1'b0) & (ap_enable_reg_pp5_iter22 == 1'b0) & (ap_enable_reg_pp5_iter21 == 1'b0) & (ap_enable_reg_pp5_iter20 == 1'b0) & (ap_enable_reg_pp5_iter19 == 1'b0) & (ap_enable_reg_pp5_iter18 == 1'b0) & (ap_enable_reg_pp5_iter17 == 1'b0) & (ap_enable_reg_pp5_iter16 == 1'b0) & (ap_enable_reg_pp5_iter15 == 1'b0) & (ap_enable_reg_pp5_iter14 == 1'b0) & (ap_enable_reg_pp5_iter13 == 1'b0) & (ap_enable_reg_pp5_iter12 == 1'b0) & (ap_enable_reg_pp5_iter11 == 1'b0) & (ap_enable_reg_pp5_iter10 == 1'b0) & (ap_enable_reg_pp5_iter9 == 1'b0) & (ap_enable_reg_pp5_iter8 == 1'b0) & (ap_enable_reg_pp5_iter7 == 1'b0) & (ap_enable_reg_pp5_iter6 == 1'b0) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd0) & (icmp_ln75_fu_960_p2 == 1'd0))) begin
        ap_phi_mux_P_0_231_phi_fu_490_p8 = zext_ln75_fu_952_p1;
    end else if ((((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd1) & (icmp_ln75_fu_960_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd2) & (icmp_ln75_fu_960_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd3) & (icmp_ln75_fu_960_p2 == 1'd0)))) begin
        ap_phi_mux_P_0_231_phi_fu_490_p8 = P_0_1_reg_411;
    end else begin
        ap_phi_mux_P_0_231_phi_fu_490_p8 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd1) & (icmp_ln75_fu_960_p2 == 1'd0))) begin
        ap_phi_mux_P_1_2_phi_fu_472_p8 = zext_ln75_fu_952_p1;
    end else if ((((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd0) & (icmp_ln75_fu_960_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd2) & (icmp_ln75_fu_960_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd3) & (icmp_ln75_fu_960_p2 == 1'd0)))) begin
        ap_phi_mux_P_1_2_phi_fu_472_p8 = P_1_1_reg_401;
    end else begin
        ap_phi_mux_P_1_2_phi_fu_472_p8 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd2) & (icmp_ln75_fu_960_p2 == 1'd0))) begin
        ap_phi_mux_P_2_2_phi_fu_454_p8 = zext_ln75_fu_952_p1;
    end else if ((((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd0) & (icmp_ln75_fu_960_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd1) & (icmp_ln75_fu_960_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd3) & (icmp_ln75_fu_960_p2 == 1'd0)))) begin
        ap_phi_mux_P_2_2_phi_fu_454_p8 = P_2_1_reg_391;
    end else begin
        ap_phi_mux_P_2_2_phi_fu_454_p8 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd0) & (icmp_ln75_fu_960_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd1) & (icmp_ln75_fu_960_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd2) & (icmp_ln75_fu_960_p2 == 1'd0)))) begin
        ap_phi_mux_P_3_2_phi_fu_436_p8 = P_3_1_reg_381;
    end else if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln77_fu_971_p1 == 2'd3) & (icmp_ln75_fu_960_p2 == 1'd0))) begin
        ap_phi_mux_P_3_2_phi_fu_436_p8 = zext_ln75_fu_952_p1;
    end else begin
        ap_phi_mux_P_3_2_phi_fu_436_p8 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_c_phi_fu_374_p4 = add_ln155_reg_1708;
    end else begin
        ap_phi_mux_c_phi_fu_374_p4 = c_reg_370;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1844 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        ap_phi_mux_i_4_phi_fu_530_p4 = select_ln87_1_reg_1859;
    end else begin
        ap_phi_mux_i_4_phi_fu_530_p4 = i_4_reg_526;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_352_p4 = add_ln154_2_reg_1658;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_352_p4 = indvar_flatten_reg_348;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_r_phi_fu_363_p4 = select_ln154_1_reg_1669;
    end else begin
        ap_phi_mux_r_phi_fu_363_p4 = r_reg_359;
    end
end

always @ (*) begin
    if (((icmp_ln152_fu_665_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        buf_i_address0 = zext_ln91_fu_1246_p1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        buf_i_address0 = grp_trisolver_U_double_4_2_s_fu_588_dataB_address0;
    end else begin
        buf_i_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        buf_i_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        buf_i_ce0 = grp_trisolver_U_double_4_2_s_fu_588_dataB_ce0;
    end else begin
        buf_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        buf_i_ce1 = grp_trisolver_U_double_4_2_s_fu_588_dataB_ce1;
    end else begin
        buf_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        buf_i_d0 = select_ln90_fu_1281_p3;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        buf_i_d0 = grp_trisolver_U_double_4_2_s_fu_588_dataB_d0;
    end else begin
        buf_i_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1844 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        buf_i_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        buf_i_we0 = grp_trisolver_U_double_4_2_s_fu_588_dataB_we0;
    end else begin
        buf_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        buf_i_we1 = grp_trisolver_U_double_4_2_s_fu_588_dataB_we1;
    end else begin
        buf_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dataC_address0 = zext_ln115_fu_1114_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        dataC_address0 = grp_trisolver_L_double_4_2_s_fu_602_dataB_address0;
    end else begin
        dataC_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dataC_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        dataC_ce0 = grp_trisolver_L_double_4_2_s_fu_602_dataB_ce0;
    end else begin
        dataC_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        dataC_ce1 = grp_trisolver_L_double_4_2_s_fu_602_dataB_ce1;
    end else begin
        dataC_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dataC_d0 = select_ln115_3_reg_1799;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        dataC_d0 = grp_trisolver_L_double_4_2_s_fu_602_dataB_d0;
    end else begin
        dataC_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln113_reg_1790 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dataC_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        dataC_we0 = grp_trisolver_L_double_4_2_s_fu_602_dataB_we0;
    end else begin
        dataC_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        dataC_we1 = grp_trisolver_L_double_4_2_s_fu_602_dataB_we1;
    end else begin
        dataC_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln154_1_reg_1654 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln168_reg_1937 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        gmem0_blk_n_AW = m_axi_gmem0_AWREADY;
    end else begin
        gmem0_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln168_reg_1937_pp5_iter69_reg == 1'd0) & (ap_enable_reg_pp5_iter70 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        gmem0_blk_n_B = m_axi_gmem0_BVALID;
    end else begin
        gmem0_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654_pp0_iter36_reg == 1'd0) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln154_1_reg_1654_pp0_iter35_reg == 1'd0) & (ap_enable_reg_pp0_iter35 == 1'b1) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln168_reg_1937_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        gmem0_blk_n_W = m_axi_gmem0_WREADY;
    end else begin
        gmem0_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_850_ce = 1'b1;
    end else begin
        grp_fu_850_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read = P_0_1_reg_411;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read = P_0_3_load_reg_1615;
    end else begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read1 = P_1_1_reg_401;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read1 = P_1_3_load_reg_1621;
    end else begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read2 = P_2_1_reg_391;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read2 = P_2_3_load_reg_1627;
    end else begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read3 = P_3_1_reg_381;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read3 = P_3_3_load_reg_1633;
    end else begin
        grp_getrf_core_double_2_4_2_s_fu_570_p_read3 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem0_ARADDR = sext_ln158_fu_905_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln154_1_reg_1654 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_axi_gmem0_ARADDR = sext_ln154_1_fu_855_p1;
    end else begin
        m_axi_gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln154_1_reg_1654 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        m_axi_gmem0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln168_reg_1937 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        m_axi_gmem0_AWVALID = 1'b1;
    end else begin
        m_axi_gmem0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln168_reg_1937_pp5_iter69_reg == 1'd0) & (ap_enable_reg_pp5_iter70 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        m_axi_gmem0_BREADY = 1'b1;
    end else begin
        m_axi_gmem0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_1_reg_1654_pp0_iter36_reg == 1'd0) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln154_1_reg_1654_pp0_iter35_reg == 1'd0) & (ap_enable_reg_pp0_iter35 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln168_reg_1937_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        m_axi_gmem0_WVALID = 1'b1;
    end else begin
        m_axi_gmem0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        matA_0_address0 = zext_ln158_fu_947_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        matA_0_address0 = grp_trisolver_L_double_4_2_s_fu_602_matA_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        matA_0_address0 = grp_trisolver_U_double_4_2_s_fu_588_matA_0_address0;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_0_address0 = grp_getrf_core_double_2_4_2_s_fu_570_matA_0_address0;
    end else begin
        matA_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        matA_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        matA_0_ce0 = grp_trisolver_L_double_4_2_s_fu_602_matA_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        matA_0_ce0 = grp_trisolver_U_double_4_2_s_fu_588_matA_0_ce0;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_0_ce0 = grp_getrf_core_double_2_4_2_s_fu_570_matA_0_ce0;
    end else begin
        matA_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_0_ce1 = grp_getrf_core_double_2_4_2_s_fu_570_matA_0_ce1;
    end else begin
        matA_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        matA_0_d0 = bitcast_ln158_reg_1729;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_0_d0 = grp_getrf_core_double_2_4_2_s_fu_570_matA_0_d0;
    end else begin
        matA_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln154_reg_1679_pp0_iter37_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        matA_0_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_0_we0 = grp_getrf_core_double_2_4_2_s_fu_570_matA_0_we0;
    end else begin
        matA_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_0_we1 = grp_getrf_core_double_2_4_2_s_fu_570_matA_0_we1;
    end else begin
        matA_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        matA_1_address0 = zext_ln158_fu_947_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        matA_1_address0 = grp_trisolver_L_double_4_2_s_fu_602_matA_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        matA_1_address0 = grp_trisolver_U_double_4_2_s_fu_588_matA_1_address0;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_1_address0 = grp_getrf_core_double_2_4_2_s_fu_570_matA_1_address0;
    end else begin
        matA_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        matA_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        matA_1_ce0 = grp_trisolver_L_double_4_2_s_fu_602_matA_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        matA_1_ce0 = grp_trisolver_U_double_4_2_s_fu_588_matA_1_ce0;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_1_ce0 = grp_getrf_core_double_2_4_2_s_fu_570_matA_1_ce0;
    end else begin
        matA_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_1_ce1 = grp_getrf_core_double_2_4_2_s_fu_570_matA_1_ce1;
    end else begin
        matA_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        matA_1_d0 = bitcast_ln158_reg_1729;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_1_d0 = grp_getrf_core_double_2_4_2_s_fu_570_matA_1_d0;
    end else begin
        matA_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln154_reg_1679_pp0_iter37_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        matA_1_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_1_we0 = grp_getrf_core_double_2_4_2_s_fu_570_matA_1_we0;
    end else begin
        matA_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state4))) begin
        matA_1_we1 = grp_getrf_core_double_2_4_2_s_fu_570_matA_1_we1;
    end else begin
        matA_1_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln152_fu_665_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln152_fu_665_p2 == 1'd0) & (icmp_ln154_reg_1601 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_getrf_core_double_2_4_2_s_fu_570_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln154_1_fu_742_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln154_1_fu_742_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter36 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter36 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln75_fu_960_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((grp_getrf_core_double_2_4_2_s_fu_570_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln113_fu_995_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln113_fu_995_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((grp_trisolver_L_double_4_2_s_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln87_fu_1177_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln87_fu_1177_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            if (((grp_trisolver_U_double_4_2_s_fu_588_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state92))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end
        end
        ap_ST_fsm_state93 : begin
            if (((1'b1 == ap_CS_fsm_state93) & (icmp_ln100_fu_1342_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln168_fu_1392_p2 == 1'd1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter70 == 1'b1) & (ap_enable_reg_pp5_iter69 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln168_fu_1392_p2 == 1'd1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter70 == 1'b1) & (ap_enable_reg_pp5_iter69 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state166;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_fu_1348_p2 = (i_5_reg_548 + 3'd1);

assign add_ln113_fu_1000_p2 = (i_reg_504 + 31'd1);

assign add_ln115_fu_1108_p2 = (tmp_3_fu_1090_p3 + div10_i_udiv_fu_1098_p4);

assign add_ln152_fu_671_p2 = (j_reg_336 + 2'd1);

assign add_ln154_1_fu_877_p2 = (sext_ln160_1_mid2_v_v_v_v_fu_870_p3 + A);

assign add_ln154_2_fu_747_p2 = (ap_phi_mux_indvar_flatten_phi_fu_352_p4 + 62'd1);

assign add_ln154_fu_753_p2 = (31'd1 + ap_phi_mux_r_phi_fu_363_p4);

assign add_ln155_fu_865_p2 = (select_ln154_reg_1663 + 4'd1);

assign add_ln158_1_fu_835_p2 = (trunc_ln158_fu_831_p1 + tmp_2_fu_783_p3);

assign add_ln158_fu_899_p2 = ($signed(zext_ln155_1_fu_896_p1) + $signed(sext_ln154_fu_892_p1));

assign add_ln168_fu_1397_p2 = (r_4_reg_559 + 32'd1);

assign add_ln170_fu_1420_p2 = (B + zext_ln170_fu_1416_p1);

assign add_ln75_fu_965_p2 = (P_0_5_reg_421 + 31'd1);

assign add_ln87_1_fu_1183_p2 = (indvar_flatten25_reg_515 + 3'd1);

assign add_ln87_fu_1189_p2 = (2'd1 + ap_phi_mux_i_4_phi_fu_530_p4);

assign add_ln88_fu_1225_p2 = (2'd1 + select_ln87_fu_1201_p3);

assign add_ln90_fu_1251_p2 = (select_ln87_reg_1853 + shl_ln87_fu_1231_p2);

assign add_ln91_fu_1241_p2 = (select_ln87_1_reg_1859 + shl_ln91_fu_1236_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state166 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd17];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln154_1_reg_1654_pp0_iter36_reg == 1'd0) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln154_1_reg_1654_pp0_iter36_reg == 1'd0) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln154_1_reg_1654_pp0_iter35_reg == 1'd0) & (ap_enable_reg_pp0_iter35 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln154_1_reg_1654_pp0_iter35_reg == 1'd0) & (ap_enable_reg_pp0_iter35 == 1'b1)));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_01001 = ((m_axi_gmem0_BVALID == 1'b0) & (icmp_ln168_reg_1937_pp5_iter69_reg == 1'd0) & (ap_enable_reg_pp5_iter70 == 1'b1));
end

always @ (*) begin
    ap_block_pp5_stage0_11001 = (((m_axi_gmem0_BVALID == 1'b0) & (icmp_ln168_reg_1937_pp5_iter69_reg == 1'd0) & (ap_enable_reg_pp5_iter70 == 1'b1)) | ((1'b1 == ap_block_state97_io) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((1'b1 == ap_block_state96_io) & (ap_enable_reg_pp5_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = (((m_axi_gmem0_BVALID == 1'b0) & (icmp_ln168_reg_1937_pp5_iter69_reg == 1'd0) & (ap_enable_reg_pp5_iter70 == 1'b1)) | ((1'b1 == ap_block_state97_io) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((1'b1 == ap_block_state96_io) & (ap_enable_reg_pp5_iter1 == 1'b1)));
end

assign ap_block_state100_pp5_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp5_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp5_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp5_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp5_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp5_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp5_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp5_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp5_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp5_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp5_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp5_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp5_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp5_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp5_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp5_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp5_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp5_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp5_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp5_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp5_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp5_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp5_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp5_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp5_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp5_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp5_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp5_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp5_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp5_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp5_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp5_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp5_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp5_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp5_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp5_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp5_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp5_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp5_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp5_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp5_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp5_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp5_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp5_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp5_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp5_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp5_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp5_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp5_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp5_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp5_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp5_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp5_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp5_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp5_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp5_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp5_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp5_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp5_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state159_pp5_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state160_pp5_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp5_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp5_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp5_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state164_pp5_stage0_iter69 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state165_pp5_stage0_iter70 = ((m_axi_gmem0_BVALID == 1'b0) & (icmp_ln168_reg_1937_pp5_iter69_reg == 1'd0));
end

assign ap_block_state16_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage1_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage1_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage1_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage1_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage1_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_gmem0_ARREADY == 1'b0) & (icmp_ln154_1_reg_1654 == 1'd0));
end

assign ap_block_state6_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage1_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage1_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage1_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state76_pp0_stage1_iter35 = ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln154_1_reg_1654_pp0_iter35_reg == 1'd0));
end

assign ap_block_state77_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage1_iter36 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state79_pp0_stage0_iter37 = ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln154_1_reg_1654_pp0_iter36_reg == 1'd0));
end

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage1_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state96_io = ((m_axi_gmem0_AWREADY == 1'b0) & (icmp_ln168_reg_1937 == 1'd0));
end

assign ap_block_state96_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state97_io = ((m_axi_gmem0_WREADY == 1'b0) & (icmp_ln168_reg_1937_pp5_iter1_reg == 1'd0));
end

assign ap_block_state97_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_gmem0_ARREADY == 1'b0) & (icmp_ln154_1_reg_1654_pp0_iter1_reg == 1'd0));
end

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign bitcast_ln154_fu_915_p1 = m_axi_gmem0_RDATA;

assign bitcast_ln158_fu_943_p1 = m_axi_gmem0_RDATA;

assign cast_fu_631_p1 = n;

assign dataX_0_fu_1358_p5 = i_5_reg_548[1:0];

assign div10_i_udiv_fu_1098_p4 = {{i_reg_504[2:1]}};

assign empty_42_fu_718_p2 = (p_cast44_fu_714_p1 + B);

assign empty_fu_677_p1 = j_reg_336[0:0];

assign grp_fu_635_p0 = cast_fu_631_p1;

assign grp_fu_635_p1 = cast_fu_631_p1;

assign grp_fu_850_p0 = grp_fu_850_p00;

assign grp_fu_850_p00 = select_ln154_1_reg_1669;

assign grp_fu_850_p1 = n_cast_reg_1605;

assign grp_getrf_core_double_2_4_2_s_fu_570_ap_start = grp_getrf_core_double_2_4_2_s_fu_570_ap_start_reg;

assign grp_trisolver_L_double_4_2_s_fu_602_ap_start = grp_trisolver_L_double_4_2_s_fu_602_ap_start_reg;

assign grp_trisolver_U_double_4_2_s_fu_588_ap_start = grp_trisolver_U_double_4_2_s_fu_588_ap_start_reg;

assign icmp_ln100_fu_1342_p2 = ((i_5_reg_548 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_995_p2 = ((zext_ln113_fu_991_p1 == n) ? 1'b1 : 1'b0);

assign icmp_ln152_fu_665_p2 = ((j_reg_336 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln154_1_fu_742_p2 = ((zext_ln154_1_fu_701_p1 == bound_reg_1610) ? 1'b1 : 1'b0);

assign icmp_ln154_fu_641_p2 = (($signed(n) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_737_p2 = ((zext_ln155_fu_733_p1 == n) ? 1'b1 : 1'b0);

assign icmp_ln159_fu_841_p2 = ((select_ln154_fu_759_p3 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln168_fu_1392_p2 = ((r_4_reg_559 == n) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_960_p2 = ((zext_ln75_fu_952_p1 == n) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_1177_p2 = ((indvar_flatten25_reg_515 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1195_p2 = ((k_reg_537 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_1260_p2 = (($signed(zext_ln90_fu_1256_p1) < $signed(n)) ? 1'b1 : 1'b0);

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd1;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_AWADDR = sext_ln170_fu_1460_p1;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd1;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_WDATA = tmp_s_reg_1956;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 8'd255;

assign m_axi_gmem0_WUSER = 1'd0;

assign n_cast_fu_646_p1 = n;

assign p_cast44_fu_714_p1 = tmp_fu_705_p4;

assign p_cast44_mid1_fu_800_p1 = p_mid_fu_791_p4;

assign p_mid119_fu_804_p2 = (p_cast44_mid1_fu_800_p1 + B);

assign p_mid_fu_791_p4 = {{{add_ln154_fu_753_p2}, {empty_reg_1648}}, {3'd0}};

assign select_ln115_1_fu_1072_p3 = ((select_ln115_fu_1054_p3[0:0] === 1'b1) ? matB_0_1_load_reg_1785 : matB_0_0_load_reg_1780);

assign select_ln115_2_fu_1066_p3 = ((select_ln115_fu_1054_p3[0:0] === 1'b1) ? matB_1_1_load_reg_1775 : matB_1_0_load_reg_1770);

assign select_ln115_3_fu_1078_p3 = ((trunc_ln115_2_fu_1062_p1[0:0] === 1'b1) ? select_ln115_2_fu_1066_p3 : select_ln115_1_fu_1072_p3);

assign select_ln115_fu_1054_p3 = ((tmp_11_fu_1024_p3[0:0] === 1'b1) ? tmp_12_fu_1038_p3 : tmp_13_fu_1046_p3);

assign select_ln154_1_fu_767_p3 = ((icmp_ln155_fu_737_p2[0:0] === 1'b1) ? add_ln154_fu_753_p2 : ap_phi_mux_r_phi_fu_363_p4);

assign select_ln154_2_fu_823_p3 = ((icmp_ln155_fu_737_p2[0:0] === 1'b1) ? trunc_ln160_mid1_fu_813_p4 : trunc_ln_fu_723_p4);

assign select_ln154_fu_759_p3 = ((icmp_ln155_fu_737_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_c_phi_fu_374_p4);

assign select_ln87_1_fu_1209_p3 = ((icmp_ln88_fu_1195_p2[0:0] === 1'b1) ? add_ln87_fu_1189_p2 : ap_phi_mux_i_4_phi_fu_530_p4);

assign select_ln87_fu_1201_p3 = ((icmp_ln88_fu_1195_p2[0:0] === 1'b1) ? 2'd0 : k_reg_537);

assign select_ln90_fu_1281_p3 = ((icmp_ln90_fu_1260_p2[0:0] === 1'b1) ? tmp_9_fu_1271_p6 : 64'd0);

assign sext_ln154_1_fu_855_p1 = $signed(select_ln154_2_reg_1683);

assign sext_ln154_fu_892_p1 = $signed(sext_ln160_1_mid2_v_fu_882_p4);

assign sext_ln158_fu_905_p1 = $signed(add_ln158_reg_1718);

assign sext_ln160_1_mid2_v_fu_882_p4 = {{add_ln154_1_fu_877_p2[63:3]}};

assign sext_ln160_1_mid2_v_v_v_v_fu_870_p3 = {{mul_ln154_reg_1713}, {3'd0}};

assign sext_ln170_fu_1460_p1 = $signed(trunc_ln170_3_reg_1951);

assign shl_ln87_fu_1231_p2 = select_ln87_1_reg_1859 << 2'd1;

assign shl_ln91_fu_1236_p2 = select_ln87_reg_1853 << 2'd1;

assign shl_ln_fu_1407_p4 = {{{r_4_reg_559}, {trunc_ln170_reg_1932}}, {3'd0}};

assign sub_ln115_fu_1032_p2 = (2'd0 - trunc_ln115_1_fu_1020_p1);

assign tmp_10_fu_775_p3 = select_ln154_1_fu_767_p3[32'd1];

assign tmp_11_fu_1024_p3 = tmp_7_fu_1010_p6[32'd31];

assign tmp_12_fu_1038_p3 = sub_ln115_fu_1032_p2[32'd1];

assign tmp_13_fu_1046_p3 = tmp_7_fu_1010_p6[32'd1];

assign tmp_2_fu_783_p3 = {{tmp_10_fu_775_p3}, {2'd0}};

assign tmp_3_fu_1090_p3 = {{trunc_ln115_3_fu_1086_p1}, {1'd0}};

assign tmp_7_fu_1010_p5 = i_reg_504[1:0];

assign tmp_9_fu_1271_p5 = {{trunc_ln87_reg_1866}, {trunc_ln91_reg_1871}};

assign tmp_fu_705_p4 = {{{ap_phi_mux_r_phi_fu_363_p4}, {empty_reg_1648}}, {3'd0}};

assign trunc_ln102_fu_1354_p1 = i_5_reg_548[1:0];

assign trunc_ln115_1_fu_1020_p1 = tmp_7_fu_1010_p6[1:0];

assign trunc_ln115_2_fu_1062_p1 = tmp_7_fu_1010_p6[0:0];

assign trunc_ln115_3_fu_1086_p1 = i_reg_504[0:0];

assign trunc_ln154_fu_809_p1 = select_ln154_1_fu_767_p3[0:0];

assign trunc_ln158_fu_831_p1 = select_ln154_fu_759_p3[2:0];

assign trunc_ln160_mid1_fu_813_p4 = {{p_mid119_fu_804_p2[63:3]}};

assign trunc_ln170_1_fu_1403_p1 = r_4_reg_559[1:0];

assign trunc_ln170_fu_1388_p1 = j_reg_336[0:0];

assign trunc_ln77_fu_971_p1 = P_0_5_reg_421[1:0];

assign trunc_ln87_fu_1217_p1 = select_ln87_1_fu_1209_p3[0:0];

assign trunc_ln91_fu_1221_p1 = select_ln87_fu_1201_p3[0:0];

assign trunc_ln_fu_723_p4 = {{empty_42_fu_718_p2[63:3]}};

assign zext_ln113_fu_991_p1 = i_reg_504;

assign zext_ln115_fu_1114_p1 = add_ln115_reg_1804;

assign zext_ln154_1_fu_701_p1 = ap_phi_mux_indvar_flatten_phi_fu_352_p4;

assign zext_ln155_1_fu_896_p1 = select_ln154_reg_1663_pp0_iter1_reg;

assign zext_ln155_fu_733_p1 = ap_phi_mux_c_phi_fu_374_p4;

assign zext_ln158_fu_947_p1 = add_ln158_1_reg_1688_pp0_iter37_reg;

assign zext_ln170_fu_1416_p1 = shl_ln_fu_1407_p4;

assign zext_ln75_fu_952_p1 = P_0_5_reg_421;

assign zext_ln90_fu_1256_p1 = add_ln90_fu_1251_p2;

assign zext_ln91_fu_1246_p1 = add_ln91_fu_1241_p2;

always @ (posedge ap_clk) begin
    n_cast_reg_1605[60:32] <= 29'b00000000000000000000000000000;
end

endmodule //kernel_gelinearsolver_0_gelinearsolver_double_4_2_s
